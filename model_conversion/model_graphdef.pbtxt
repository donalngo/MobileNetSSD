node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Conv1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1_pad/Pad"
  op: "Pad"
  input: "input_1"
  input: "Conv1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv1/kernel/Initializer/random_uniform/max"
  input: "Conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Conv1/kernel/Initializer/random_uniform/mul"
  input: "Conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv1/kernel"
    }
  }
}
node {
  name: "Conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv1/kernel"
}
node {
  name: "Conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "Conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/Conv2D"
  op: "Conv2D"
  input: "Conv1_pad/Pad"
  input: "Conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn_Conv1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/gamma"
    }
  }
}
node {
  name: "bn_Conv1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/gamma"
}
node {
  name: "bn_Conv1/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_Conv1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/beta"
    }
  }
}
node {
  name: "bn_Conv1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/beta"
}
node {
  name: "bn_Conv1/beta/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_Conv1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/moving_mean"
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_mean"
}
node {
  name: "bn_Conv1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/moving_variance"
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_variance"
}
node {
  name: "bn_Conv1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/switch_t"
  op: "Identity"
  input: "bn_Conv1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/switch_f"
  op: "Identity"
  input: "bn_Conv1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Const"
  op: "Const"
  input: "^bn_Conv1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Const_1"
  op: "Const"
  input: "^bn_Conv1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "bn_Conv1/cond/FusedBatchNormV3/Switch:1"
  input: "bn_Conv1/cond/ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_1"
  input: "bn_Conv1/cond/Const"
  input: "bn_Conv1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "Conv1/Conv2D"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/Conv2D"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/Switch"
  input: "bn_Conv1/cond/ReadVariableOp_2"
  input: "bn_Conv1/cond/ReadVariableOp_3"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "Conv1/Conv2D"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/Conv2D"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1"
  input: "bn_Conv1/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge_1"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1:1"
  input: "bn_Conv1/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge_2"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1:2"
  input: "bn_Conv1/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/switch_t"
  op: "Identity"
  input: "bn_Conv1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/switch_f"
  op: "Identity"
  input: "bn_Conv1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Const"
  op: "Const"
  input: "^bn_Conv1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Const_1"
  op: "Const"
  input: "^bn_Conv1/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Merge"
  op: "Merge"
  input: "bn_Conv1/cond_1/Const_1"
  input: "bn_Conv1/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg/sub/x"
  input: "bn_Conv1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg/ReadVariableOp"
  input: "bn_Conv1/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn_Conv1/AssignMovingAvg/sub_1"
  input: "bn_Conv1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "^bn_Conv1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg_1/sub/x"
  input: "bn_Conv1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp"
  input: "bn_Conv1/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn_Conv1/AssignMovingAvg_1/sub_1"
  input: "bn_Conv1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "^bn_Conv1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1_relu/Relu6"
  op: "Relu6"
  input: "bn_Conv1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Conv1_relu/Relu6"
  input: "expanded_conv_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/gamma"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/gamma"
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/beta"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/beta"
}
node {
  name: "expanded_conv_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Const"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1"
  input: "expanded_conv_depthwise_BN/cond/Const"
  input: "expanded_conv_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise/depthwise"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise/depthwise"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond_1/Const_1"
  input: "expanded_conv_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub/x"
  input: "expanded_conv_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub_1"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "^expanded_conv_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "expanded_conv_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "^expanded_conv_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_relu/Relu6"
  op: "Relu6"
  input: "expanded_conv_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/max"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/mul"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project/kernel"
    }
  }
}
node {
  name: "expanded_conv_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project/kernel"
}
node {
  name: "expanded_conv_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "expanded_conv_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/Conv2D"
  op: "Conv2D"
  input: "expanded_conv_depthwise_relu/Relu6"
  input: "expanded_conv_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/gamma"
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/gamma"
}
node {
  name: "expanded_conv_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/beta"
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/beta"
}
node {
  name: "expanded_conv_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/moving_mean"
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_mean"
}
node {
  name: "expanded_conv_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/moving_variance"
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_variance"
}
node {
  name: "expanded_conv_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/switch_t"
  op: "Identity"
  input: "expanded_conv_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/switch_f"
  op: "Identity"
  input: "expanded_conv_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Const"
  op: "Const"
  input: "^expanded_conv_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Const_1"
  op: "Const"
  input: "^expanded_conv_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "expanded_conv_project_BN/cond/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_1"
  input: "expanded_conv_project_BN/cond/Const"
  input: "expanded_conv_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "expanded_conv_project/Conv2D"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/Conv2D"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_2"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "expanded_conv_project/Conv2D"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/Conv2D"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge_1"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1:1"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge_2"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1:2"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "expanded_conv_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "expanded_conv_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Const"
  op: "Const"
  input: "^expanded_conv_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^expanded_conv_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Merge"
  op: "Merge"
  input: "expanded_conv_project_BN/cond_1/Const_1"
  input: "expanded_conv_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub/x"
  input: "expanded_conv_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub_1"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "^expanded_conv_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub/x"
  input: "expanded_conv_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub_1"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "^expanded_conv_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_expand/kernel/Initializer/random_uniform/max"
  input: "block_1_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_expand/kernel/Initializer/random_uniform/mul"
  input: "block_1_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand/kernel"
    }
  }
}
node {
  name: "block_1_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand/kernel"
}
node {
  name: "block_1_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "block_1_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/Conv2D"
  op: "Conv2D"
  input: "expanded_conv_project_BN/cond/Merge"
  input: "block_1_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/gamma"
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/gamma"
}
node {
  name: "block_1_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/beta"
    }
  }
}
node {
  name: "block_1_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/beta"
}
node {
  name: "block_1_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_mean"
}
node {
  name: "block_1_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_variance"
}
node {
  name: "block_1_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Const"
  op: "Const"
  input: "^block_1_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_expand_BN/cond/ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_1"
  input: "block_1_expand_BN/cond/Const"
  input: "block_1_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_expand/Conv2D"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_expand_BN/cond/ReadVariableOp_2"
  input: "block_1_expand_BN/cond/ReadVariableOp_3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_expand/Conv2D"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_1_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_expand_BN/cond_1/Const_1"
  input: "block_1_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg/sub/x"
  input: "block_1_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_expand_BN/AssignMovingAvg/sub_1"
  input: "block_1_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "^block_1_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "^block_1_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_relu/Relu6"
  op: "Relu6"
  input: "block_1_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_pad/Pad"
  op: "Pad"
  input: "block_1_expand_relu/Relu6"
  input: "block_1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise/depthwise_kernel"
}
node {
  name: "block_1_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_1_pad/Pad"
  input: "block_1_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/gamma"
}
node {
  name: "block_1_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/beta"
}
node {
  name: "block_1_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_mean"
}
node {
  name: "block_1_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_variance"
}
node {
  name: "block_1_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_1_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_depthwise_BN/cond/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_1_depthwise_BN/cond/Const"
  input: "block_1_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_depthwise/depthwise"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_depthwise/depthwise"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_depthwise_BN/cond_1/Const_1"
  input: "block_1_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_1_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "^block_1_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "^block_1_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_1_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_project/kernel/Initializer/random_uniform/max"
  input: "block_1_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_project/kernel/Initializer/random_uniform/mul"
  input: "block_1_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project/kernel"
    }
  }
}
node {
  name: "block_1_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project/kernel"
}
node {
  name: "block_1_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "block_1_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/Conv2D"
  op: "Conv2D"
  input: "block_1_depthwise_relu/Relu6"
  input: "block_1_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/gamma"
    }
  }
}
node {
  name: "block_1_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/gamma"
}
node {
  name: "block_1_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/beta"
    }
  }
}
node {
  name: "block_1_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/beta"
}
node {
  name: "block_1_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_mean"
}
node {
  name: "block_1_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_variance"
}
node {
  name: "block_1_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Const"
  op: "Const"
  input: "^block_1_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_project_BN/cond/ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_1"
  input: "block_1_project_BN/cond/Const"
  input: "block_1_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_project/Conv2D"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_project_BN/cond/ReadVariableOp_2"
  input: "block_1_project_BN/cond/ReadVariableOp_3"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_project/Conv2D"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1"
  input: "block_1_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_project_BN/cond_1/Const_1"
  input: "block_1_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg/sub/x"
  input: "block_1_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_project_BN/AssignMovingAvg/sub_1"
  input: "block_1_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "^block_1_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "^block_1_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_expand/kernel/Initializer/random_uniform/max"
  input: "block_2_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_expand/kernel/Initializer/random_uniform/mul"
  input: "block_2_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand/kernel"
    }
  }
}
node {
  name: "block_2_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand/kernel"
}
node {
  name: "block_2_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "block_2_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/Conv2D"
  op: "Conv2D"
  input: "block_1_project_BN/cond/Merge"
  input: "block_2_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/gamma"
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/gamma"
}
node {
  name: "block_2_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/beta"
    }
  }
}
node {
  name: "block_2_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/beta"
}
node {
  name: "block_2_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_mean"
}
node {
  name: "block_2_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_variance"
}
node {
  name: "block_2_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Const"
  op: "Const"
  input: "^block_2_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_expand_BN/cond/ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_1"
  input: "block_2_expand_BN/cond/Const"
  input: "block_2_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_expand/Conv2D"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_expand_BN/cond/ReadVariableOp_2"
  input: "block_2_expand_BN/cond/ReadVariableOp_3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_expand/Conv2D"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_2_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_expand_BN/cond_1/Const_1"
  input: "block_2_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg/sub/x"
  input: "block_2_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_expand_BN/AssignMovingAvg/sub_1"
  input: "block_2_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "^block_2_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "^block_2_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_relu/Relu6"
  op: "Relu6"
  input: "block_2_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise/depthwise_kernel"
}
node {
  name: "block_2_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_2_expand_relu/Relu6"
  input: "block_2_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/gamma"
}
node {
  name: "block_2_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/beta"
}
node {
  name: "block_2_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_mean"
}
node {
  name: "block_2_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_variance"
}
node {
  name: "block_2_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_2_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_depthwise_BN/cond/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_2_depthwise_BN/cond/Const"
  input: "block_2_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_depthwise/depthwise"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_depthwise/depthwise"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_depthwise_BN/cond_1/Const_1"
  input: "block_2_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_2_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "^block_2_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "^block_2_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_2_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_project/kernel/Initializer/random_uniform/max"
  input: "block_2_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_project/kernel/Initializer/random_uniform/mul"
  input: "block_2_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project/kernel"
    }
  }
}
node {
  name: "block_2_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project/kernel"
}
node {
  name: "block_2_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "block_2_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/Conv2D"
  op: "Conv2D"
  input: "block_2_depthwise_relu/Relu6"
  input: "block_2_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/gamma"
    }
  }
}
node {
  name: "block_2_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/gamma"
}
node {
  name: "block_2_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/beta"
    }
  }
}
node {
  name: "block_2_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/beta"
}
node {
  name: "block_2_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_mean"
}
node {
  name: "block_2_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_variance"
}
node {
  name: "block_2_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Const"
  op: "Const"
  input: "^block_2_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_project_BN/cond/ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_1"
  input: "block_2_project_BN/cond/Const"
  input: "block_2_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_project/Conv2D"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_project_BN/cond/ReadVariableOp_2"
  input: "block_2_project_BN/cond/ReadVariableOp_3"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_project/Conv2D"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1"
  input: "block_2_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_project_BN/cond_1/Const_1"
  input: "block_2_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg/sub/x"
  input: "block_2_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_project_BN/AssignMovingAvg/sub_1"
  input: "block_2_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "^block_2_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "^block_2_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_add/add"
  op: "AddV2"
  input: "block_1_project_BN/cond/Merge"
  input: "block_2_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_expand/kernel/Initializer/random_uniform/max"
  input: "block_3_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_expand/kernel/Initializer/random_uniform/mul"
  input: "block_3_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand/kernel"
    }
  }
}
node {
  name: "block_3_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand/kernel"
}
node {
  name: "block_3_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "block_3_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/Conv2D"
  op: "Conv2D"
  input: "block_2_add/add"
  input: "block_3_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/gamma"
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/gamma"
}
node {
  name: "block_3_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/beta"
    }
  }
}
node {
  name: "block_3_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/beta"
}
node {
  name: "block_3_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_mean"
}
node {
  name: "block_3_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_variance"
}
node {
  name: "block_3_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Const"
  op: "Const"
  input: "^block_3_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_expand_BN/cond/ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_1"
  input: "block_3_expand_BN/cond/Const"
  input: "block_3_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_expand/Conv2D"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_expand_BN/cond/ReadVariableOp_2"
  input: "block_3_expand_BN/cond/ReadVariableOp_3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_expand/Conv2D"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_3_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_expand_BN/cond_1/Const_1"
  input: "block_3_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg/sub/x"
  input: "block_3_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_expand_BN/AssignMovingAvg/sub_1"
  input: "block_3_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "^block_3_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "^block_3_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_relu/Relu6"
  op: "Relu6"
  input: "block_3_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_pad/Pad"
  op: "Pad"
  input: "block_3_expand_relu/Relu6"
  input: "block_3_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise/depthwise_kernel"
}
node {
  name: "block_3_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_3_pad/Pad"
  input: "block_3_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/gamma"
}
node {
  name: "block_3_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/beta"
}
node {
  name: "block_3_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_mean"
}
node {
  name: "block_3_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_variance"
}
node {
  name: "block_3_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_3_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_depthwise_BN/cond/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_3_depthwise_BN/cond/Const"
  input: "block_3_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_depthwise/depthwise"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_depthwise/depthwise"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_depthwise_BN/cond_1/Const_1"
  input: "block_3_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_3_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "^block_3_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "^block_3_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_3_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_project/kernel/Initializer/random_uniform/max"
  input: "block_3_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_project/kernel/Initializer/random_uniform/mul"
  input: "block_3_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project/kernel"
    }
  }
}
node {
  name: "block_3_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project/kernel"
}
node {
  name: "block_3_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "block_3_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/Conv2D"
  op: "Conv2D"
  input: "block_3_depthwise_relu/Relu6"
  input: "block_3_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/gamma"
    }
  }
}
node {
  name: "block_3_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/gamma"
}
node {
  name: "block_3_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/beta"
    }
  }
}
node {
  name: "block_3_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/beta"
}
node {
  name: "block_3_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_mean"
}
node {
  name: "block_3_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_variance"
}
node {
  name: "block_3_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Const"
  op: "Const"
  input: "^block_3_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_project_BN/cond/ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_1"
  input: "block_3_project_BN/cond/Const"
  input: "block_3_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_project/Conv2D"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_project_BN/cond/ReadVariableOp_2"
  input: "block_3_project_BN/cond/ReadVariableOp_3"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_project/Conv2D"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1"
  input: "block_3_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_project_BN/cond_1/Const_1"
  input: "block_3_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg/sub/x"
  input: "block_3_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_project_BN/AssignMovingAvg/sub_1"
  input: "block_3_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "^block_3_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "^block_3_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_expand/kernel/Initializer/random_uniform/max"
  input: "block_4_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_expand/kernel/Initializer/random_uniform/mul"
  input: "block_4_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand/kernel"
    }
  }
}
node {
  name: "block_4_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand/kernel"
}
node {
  name: "block_4_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "block_4_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/Conv2D"
  op: "Conv2D"
  input: "block_3_project_BN/cond/Merge"
  input: "block_4_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/gamma"
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/gamma"
}
node {
  name: "block_4_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/beta"
    }
  }
}
node {
  name: "block_4_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/beta"
}
node {
  name: "block_4_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_mean"
}
node {
  name: "block_4_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_variance"
}
node {
  name: "block_4_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Const"
  op: "Const"
  input: "^block_4_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_expand_BN/cond/ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_1"
  input: "block_4_expand_BN/cond/Const"
  input: "block_4_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_expand/Conv2D"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_expand_BN/cond/ReadVariableOp_2"
  input: "block_4_expand_BN/cond/ReadVariableOp_3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_expand/Conv2D"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_4_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_expand_BN/cond_1/Const_1"
  input: "block_4_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg/sub/x"
  input: "block_4_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_expand_BN/AssignMovingAvg/sub_1"
  input: "block_4_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "^block_4_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "^block_4_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_relu/Relu6"
  op: "Relu6"
  input: "block_4_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise/depthwise_kernel"
}
node {
  name: "block_4_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_4_expand_relu/Relu6"
  input: "block_4_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/gamma"
}
node {
  name: "block_4_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/beta"
}
node {
  name: "block_4_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_mean"
}
node {
  name: "block_4_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_variance"
}
node {
  name: "block_4_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_4_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_depthwise_BN/cond/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_4_depthwise_BN/cond/Const"
  input: "block_4_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_depthwise/depthwise"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_depthwise/depthwise"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_depthwise_BN/cond_1/Const_1"
  input: "block_4_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_4_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "^block_4_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "^block_4_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_4_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_project/kernel/Initializer/random_uniform/max"
  input: "block_4_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_project/kernel/Initializer/random_uniform/mul"
  input: "block_4_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project/kernel"
    }
  }
}
node {
  name: "block_4_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project/kernel"
}
node {
  name: "block_4_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "block_4_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/Conv2D"
  op: "Conv2D"
  input: "block_4_depthwise_relu/Relu6"
  input: "block_4_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/gamma"
    }
  }
}
node {
  name: "block_4_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/gamma"
}
node {
  name: "block_4_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/beta"
    }
  }
}
node {
  name: "block_4_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/beta"
}
node {
  name: "block_4_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_mean"
}
node {
  name: "block_4_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_variance"
}
node {
  name: "block_4_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Const"
  op: "Const"
  input: "^block_4_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_project_BN/cond/ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_1"
  input: "block_4_project_BN/cond/Const"
  input: "block_4_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_project/Conv2D"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_project_BN/cond/ReadVariableOp_2"
  input: "block_4_project_BN/cond/ReadVariableOp_3"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_project/Conv2D"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1"
  input: "block_4_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_project_BN/cond_1/Const_1"
  input: "block_4_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg/sub/x"
  input: "block_4_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_project_BN/AssignMovingAvg/sub_1"
  input: "block_4_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "^block_4_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "^block_4_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_add/add"
  op: "AddV2"
  input: "block_3_project_BN/cond/Merge"
  input: "block_4_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_expand/kernel/Initializer/random_uniform/max"
  input: "block_5_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_expand/kernel/Initializer/random_uniform/mul"
  input: "block_5_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand/kernel"
    }
  }
}
node {
  name: "block_5_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand/kernel"
}
node {
  name: "block_5_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "block_5_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/Conv2D"
  op: "Conv2D"
  input: "block_4_add/add"
  input: "block_5_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/gamma"
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/gamma"
}
node {
  name: "block_5_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/beta"
    }
  }
}
node {
  name: "block_5_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/beta"
}
node {
  name: "block_5_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_mean"
}
node {
  name: "block_5_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_variance"
}
node {
  name: "block_5_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Const"
  op: "Const"
  input: "^block_5_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_expand_BN/cond/ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_1"
  input: "block_5_expand_BN/cond/Const"
  input: "block_5_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_expand/Conv2D"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_expand_BN/cond/ReadVariableOp_2"
  input: "block_5_expand_BN/cond/ReadVariableOp_3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_expand/Conv2D"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_5_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_expand_BN/cond_1/Const_1"
  input: "block_5_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg/sub/x"
  input: "block_5_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_expand_BN/AssignMovingAvg/sub_1"
  input: "block_5_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "^block_5_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "^block_5_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_relu/Relu6"
  op: "Relu6"
  input: "block_5_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise/depthwise_kernel"
}
node {
  name: "block_5_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_5_expand_relu/Relu6"
  input: "block_5_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/gamma"
}
node {
  name: "block_5_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/beta"
}
node {
  name: "block_5_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_mean"
}
node {
  name: "block_5_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_variance"
}
node {
  name: "block_5_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_5_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_depthwise_BN/cond/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_5_depthwise_BN/cond/Const"
  input: "block_5_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_depthwise/depthwise"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_depthwise/depthwise"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_depthwise_BN/cond_1/Const_1"
  input: "block_5_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_5_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "^block_5_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "^block_5_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_5_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_project/kernel/Initializer/random_uniform/max"
  input: "block_5_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_project/kernel/Initializer/random_uniform/mul"
  input: "block_5_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project/kernel"
    }
  }
}
node {
  name: "block_5_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project/kernel"
}
node {
  name: "block_5_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "block_5_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/Conv2D"
  op: "Conv2D"
  input: "block_5_depthwise_relu/Relu6"
  input: "block_5_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/gamma"
    }
  }
}
node {
  name: "block_5_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/gamma"
}
node {
  name: "block_5_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/beta"
    }
  }
}
node {
  name: "block_5_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/beta"
}
node {
  name: "block_5_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_mean"
}
node {
  name: "block_5_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_variance"
}
node {
  name: "block_5_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Const"
  op: "Const"
  input: "^block_5_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_project_BN/cond/ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_1"
  input: "block_5_project_BN/cond/Const"
  input: "block_5_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_project/Conv2D"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_project_BN/cond/ReadVariableOp_2"
  input: "block_5_project_BN/cond/ReadVariableOp_3"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_project/Conv2D"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1"
  input: "block_5_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_project_BN/cond_1/Const_1"
  input: "block_5_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg/sub/x"
  input: "block_5_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_project_BN/AssignMovingAvg/sub_1"
  input: "block_5_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "^block_5_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "^block_5_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_add/add"
  op: "AddV2"
  input: "block_4_add/add"
  input: "block_5_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_expand/kernel/Initializer/random_uniform/max"
  input: "block_6_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_expand/kernel/Initializer/random_uniform/mul"
  input: "block_6_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand/kernel"
    }
  }
}
node {
  name: "block_6_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand/kernel"
}
node {
  name: "block_6_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "block_6_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/Conv2D"
  op: "Conv2D"
  input: "block_5_add/add"
  input: "block_6_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/gamma"
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/gamma"
}
node {
  name: "block_6_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/beta"
    }
  }
}
node {
  name: "block_6_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/beta"
}
node {
  name: "block_6_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_mean"
}
node {
  name: "block_6_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_variance"
}
node {
  name: "block_6_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Const"
  op: "Const"
  input: "^block_6_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_expand_BN/cond/ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_1"
  input: "block_6_expand_BN/cond/Const"
  input: "block_6_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_expand/Conv2D"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_expand_BN/cond/ReadVariableOp_2"
  input: "block_6_expand_BN/cond/ReadVariableOp_3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_expand/Conv2D"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_6_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_expand_BN/cond_1/Const_1"
  input: "block_6_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg/sub/x"
  input: "block_6_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_expand_BN/AssignMovingAvg/sub_1"
  input: "block_6_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "^block_6_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "^block_6_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_relu/Relu6"
  op: "Relu6"
  input: "block_6_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_pad/Pad"
  op: "Pad"
  input: "block_6_expand_relu/Relu6"
  input: "block_6_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise/depthwise_kernel"
}
node {
  name: "block_6_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_6_pad/Pad"
  input: "block_6_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/gamma"
}
node {
  name: "block_6_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/beta"
}
node {
  name: "block_6_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_mean"
}
node {
  name: "block_6_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_variance"
}
node {
  name: "block_6_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_6_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_depthwise_BN/cond/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_6_depthwise_BN/cond/Const"
  input: "block_6_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_depthwise/depthwise"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_depthwise/depthwise"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_depthwise_BN/cond_1/Const_1"
  input: "block_6_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_6_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "^block_6_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "^block_6_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_6_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_project/kernel/Initializer/random_uniform/max"
  input: "block_6_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_project/kernel/Initializer/random_uniform/mul"
  input: "block_6_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project/kernel"
    }
  }
}
node {
  name: "block_6_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project/kernel"
}
node {
  name: "block_6_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "block_6_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/Conv2D"
  op: "Conv2D"
  input: "block_6_depthwise_relu/Relu6"
  input: "block_6_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/gamma"
    }
  }
}
node {
  name: "block_6_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/gamma"
}
node {
  name: "block_6_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/beta"
    }
  }
}
node {
  name: "block_6_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/beta"
}
node {
  name: "block_6_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_mean"
}
node {
  name: "block_6_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_variance"
}
node {
  name: "block_6_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Const"
  op: "Const"
  input: "^block_6_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_project_BN/cond/ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_1"
  input: "block_6_project_BN/cond/Const"
  input: "block_6_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_project/Conv2D"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_project_BN/cond/ReadVariableOp_2"
  input: "block_6_project_BN/cond/ReadVariableOp_3"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_project/Conv2D"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1"
  input: "block_6_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_project_BN/cond_1/Const_1"
  input: "block_6_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg/sub/x"
  input: "block_6_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_project_BN/AssignMovingAvg/sub_1"
  input: "block_6_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "^block_6_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "^block_6_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_expand/kernel/Initializer/random_uniform/max"
  input: "block_7_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_expand/kernel/Initializer/random_uniform/mul"
  input: "block_7_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand/kernel"
    }
  }
}
node {
  name: "block_7_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand/kernel"
}
node {
  name: "block_7_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "block_7_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/Conv2D"
  op: "Conv2D"
  input: "block_6_project_BN/cond/Merge"
  input: "block_7_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/gamma"
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/gamma"
}
node {
  name: "block_7_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/beta"
    }
  }
}
node {
  name: "block_7_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/beta"
}
node {
  name: "block_7_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_mean"
}
node {
  name: "block_7_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_variance"
}
node {
  name: "block_7_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Const"
  op: "Const"
  input: "^block_7_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_expand_BN/cond/ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_1"
  input: "block_7_expand_BN/cond/Const"
  input: "block_7_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_expand/Conv2D"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_expand_BN/cond/ReadVariableOp_2"
  input: "block_7_expand_BN/cond/ReadVariableOp_3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_expand/Conv2D"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_7_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_expand_BN/cond_1/Const_1"
  input: "block_7_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg/sub/x"
  input: "block_7_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_expand_BN/AssignMovingAvg/sub_1"
  input: "block_7_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "^block_7_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "^block_7_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_relu/Relu6"
  op: "Relu6"
  input: "block_7_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise/depthwise_kernel"
}
node {
  name: "block_7_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_7_expand_relu/Relu6"
  input: "block_7_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/gamma"
}
node {
  name: "block_7_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/beta"
}
node {
  name: "block_7_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_mean"
}
node {
  name: "block_7_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_variance"
}
node {
  name: "block_7_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_7_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_depthwise_BN/cond/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_7_depthwise_BN/cond/Const"
  input: "block_7_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_depthwise/depthwise"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_depthwise/depthwise"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_depthwise_BN/cond_1/Const_1"
  input: "block_7_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_7_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "^block_7_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "^block_7_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_7_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_project/kernel/Initializer/random_uniform/max"
  input: "block_7_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_project/kernel/Initializer/random_uniform/mul"
  input: "block_7_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project/kernel"
    }
  }
}
node {
  name: "block_7_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project/kernel"
}
node {
  name: "block_7_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "block_7_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/Conv2D"
  op: "Conv2D"
  input: "block_7_depthwise_relu/Relu6"
  input: "block_7_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/gamma"
    }
  }
}
node {
  name: "block_7_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/gamma"
}
node {
  name: "block_7_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/beta"
    }
  }
}
node {
  name: "block_7_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/beta"
}
node {
  name: "block_7_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_mean"
}
node {
  name: "block_7_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_variance"
}
node {
  name: "block_7_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Const"
  op: "Const"
  input: "^block_7_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_project_BN/cond/ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_1"
  input: "block_7_project_BN/cond/Const"
  input: "block_7_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_project/Conv2D"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_project_BN/cond/ReadVariableOp_2"
  input: "block_7_project_BN/cond/ReadVariableOp_3"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_project/Conv2D"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1"
  input: "block_7_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_project_BN/cond_1/Const_1"
  input: "block_7_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg/sub/x"
  input: "block_7_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_project_BN/AssignMovingAvg/sub_1"
  input: "block_7_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "^block_7_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "^block_7_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_add/add"
  op: "AddV2"
  input: "block_6_project_BN/cond/Merge"
  input: "block_7_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_expand/kernel/Initializer/random_uniform/max"
  input: "block_8_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_expand/kernel/Initializer/random_uniform/mul"
  input: "block_8_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand/kernel"
    }
  }
}
node {
  name: "block_8_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand/kernel"
}
node {
  name: "block_8_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "block_8_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/Conv2D"
  op: "Conv2D"
  input: "block_7_add/add"
  input: "block_8_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/gamma"
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/gamma"
}
node {
  name: "block_8_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/beta"
    }
  }
}
node {
  name: "block_8_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/beta"
}
node {
  name: "block_8_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_mean"
}
node {
  name: "block_8_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_variance"
}
node {
  name: "block_8_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Const"
  op: "Const"
  input: "^block_8_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_expand_BN/cond/ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_1"
  input: "block_8_expand_BN/cond/Const"
  input: "block_8_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_expand/Conv2D"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_expand_BN/cond/ReadVariableOp_2"
  input: "block_8_expand_BN/cond/ReadVariableOp_3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_expand/Conv2D"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_8_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_expand_BN/cond_1/Const_1"
  input: "block_8_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg/sub/x"
  input: "block_8_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_expand_BN/AssignMovingAvg/sub_1"
  input: "block_8_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "^block_8_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "^block_8_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_relu/Relu6"
  op: "Relu6"
  input: "block_8_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise/depthwise_kernel"
}
node {
  name: "block_8_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_8_expand_relu/Relu6"
  input: "block_8_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/gamma"
}
node {
  name: "block_8_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/beta"
}
node {
  name: "block_8_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_mean"
}
node {
  name: "block_8_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_variance"
}
node {
  name: "block_8_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_8_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_depthwise_BN/cond/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_8_depthwise_BN/cond/Const"
  input: "block_8_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_depthwise/depthwise"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_depthwise/depthwise"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_depthwise_BN/cond_1/Const_1"
  input: "block_8_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_8_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "^block_8_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "^block_8_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_8_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_project/kernel/Initializer/random_uniform/max"
  input: "block_8_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_project/kernel/Initializer/random_uniform/mul"
  input: "block_8_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project/kernel"
    }
  }
}
node {
  name: "block_8_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project/kernel"
}
node {
  name: "block_8_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "block_8_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/Conv2D"
  op: "Conv2D"
  input: "block_8_depthwise_relu/Relu6"
  input: "block_8_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/gamma"
    }
  }
}
node {
  name: "block_8_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/gamma"
}
node {
  name: "block_8_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/beta"
    }
  }
}
node {
  name: "block_8_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/beta"
}
node {
  name: "block_8_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_mean"
}
node {
  name: "block_8_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_variance"
}
node {
  name: "block_8_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Const"
  op: "Const"
  input: "^block_8_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_project_BN/cond/ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_1"
  input: "block_8_project_BN/cond/Const"
  input: "block_8_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_project/Conv2D"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_project_BN/cond/ReadVariableOp_2"
  input: "block_8_project_BN/cond/ReadVariableOp_3"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_project/Conv2D"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1"
  input: "block_8_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_project_BN/cond_1/Const_1"
  input: "block_8_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg/sub/x"
  input: "block_8_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_project_BN/AssignMovingAvg/sub_1"
  input: "block_8_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "^block_8_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "^block_8_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_add/add"
  op: "AddV2"
  input: "block_7_add/add"
  input: "block_8_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_expand/kernel/Initializer/random_uniform/max"
  input: "block_9_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_expand/kernel/Initializer/random_uniform/mul"
  input: "block_9_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand/kernel"
    }
  }
}
node {
  name: "block_9_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand/kernel"
}
node {
  name: "block_9_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "block_9_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/Conv2D"
  op: "Conv2D"
  input: "block_8_add/add"
  input: "block_9_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/gamma"
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/gamma"
}
node {
  name: "block_9_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/beta"
    }
  }
}
node {
  name: "block_9_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/beta"
}
node {
  name: "block_9_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_mean"
}
node {
  name: "block_9_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_variance"
}
node {
  name: "block_9_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Const"
  op: "Const"
  input: "^block_9_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_expand_BN/cond/ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_1"
  input: "block_9_expand_BN/cond/Const"
  input: "block_9_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_expand/Conv2D"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_expand_BN/cond/ReadVariableOp_2"
  input: "block_9_expand_BN/cond/ReadVariableOp_3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_expand/Conv2D"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_9_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_expand_BN/cond_1/Const_1"
  input: "block_9_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg/sub/x"
  input: "block_9_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_expand_BN/AssignMovingAvg/sub_1"
  input: "block_9_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "^block_9_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "^block_9_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_relu/Relu6"
  op: "Relu6"
  input: "block_9_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise/depthwise_kernel"
}
node {
  name: "block_9_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_9_expand_relu/Relu6"
  input: "block_9_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/gamma"
}
node {
  name: "block_9_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/beta"
}
node {
  name: "block_9_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_mean"
}
node {
  name: "block_9_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_variance"
}
node {
  name: "block_9_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_9_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_depthwise_BN/cond/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_9_depthwise_BN/cond/Const"
  input: "block_9_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_depthwise/depthwise"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_depthwise/depthwise"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_depthwise_BN/cond_1/Const_1"
  input: "block_9_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_9_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "^block_9_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "^block_9_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_9_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_project/kernel/Initializer/random_uniform/max"
  input: "block_9_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_project/kernel/Initializer/random_uniform/mul"
  input: "block_9_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project/kernel"
    }
  }
}
node {
  name: "block_9_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project/kernel"
}
node {
  name: "block_9_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "block_9_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/Conv2D"
  op: "Conv2D"
  input: "block_9_depthwise_relu/Relu6"
  input: "block_9_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/gamma"
    }
  }
}
node {
  name: "block_9_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/gamma"
}
node {
  name: "block_9_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/beta"
    }
  }
}
node {
  name: "block_9_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/beta"
}
node {
  name: "block_9_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_mean"
}
node {
  name: "block_9_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_variance"
}
node {
  name: "block_9_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Const"
  op: "Const"
  input: "^block_9_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_project_BN/cond/ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_1"
  input: "block_9_project_BN/cond/Const"
  input: "block_9_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_project/Conv2D"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_project_BN/cond/ReadVariableOp_2"
  input: "block_9_project_BN/cond/ReadVariableOp_3"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_project/Conv2D"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1"
  input: "block_9_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_project_BN/cond_1/Const_1"
  input: "block_9_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg/sub/x"
  input: "block_9_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_project_BN/AssignMovingAvg/sub_1"
  input: "block_9_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "^block_9_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "^block_9_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_add/add"
  op: "AddV2"
  input: "block_8_add/add"
  input: "block_9_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_expand/kernel/Initializer/random_uniform/max"
  input: "block_10_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_expand/kernel/Initializer/random_uniform/mul"
  input: "block_10_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand/kernel"
    }
  }
}
node {
  name: "block_10_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand/kernel"
}
node {
  name: "block_10_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "block_10_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/Conv2D"
  op: "Conv2D"
  input: "block_9_add/add"
  input: "block_10_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/gamma"
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/gamma"
}
node {
  name: "block_10_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/beta"
    }
  }
}
node {
  name: "block_10_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/beta"
}
node {
  name: "block_10_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_mean"
}
node {
  name: "block_10_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_variance"
}
node {
  name: "block_10_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Const"
  op: "Const"
  input: "^block_10_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_expand_BN/cond/ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_1"
  input: "block_10_expand_BN/cond/Const"
  input: "block_10_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_expand/Conv2D"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_expand_BN/cond/ReadVariableOp_2"
  input: "block_10_expand_BN/cond/ReadVariableOp_3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_expand/Conv2D"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_10_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_expand_BN/cond_1/Const_1"
  input: "block_10_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg/sub/x"
  input: "block_10_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_expand_BN/AssignMovingAvg/sub_1"
  input: "block_10_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "^block_10_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "^block_10_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_relu/Relu6"
  op: "Relu6"
  input: "block_10_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise/depthwise_kernel"
}
node {
  name: "block_10_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_10_expand_relu/Relu6"
  input: "block_10_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/gamma"
}
node {
  name: "block_10_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/beta"
}
node {
  name: "block_10_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_mean"
}
node {
  name: "block_10_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_variance"
}
node {
  name: "block_10_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_10_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_depthwise_BN/cond/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_10_depthwise_BN/cond/Const"
  input: "block_10_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_depthwise/depthwise"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_depthwise/depthwise"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_depthwise_BN/cond_1/Const_1"
  input: "block_10_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_10_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "^block_10_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "^block_10_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_10_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_project/kernel/Initializer/random_uniform/max"
  input: "block_10_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_project/kernel/Initializer/random_uniform/mul"
  input: "block_10_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project/kernel"
    }
  }
}
node {
  name: "block_10_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project/kernel"
}
node {
  name: "block_10_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "block_10_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/Conv2D"
  op: "Conv2D"
  input: "block_10_depthwise_relu/Relu6"
  input: "block_10_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/gamma"
    }
  }
}
node {
  name: "block_10_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/gamma"
}
node {
  name: "block_10_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/beta"
    }
  }
}
node {
  name: "block_10_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/beta"
}
node {
  name: "block_10_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_mean"
}
node {
  name: "block_10_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_variance"
}
node {
  name: "block_10_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Const"
  op: "Const"
  input: "^block_10_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_project_BN/cond/ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_1"
  input: "block_10_project_BN/cond/Const"
  input: "block_10_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_project/Conv2D"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_project_BN/cond/ReadVariableOp_2"
  input: "block_10_project_BN/cond/ReadVariableOp_3"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_project/Conv2D"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1"
  input: "block_10_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_project_BN/cond_1/Const_1"
  input: "block_10_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg/sub/x"
  input: "block_10_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_project_BN/AssignMovingAvg/sub_1"
  input: "block_10_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "^block_10_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "^block_10_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_expand/kernel/Initializer/random_uniform/max"
  input: "block_11_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_expand/kernel/Initializer/random_uniform/mul"
  input: "block_11_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand/kernel"
    }
  }
}
node {
  name: "block_11_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand/kernel"
}
node {
  name: "block_11_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "block_11_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/Conv2D"
  op: "Conv2D"
  input: "block_10_project_BN/cond/Merge"
  input: "block_11_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/gamma"
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/gamma"
}
node {
  name: "block_11_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/beta"
    }
  }
}
node {
  name: "block_11_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/beta"
}
node {
  name: "block_11_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_mean"
}
node {
  name: "block_11_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_variance"
}
node {
  name: "block_11_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Const"
  op: "Const"
  input: "^block_11_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_expand_BN/cond/ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_1"
  input: "block_11_expand_BN/cond/Const"
  input: "block_11_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_expand/Conv2D"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_expand_BN/cond/ReadVariableOp_2"
  input: "block_11_expand_BN/cond/ReadVariableOp_3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_expand/Conv2D"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_11_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_expand_BN/cond_1/Const_1"
  input: "block_11_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg/sub/x"
  input: "block_11_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_expand_BN/AssignMovingAvg/sub_1"
  input: "block_11_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "^block_11_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "^block_11_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_relu/Relu6"
  op: "Relu6"
  input: "block_11_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise/depthwise_kernel"
}
node {
  name: "block_11_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_11_expand_relu/Relu6"
  input: "block_11_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/gamma"
}
node {
  name: "block_11_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/beta"
}
node {
  name: "block_11_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_mean"
}
node {
  name: "block_11_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_variance"
}
node {
  name: "block_11_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_11_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_depthwise_BN/cond/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_11_depthwise_BN/cond/Const"
  input: "block_11_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_depthwise/depthwise"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_depthwise/depthwise"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_depthwise_BN/cond_1/Const_1"
  input: "block_11_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_11_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "^block_11_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "^block_11_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_11_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_project/kernel/Initializer/random_uniform/max"
  input: "block_11_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_project/kernel/Initializer/random_uniform/mul"
  input: "block_11_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project/kernel"
    }
  }
}
node {
  name: "block_11_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project/kernel"
}
node {
  name: "block_11_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "block_11_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/Conv2D"
  op: "Conv2D"
  input: "block_11_depthwise_relu/Relu6"
  input: "block_11_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/gamma"
    }
  }
}
node {
  name: "block_11_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/gamma"
}
node {
  name: "block_11_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/beta"
    }
  }
}
node {
  name: "block_11_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/beta"
}
node {
  name: "block_11_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_mean"
}
node {
  name: "block_11_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_variance"
}
node {
  name: "block_11_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Const"
  op: "Const"
  input: "^block_11_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_project_BN/cond/ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_1"
  input: "block_11_project_BN/cond/Const"
  input: "block_11_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_project/Conv2D"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_project_BN/cond/ReadVariableOp_2"
  input: "block_11_project_BN/cond/ReadVariableOp_3"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_project/Conv2D"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1"
  input: "block_11_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_project_BN/cond_1/Const_1"
  input: "block_11_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg/sub/x"
  input: "block_11_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_project_BN/AssignMovingAvg/sub_1"
  input: "block_11_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "^block_11_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "^block_11_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_add/add"
  op: "AddV2"
  input: "block_10_project_BN/cond/Merge"
  input: "block_11_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_expand/kernel/Initializer/random_uniform/max"
  input: "block_12_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_expand/kernel/Initializer/random_uniform/mul"
  input: "block_12_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand/kernel"
    }
  }
}
node {
  name: "block_12_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand/kernel"
}
node {
  name: "block_12_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "block_12_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/Conv2D"
  op: "Conv2D"
  input: "block_11_add/add"
  input: "block_12_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/gamma"
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/gamma"
}
node {
  name: "block_12_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/beta"
    }
  }
}
node {
  name: "block_12_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/beta"
}
node {
  name: "block_12_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_mean"
}
node {
  name: "block_12_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_variance"
}
node {
  name: "block_12_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Const"
  op: "Const"
  input: "^block_12_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_expand_BN/cond/ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_1"
  input: "block_12_expand_BN/cond/Const"
  input: "block_12_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_expand/Conv2D"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_expand_BN/cond/ReadVariableOp_2"
  input: "block_12_expand_BN/cond/ReadVariableOp_3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_expand/Conv2D"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_12_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_expand_BN/cond_1/Const_1"
  input: "block_12_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg/sub/x"
  input: "block_12_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_expand_BN/AssignMovingAvg/sub_1"
  input: "block_12_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "^block_12_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "^block_12_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_relu/Relu6"
  op: "Relu6"
  input: "block_12_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise/depthwise_kernel"
}
node {
  name: "block_12_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_12_expand_relu/Relu6"
  input: "block_12_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/gamma"
}
node {
  name: "block_12_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/beta"
}
node {
  name: "block_12_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_mean"
}
node {
  name: "block_12_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_variance"
}
node {
  name: "block_12_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_12_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_depthwise_BN/cond/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_12_depthwise_BN/cond/Const"
  input: "block_12_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_depthwise/depthwise"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_depthwise/depthwise"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_depthwise_BN/cond_1/Const_1"
  input: "block_12_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_12_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "^block_12_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "^block_12_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_12_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_project/kernel/Initializer/random_uniform/max"
  input: "block_12_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_project/kernel/Initializer/random_uniform/mul"
  input: "block_12_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project/kernel"
    }
  }
}
node {
  name: "block_12_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project/kernel"
}
node {
  name: "block_12_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "block_12_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/Conv2D"
  op: "Conv2D"
  input: "block_12_depthwise_relu/Relu6"
  input: "block_12_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/gamma"
    }
  }
}
node {
  name: "block_12_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/gamma"
}
node {
  name: "block_12_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/beta"
    }
  }
}
node {
  name: "block_12_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/beta"
}
node {
  name: "block_12_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_mean"
}
node {
  name: "block_12_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_variance"
}
node {
  name: "block_12_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Const"
  op: "Const"
  input: "^block_12_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_project_BN/cond/ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_1"
  input: "block_12_project_BN/cond/Const"
  input: "block_12_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_project/Conv2D"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_project_BN/cond/ReadVariableOp_2"
  input: "block_12_project_BN/cond/ReadVariableOp_3"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_project/Conv2D"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1"
  input: "block_12_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_project_BN/cond_1/Const_1"
  input: "block_12_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg/sub/x"
  input: "block_12_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_project_BN/AssignMovingAvg/sub_1"
  input: "block_12_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "^block_12_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "^block_12_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_add/add"
  op: "AddV2"
  input: "block_11_add/add"
  input: "block_12_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_expand/kernel/Initializer/random_uniform/max"
  input: "block_13_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_expand/kernel/Initializer/random_uniform/mul"
  input: "block_13_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand/kernel"
    }
  }
}
node {
  name: "block_13_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand/kernel"
}
node {
  name: "block_13_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "block_13_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/Conv2D"
  op: "Conv2D"
  input: "block_12_add/add"
  input: "block_13_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/gamma"
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/gamma"
}
node {
  name: "block_13_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/beta"
    }
  }
}
node {
  name: "block_13_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/beta"
}
node {
  name: "block_13_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_mean"
}
node {
  name: "block_13_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_variance"
}
node {
  name: "block_13_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Const"
  op: "Const"
  input: "^block_13_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_expand_BN/cond/ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_1"
  input: "block_13_expand_BN/cond/Const"
  input: "block_13_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_expand/Conv2D"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_expand_BN/cond/ReadVariableOp_2"
  input: "block_13_expand_BN/cond/ReadVariableOp_3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_expand/Conv2D"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_13_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_expand_BN/cond_1/Const_1"
  input: "block_13_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg/sub/x"
  input: "block_13_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_expand_BN/AssignMovingAvg/sub_1"
  input: "block_13_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "^block_13_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "^block_13_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_relu/Relu6"
  op: "Relu6"
  input: "block_13_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_pad/Pad"
  op: "Pad"
  input: "block_13_expand_relu/Relu6"
  input: "block_13_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise/depthwise_kernel"
}
node {
  name: "block_13_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_13_pad/Pad"
  input: "block_13_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/gamma"
}
node {
  name: "block_13_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/beta"
}
node {
  name: "block_13_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_mean"
}
node {
  name: "block_13_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_variance"
}
node {
  name: "block_13_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_13_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_depthwise_BN/cond/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_13_depthwise_BN/cond/Const"
  input: "block_13_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_depthwise/depthwise"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_depthwise/depthwise"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_depthwise_BN/cond_1/Const_1"
  input: "block_13_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_13_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "^block_13_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "^block_13_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_13_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_project/kernel/Initializer/random_uniform/max"
  input: "block_13_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_project/kernel/Initializer/random_uniform/mul"
  input: "block_13_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project/kernel"
    }
  }
}
node {
  name: "block_13_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project/kernel"
}
node {
  name: "block_13_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "block_13_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/Conv2D"
  op: "Conv2D"
  input: "block_13_depthwise_relu/Relu6"
  input: "block_13_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/gamma"
    }
  }
}
node {
  name: "block_13_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/gamma"
}
node {
  name: "block_13_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/beta"
    }
  }
}
node {
  name: "block_13_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/beta"
}
node {
  name: "block_13_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_mean"
}
node {
  name: "block_13_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_variance"
}
node {
  name: "block_13_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Const"
  op: "Const"
  input: "^block_13_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_project_BN/cond/ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_1"
  input: "block_13_project_BN/cond/Const"
  input: "block_13_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_project/Conv2D"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_project_BN/cond/ReadVariableOp_2"
  input: "block_13_project_BN/cond/ReadVariableOp_3"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_project/Conv2D"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1"
  input: "block_13_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_project_BN/cond_1/Const_1"
  input: "block_13_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg/sub/x"
  input: "block_13_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_project_BN/AssignMovingAvg/sub_1"
  input: "block_13_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "^block_13_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "^block_13_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_expand/kernel/Initializer/random_uniform/max"
  input: "block_14_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_expand/kernel/Initializer/random_uniform/mul"
  input: "block_14_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand/kernel"
    }
  }
}
node {
  name: "block_14_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand/kernel"
}
node {
  name: "block_14_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "block_14_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/Conv2D"
  op: "Conv2D"
  input: "block_13_project_BN/cond/Merge"
  input: "block_14_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/gamma"
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/gamma"
}
node {
  name: "block_14_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/beta"
    }
  }
}
node {
  name: "block_14_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/beta"
}
node {
  name: "block_14_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_mean"
}
node {
  name: "block_14_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_variance"
}
node {
  name: "block_14_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Const"
  op: "Const"
  input: "^block_14_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_expand_BN/cond/ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_1"
  input: "block_14_expand_BN/cond/Const"
  input: "block_14_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_expand/Conv2D"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_expand_BN/cond/ReadVariableOp_2"
  input: "block_14_expand_BN/cond/ReadVariableOp_3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_expand/Conv2D"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_14_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_expand_BN/cond_1/Const_1"
  input: "block_14_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg/sub/x"
  input: "block_14_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_expand_BN/AssignMovingAvg/sub_1"
  input: "block_14_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "^block_14_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "^block_14_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_relu/Relu6"
  op: "Relu6"
  input: "block_14_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise/depthwise_kernel"
}
node {
  name: "block_14_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_14_expand_relu/Relu6"
  input: "block_14_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/gamma"
}
node {
  name: "block_14_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/beta"
}
node {
  name: "block_14_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_mean"
}
node {
  name: "block_14_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_variance"
}
node {
  name: "block_14_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_14_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_depthwise_BN/cond/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_14_depthwise_BN/cond/Const"
  input: "block_14_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_depthwise/depthwise"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_depthwise/depthwise"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_depthwise_BN/cond_1/Const_1"
  input: "block_14_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_14_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "^block_14_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "^block_14_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_14_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_project/kernel/Initializer/random_uniform/max"
  input: "block_14_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_project/kernel/Initializer/random_uniform/mul"
  input: "block_14_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project/kernel"
    }
  }
}
node {
  name: "block_14_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project/kernel"
}
node {
  name: "block_14_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "block_14_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/Conv2D"
  op: "Conv2D"
  input: "block_14_depthwise_relu/Relu6"
  input: "block_14_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/gamma"
    }
  }
}
node {
  name: "block_14_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/gamma"
}
node {
  name: "block_14_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/beta"
    }
  }
}
node {
  name: "block_14_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/beta"
}
node {
  name: "block_14_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_mean"
}
node {
  name: "block_14_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_variance"
}
node {
  name: "block_14_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Const"
  op: "Const"
  input: "^block_14_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_project_BN/cond/ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_1"
  input: "block_14_project_BN/cond/Const"
  input: "block_14_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_project/Conv2D"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_project_BN/cond/ReadVariableOp_2"
  input: "block_14_project_BN/cond/ReadVariableOp_3"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_project/Conv2D"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1"
  input: "block_14_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_project_BN/cond_1/Const_1"
  input: "block_14_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg/sub/x"
  input: "block_14_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_project_BN/AssignMovingAvg/sub_1"
  input: "block_14_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "^block_14_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "^block_14_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_add/add"
  op: "AddV2"
  input: "block_13_project_BN/cond/Merge"
  input: "block_14_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_expand/kernel/Initializer/random_uniform/max"
  input: "block_15_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_expand/kernel/Initializer/random_uniform/mul"
  input: "block_15_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand/kernel"
    }
  }
}
node {
  name: "block_15_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand/kernel"
}
node {
  name: "block_15_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "block_15_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/Conv2D"
  op: "Conv2D"
  input: "block_14_add/add"
  input: "block_15_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/gamma"
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/gamma"
}
node {
  name: "block_15_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/beta"
    }
  }
}
node {
  name: "block_15_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/beta"
}
node {
  name: "block_15_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_mean"
}
node {
  name: "block_15_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_variance"
}
node {
  name: "block_15_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Const"
  op: "Const"
  input: "^block_15_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_expand_BN/cond/ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_1"
  input: "block_15_expand_BN/cond/Const"
  input: "block_15_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_expand/Conv2D"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_expand_BN/cond/ReadVariableOp_2"
  input: "block_15_expand_BN/cond/ReadVariableOp_3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_expand/Conv2D"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_15_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_expand_BN/cond_1/Const_1"
  input: "block_15_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg/sub/x"
  input: "block_15_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_expand_BN/AssignMovingAvg/sub_1"
  input: "block_15_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "^block_15_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "^block_15_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_relu/Relu6"
  op: "Relu6"
  input: "block_15_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise/depthwise_kernel"
}
node {
  name: "block_15_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_15_expand_relu/Relu6"
  input: "block_15_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/gamma"
}
node {
  name: "block_15_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/beta"
}
node {
  name: "block_15_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_mean"
}
node {
  name: "block_15_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_variance"
}
node {
  name: "block_15_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_15_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_depthwise_BN/cond/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_15_depthwise_BN/cond/Const"
  input: "block_15_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_depthwise/depthwise"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_depthwise/depthwise"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_depthwise_BN/cond_1/Const_1"
  input: "block_15_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_15_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "^block_15_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "^block_15_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_15_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_project/kernel/Initializer/random_uniform/max"
  input: "block_15_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_project/kernel/Initializer/random_uniform/mul"
  input: "block_15_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project/kernel"
    }
  }
}
node {
  name: "block_15_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project/kernel"
}
node {
  name: "block_15_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "block_15_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/Conv2D"
  op: "Conv2D"
  input: "block_15_depthwise_relu/Relu6"
  input: "block_15_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/gamma"
    }
  }
}
node {
  name: "block_15_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/gamma"
}
node {
  name: "block_15_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/beta"
    }
  }
}
node {
  name: "block_15_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/beta"
}
node {
  name: "block_15_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_mean"
}
node {
  name: "block_15_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_variance"
}
node {
  name: "block_15_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Const"
  op: "Const"
  input: "^block_15_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_project_BN/cond/ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_1"
  input: "block_15_project_BN/cond/Const"
  input: "block_15_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_project/Conv2D"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_project_BN/cond/ReadVariableOp_2"
  input: "block_15_project_BN/cond/ReadVariableOp_3"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_project/Conv2D"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1"
  input: "block_15_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_project_BN/cond_1/Const_1"
  input: "block_15_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg/sub/x"
  input: "block_15_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_project_BN/AssignMovingAvg/sub_1"
  input: "block_15_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "^block_15_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "^block_15_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_add/add"
  op: "AddV2"
  input: "block_14_add/add"
  input: "block_15_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_expand/kernel/Initializer/random_uniform/max"
  input: "block_16_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_expand/kernel/Initializer/random_uniform/mul"
  input: "block_16_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand/kernel"
    }
  }
}
node {
  name: "block_16_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand/kernel"
}
node {
  name: "block_16_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "block_16_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/Conv2D"
  op: "Conv2D"
  input: "block_15_add/add"
  input: "block_16_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/gamma"
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/gamma"
}
node {
  name: "block_16_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/beta"
    }
  }
}
node {
  name: "block_16_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/beta"
}
node {
  name: "block_16_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_mean"
}
node {
  name: "block_16_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_variance"
}
node {
  name: "block_16_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Const"
  op: "Const"
  input: "^block_16_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_expand_BN/cond/ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_1"
  input: "block_16_expand_BN/cond/Const"
  input: "block_16_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_expand/Conv2D"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_expand_BN/cond/ReadVariableOp_2"
  input: "block_16_expand_BN/cond/ReadVariableOp_3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_expand/Conv2D"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_16_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_expand_BN/cond_1/Const_1"
  input: "block_16_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg/sub/x"
  input: "block_16_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_expand_BN/AssignMovingAvg/sub_1"
  input: "block_16_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "^block_16_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "^block_16_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_relu/Relu6"
  op: "Relu6"
  input: "block_16_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise/depthwise_kernel"
}
node {
  name: "block_16_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_16_expand_relu/Relu6"
  input: "block_16_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/gamma"
}
node {
  name: "block_16_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/beta"
}
node {
  name: "block_16_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_mean"
}
node {
  name: "block_16_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_variance"
}
node {
  name: "block_16_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_16_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_depthwise_BN/cond/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_16_depthwise_BN/cond/Const"
  input: "block_16_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_depthwise/depthwise"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_depthwise/depthwise"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_depthwise_BN/cond_1/Const_1"
  input: "block_16_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_16_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "^block_16_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "^block_16_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_16_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_project/kernel/Initializer/random_uniform/max"
  input: "block_16_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_project/kernel/Initializer/random_uniform/mul"
  input: "block_16_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project/kernel"
    }
  }
}
node {
  name: "block_16_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project/kernel"
}
node {
  name: "block_16_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "block_16_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/Conv2D"
  op: "Conv2D"
  input: "block_16_depthwise_relu/Relu6"
  input: "block_16_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/gamma"
    }
  }
}
node {
  name: "block_16_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/gamma"
}
node {
  name: "block_16_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/beta"
    }
  }
}
node {
  name: "block_16_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/beta"
}
node {
  name: "block_16_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_mean"
}
node {
  name: "block_16_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_variance"
}
node {
  name: "block_16_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Const"
  op: "Const"
  input: "^block_16_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_project_BN/cond/ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_1"
  input: "block_16_project_BN/cond/Const"
  input: "block_16_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_project/Conv2D"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_project_BN/cond/ReadVariableOp_2"
  input: "block_16_project_BN/cond/ReadVariableOp_3"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_project/Conv2D"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1"
  input: "block_16_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_project_BN/cond_1/Const_1"
  input: "block_16_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg/sub/x"
  input: "block_16_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_project_BN/AssignMovingAvg/sub_1"
  input: "block_16_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "^block_16_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "^block_16_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv_1/kernel/Initializer/random_uniform/max"
  input: "Conv_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Conv_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Conv_1/kernel/Initializer/random_uniform/mul"
  input: "Conv_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1/kernel"
    }
  }
}
node {
  name: "Conv_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1/kernel"
}
node {
  name: "Conv_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "Conv_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/Conv2D"
  op: "Conv2D"
  input: "block_16_project_BN/cond/Merge"
  input: "Conv_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones"
  op: "Fill"
  input: "Conv_1_bn/gamma/Initializer/ones/shape_as_tensor"
  input: "Conv_1_bn/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/gamma"
    }
  }
}
node {
  name: "Conv_1_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/gamma"
}
node {
  name: "Conv_1_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros"
  op: "Fill"
  input: "Conv_1_bn/beta/Initializer/zeros/shape_as_tensor"
  input: "Conv_1_bn/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/beta"
    }
  }
}
node {
  name: "Conv_1_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/beta"
}
node {
  name: "Conv_1_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "Conv_1_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "Conv_1_bn/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/moving_mean"
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_mean"
}
node {
  name: "Conv_1_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones"
  op: "Fill"
  input: "Conv_1_bn/moving_variance/Initializer/ones/shape_as_tensor"
  input: "Conv_1_bn/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/moving_variance"
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_variance"
}
node {
  name: "Conv_1_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/switch_t"
  op: "Identity"
  input: "Conv_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/switch_f"
  op: "Identity"
  input: "Conv_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Const"
  op: "Const"
  input: "^Conv_1_bn/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Const_1"
  op: "Const"
  input: "^Conv_1_bn/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "Conv_1_bn/cond/FusedBatchNormV3/Switch:1"
  input: "Conv_1_bn/cond/ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_1"
  input: "Conv_1_bn/cond/Const"
  input: "Conv_1_bn/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "Conv_1/Conv2D"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/Conv2D"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/Switch"
  input: "Conv_1_bn/cond/ReadVariableOp_2"
  input: "Conv_1_bn/cond/ReadVariableOp_3"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "Conv_1/Conv2D"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/Conv2D"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1"
  input: "Conv_1_bn/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge_1"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1:1"
  input: "Conv_1_bn/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge_2"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1:2"
  input: "Conv_1_bn/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/switch_t"
  op: "Identity"
  input: "Conv_1_bn/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/switch_f"
  op: "Identity"
  input: "Conv_1_bn/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Const"
  op: "Const"
  input: "^Conv_1_bn/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Const_1"
  op: "Const"
  input: "^Conv_1_bn/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Merge"
  op: "Merge"
  input: "Conv_1_bn/cond_1/Const_1"
  input: "Conv_1_bn/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg/sub/x"
  input: "Conv_1_bn/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg/ReadVariableOp"
  input: "Conv_1_bn/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "Conv_1_bn/AssignMovingAvg/sub_1"
  input: "Conv_1_bn/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "^Conv_1_bn/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg_1/sub/x"
  input: "Conv_1_bn/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp"
  input: "Conv_1_bn/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Conv_1_bn/AssignMovingAvg_1/sub_1"
  input: "Conv_1_bn/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "^Conv_1_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "out_relu/Relu6"
  op: "Relu6"
  input: "Conv_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/gamma"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bn_Conv1/beta"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/beta"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "block_1_project_BN/gamma"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "block_1_project_BN/beta"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/beta"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "block_2_project_BN/gamma"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "block_2_project_BN/beta"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/beta"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "block_3_project_BN/gamma"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "block_3_project_BN/beta"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/beta"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "block_4_project_BN/gamma"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "block_4_project_BN/beta"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/beta"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "block_5_project_BN/gamma"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "block_5_project_BN/beta"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/beta"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "block_6_project_BN/gamma"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "block_6_project_BN/beta"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/beta"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "block_7_project_BN/gamma"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "block_7_project_BN/beta"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/beta"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "block_8_project_BN/gamma"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "block_8_project_BN/beta"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/beta"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "block_9_project_BN/gamma"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "block_9_project_BN/beta"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "Placeholder_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  input: "^AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "Placeholder_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "^AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "Placeholder_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/beta"
  input: "^AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "Placeholder_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "^AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "Placeholder_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "^AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "Placeholder_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "Placeholder_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "^AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "Placeholder_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "^AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "Placeholder_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "Placeholder_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "Placeholder_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  input: "^AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "Placeholder_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "block_10_project_BN/gamma"
  input: "^AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "Placeholder_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "block_10_project_BN/beta"
  input: "^AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "Placeholder_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "^AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "Placeholder_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "^AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "Placeholder_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  input: "^AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "Placeholder_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "^AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "Placeholder_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/beta"
  input: "^AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "Placeholder_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "^AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "Placeholder_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "^AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "Placeholder_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "Placeholder_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "^AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "Placeholder_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "^AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "Placeholder_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "Placeholder_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "Placeholder_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  input: "^AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "Placeholder_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "block_11_project_BN/gamma"
  input: "^AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "Placeholder_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "block_11_project_BN/beta"
  input: "^AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "Placeholder_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "^AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "Placeholder_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "^AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "Placeholder_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  input: "^AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "Placeholder_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "^AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "Placeholder_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/beta"
  input: "^AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "Placeholder_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "^AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "Placeholder_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "^AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "Placeholder_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "Placeholder_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "^AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "Placeholder_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "^AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "Placeholder_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "Placeholder_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "Placeholder_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  input: "^AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "Placeholder_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "block_12_project_BN/gamma"
  input: "^AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "Placeholder_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "block_12_project_BN/beta"
  input: "^AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "Placeholder_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "^AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "Placeholder_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "^AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "Placeholder_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  input: "^AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "Placeholder_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "^AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "Placeholder_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/beta"
  input: "^AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "Placeholder_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "^AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_199"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "Placeholder_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "^AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_200"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "Placeholder_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_201"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "Placeholder_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "^AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_202"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "Placeholder_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "^AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_203"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "Placeholder_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_204"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "Placeholder_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_205"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "Placeholder_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  input: "^AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_206"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "Placeholder_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "block_13_project_BN/gamma"
  input: "^AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_207"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "Placeholder_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "block_13_project_BN/beta"
  input: "^AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_208"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "Placeholder_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "^AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_209"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "Placeholder_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "^AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_210"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "Placeholder_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  input: "^AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_211"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "Placeholder_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "^AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_212"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "Placeholder_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/beta"
  input: "^AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_213"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "Placeholder_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "^AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_214"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "Placeholder_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "^AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_215"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "Placeholder_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_216"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "Placeholder_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "^AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_217"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "Placeholder_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "^AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_218"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "Placeholder_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_219"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "Placeholder_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_220"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "Placeholder_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  input: "^AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_221"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "Placeholder_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "block_14_project_BN/gamma"
  input: "^AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_222"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "Placeholder_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "block_14_project_BN/beta"
  input: "^AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_223"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "Placeholder_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "^AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_224"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "Placeholder_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "^AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_225"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "Placeholder_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  input: "^AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_226"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "Placeholder_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "^AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_227"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "Placeholder_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/beta"
  input: "^AssignVariableOp_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_228"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "Placeholder_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "^AssignVariableOp_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_229"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "Placeholder_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "^AssignVariableOp_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_230"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "Placeholder_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_231"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "Placeholder_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "^AssignVariableOp_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_232"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "Placeholder_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "^AssignVariableOp_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_233"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "Placeholder_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_234"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "Placeholder_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_235"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "Placeholder_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  input: "^AssignVariableOp_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_236"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "Placeholder_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "block_15_project_BN/gamma"
  input: "^AssignVariableOp_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_237"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "Placeholder_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "block_15_project_BN/beta"
  input: "^AssignVariableOp_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_238"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "Placeholder_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "^AssignVariableOp_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_239"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "Placeholder_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "^AssignVariableOp_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_240"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "Placeholder_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  input: "^AssignVariableOp_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_241"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "Placeholder_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "^AssignVariableOp_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_242"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "Placeholder_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/beta"
  input: "^AssignVariableOp_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_243"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "Placeholder_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "^AssignVariableOp_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_244"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "Placeholder_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "^AssignVariableOp_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_245"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "Placeholder_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_246"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "Placeholder_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "^AssignVariableOp_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_247"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "Placeholder_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "^AssignVariableOp_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_248"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "Placeholder_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_249"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "Placeholder_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_250"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "Placeholder_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  input: "^AssignVariableOp_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_251"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "Placeholder_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "block_16_project_BN/gamma"
  input: "^AssignVariableOp_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_252"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "Placeholder_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "block_16_project_BN/beta"
  input: "^AssignVariableOp_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_253"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "Placeholder_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "^AssignVariableOp_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_254"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "Placeholder_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "^AssignVariableOp_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_255"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "Placeholder_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  input: "^AssignVariableOp_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_256"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "Placeholder_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "Conv_1_bn/gamma"
  input: "^AssignVariableOp_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_257"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "Placeholder_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "Conv_1_bn/beta"
  input: "^AssignVariableOp_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_258"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Placeholder_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "^AssignVariableOp_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_259"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Placeholder_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "^AssignVariableOp_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "block_10_expand/kernel"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "block_12_expand/kernel"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "block_6_expand/kernel"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "block_11_project/kernel"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_variance"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "block_8_project/kernel"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "block_11_expand/kernel"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "block_5_expand/kernel"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "block_8_expand/kernel"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "block_2_project/kernel"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project/kernel"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "block_3_expand/kernel"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "block_9_project/kernel"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "block_1_expand/kernel"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "Conv1/kernel"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "Conv_1/kernel"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "block_13_project/kernel"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/gamma"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "block_10_project/kernel"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "block_4_expand/kernel"
}
node {
  name: "VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "block_7_project/kernel"
}
node {
  name: "VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "block_15_project/kernel"
}
node {
  name: "VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/beta"
}
node {
  name: "VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "block_6_project/kernel"
}
node {
  name: "VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/gamma"
}
node {
  name: "VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "block_2_expand/kernel"
}
node {
  name: "VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "block_5_project/kernel"
}
node {
  name: "VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "block_4_project/kernel"
}
node {
  name: "VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "block_12_project/kernel"
}
node {
  name: "VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "block_3_project/kernel"
}
node {
  name: "VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/beta"
}
node {
  name: "VarIsInitializedOp_200"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_201"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_202"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_203"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_204"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_205"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_206"
  op: "VarIsInitializedOp"
  input: "block_13_expand/kernel"
}
node {
  name: "VarIsInitializedOp_207"
  op: "VarIsInitializedOp"
  input: "block_16_project/kernel"
}
node {
  name: "VarIsInitializedOp_208"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_209"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_210"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_211"
  op: "VarIsInitializedOp"
  input: "block_7_expand/kernel"
}
node {
  name: "VarIsInitializedOp_212"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_213"
  op: "VarIsInitializedOp"
  input: "block_9_expand/kernel"
}
node {
  name: "VarIsInitializedOp_214"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_215"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_216"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_217"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_218"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_219"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_220"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_221"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_222"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_223"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_224"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_225"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_226"
  op: "VarIsInitializedOp"
  input: "block_14_project/kernel"
}
node {
  name: "VarIsInitializedOp_227"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_228"
  op: "VarIsInitializedOp"
  input: "block_16_expand/kernel"
}
node {
  name: "VarIsInitializedOp_229"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_230"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_231"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_232"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_233"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_234"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_235"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_236"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_237"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_238"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_239"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_240"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_241"
  op: "VarIsInitializedOp"
  input: "block_15_expand/kernel"
}
node {
  name: "VarIsInitializedOp_242"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_243"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_244"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_245"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_246"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_mean"
}
node {
  name: "VarIsInitializedOp_247"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_248"
  op: "VarIsInitializedOp"
  input: "block_1_project/kernel"
}
node {
  name: "VarIsInitializedOp_249"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_250"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_251"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_252"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_253"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_254"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_255"
  op: "VarIsInitializedOp"
  input: "block_14_expand/kernel"
}
node {
  name: "VarIsInitializedOp_256"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_257"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_258"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_259"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Conv1/kernel/Assign"
  input: "^Conv_1/kernel/Assign"
  input: "^Conv_1_bn/beta/Assign"
  input: "^Conv_1_bn/gamma/Assign"
  input: "^Conv_1_bn/moving_mean/Assign"
  input: "^Conv_1_bn/moving_variance/Assign"
  input: "^block_10_depthwise/depthwise_kernel/Assign"
  input: "^block_10_depthwise_BN/beta/Assign"
  input: "^block_10_depthwise_BN/gamma/Assign"
  input: "^block_10_depthwise_BN/moving_mean/Assign"
  input: "^block_10_depthwise_BN/moving_variance/Assign"
  input: "^block_10_expand/kernel/Assign"
  input: "^block_10_expand_BN/beta/Assign"
  input: "^block_10_expand_BN/gamma/Assign"
  input: "^block_10_expand_BN/moving_mean/Assign"
  input: "^block_10_expand_BN/moving_variance/Assign"
  input: "^block_10_project/kernel/Assign"
  input: "^block_10_project_BN/beta/Assign"
  input: "^block_10_project_BN/gamma/Assign"
  input: "^block_10_project_BN/moving_mean/Assign"
  input: "^block_10_project_BN/moving_variance/Assign"
  input: "^block_11_depthwise/depthwise_kernel/Assign"
  input: "^block_11_depthwise_BN/beta/Assign"
  input: "^block_11_depthwise_BN/gamma/Assign"
  input: "^block_11_depthwise_BN/moving_mean/Assign"
  input: "^block_11_depthwise_BN/moving_variance/Assign"
  input: "^block_11_expand/kernel/Assign"
  input: "^block_11_expand_BN/beta/Assign"
  input: "^block_11_expand_BN/gamma/Assign"
  input: "^block_11_expand_BN/moving_mean/Assign"
  input: "^block_11_expand_BN/moving_variance/Assign"
  input: "^block_11_project/kernel/Assign"
  input: "^block_11_project_BN/beta/Assign"
  input: "^block_11_project_BN/gamma/Assign"
  input: "^block_11_project_BN/moving_mean/Assign"
  input: "^block_11_project_BN/moving_variance/Assign"
  input: "^block_12_depthwise/depthwise_kernel/Assign"
  input: "^block_12_depthwise_BN/beta/Assign"
  input: "^block_12_depthwise_BN/gamma/Assign"
  input: "^block_12_depthwise_BN/moving_mean/Assign"
  input: "^block_12_depthwise_BN/moving_variance/Assign"
  input: "^block_12_expand/kernel/Assign"
  input: "^block_12_expand_BN/beta/Assign"
  input: "^block_12_expand_BN/gamma/Assign"
  input: "^block_12_expand_BN/moving_mean/Assign"
  input: "^block_12_expand_BN/moving_variance/Assign"
  input: "^block_12_project/kernel/Assign"
  input: "^block_12_project_BN/beta/Assign"
  input: "^block_12_project_BN/gamma/Assign"
  input: "^block_12_project_BN/moving_mean/Assign"
  input: "^block_12_project_BN/moving_variance/Assign"
  input: "^block_13_depthwise/depthwise_kernel/Assign"
  input: "^block_13_depthwise_BN/beta/Assign"
  input: "^block_13_depthwise_BN/gamma/Assign"
  input: "^block_13_depthwise_BN/moving_mean/Assign"
  input: "^block_13_depthwise_BN/moving_variance/Assign"
  input: "^block_13_expand/kernel/Assign"
  input: "^block_13_expand_BN/beta/Assign"
  input: "^block_13_expand_BN/gamma/Assign"
  input: "^block_13_expand_BN/moving_mean/Assign"
  input: "^block_13_expand_BN/moving_variance/Assign"
  input: "^block_13_project/kernel/Assign"
  input: "^block_13_project_BN/beta/Assign"
  input: "^block_13_project_BN/gamma/Assign"
  input: "^block_13_project_BN/moving_mean/Assign"
  input: "^block_13_project_BN/moving_variance/Assign"
  input: "^block_14_depthwise/depthwise_kernel/Assign"
  input: "^block_14_depthwise_BN/beta/Assign"
  input: "^block_14_depthwise_BN/gamma/Assign"
  input: "^block_14_depthwise_BN/moving_mean/Assign"
  input: "^block_14_depthwise_BN/moving_variance/Assign"
  input: "^block_14_expand/kernel/Assign"
  input: "^block_14_expand_BN/beta/Assign"
  input: "^block_14_expand_BN/gamma/Assign"
  input: "^block_14_expand_BN/moving_mean/Assign"
  input: "^block_14_expand_BN/moving_variance/Assign"
  input: "^block_14_project/kernel/Assign"
  input: "^block_14_project_BN/beta/Assign"
  input: "^block_14_project_BN/gamma/Assign"
  input: "^block_14_project_BN/moving_mean/Assign"
  input: "^block_14_project_BN/moving_variance/Assign"
  input: "^block_15_depthwise/depthwise_kernel/Assign"
  input: "^block_15_depthwise_BN/beta/Assign"
  input: "^block_15_depthwise_BN/gamma/Assign"
  input: "^block_15_depthwise_BN/moving_mean/Assign"
  input: "^block_15_depthwise_BN/moving_variance/Assign"
  input: "^block_15_expand/kernel/Assign"
  input: "^block_15_expand_BN/beta/Assign"
  input: "^block_15_expand_BN/gamma/Assign"
  input: "^block_15_expand_BN/moving_mean/Assign"
  input: "^block_15_expand_BN/moving_variance/Assign"
  input: "^block_15_project/kernel/Assign"
  input: "^block_15_project_BN/beta/Assign"
  input: "^block_15_project_BN/gamma/Assign"
  input: "^block_15_project_BN/moving_mean/Assign"
  input: "^block_15_project_BN/moving_variance/Assign"
  input: "^block_16_depthwise/depthwise_kernel/Assign"
  input: "^block_16_depthwise_BN/beta/Assign"
  input: "^block_16_depthwise_BN/gamma/Assign"
  input: "^block_16_depthwise_BN/moving_mean/Assign"
  input: "^block_16_depthwise_BN/moving_variance/Assign"
  input: "^block_16_expand/kernel/Assign"
  input: "^block_16_expand_BN/beta/Assign"
  input: "^block_16_expand_BN/gamma/Assign"
  input: "^block_16_expand_BN/moving_mean/Assign"
  input: "^block_16_expand_BN/moving_variance/Assign"
  input: "^block_16_project/kernel/Assign"
  input: "^block_16_project_BN/beta/Assign"
  input: "^block_16_project_BN/gamma/Assign"
  input: "^block_16_project_BN/moving_mean/Assign"
  input: "^block_16_project_BN/moving_variance/Assign"
  input: "^block_1_depthwise/depthwise_kernel/Assign"
  input: "^block_1_depthwise_BN/beta/Assign"
  input: "^block_1_depthwise_BN/gamma/Assign"
  input: "^block_1_depthwise_BN/moving_mean/Assign"
  input: "^block_1_depthwise_BN/moving_variance/Assign"
  input: "^block_1_expand/kernel/Assign"
  input: "^block_1_expand_BN/beta/Assign"
  input: "^block_1_expand_BN/gamma/Assign"
  input: "^block_1_expand_BN/moving_mean/Assign"
  input: "^block_1_expand_BN/moving_variance/Assign"
  input: "^block_1_project/kernel/Assign"
  input: "^block_1_project_BN/beta/Assign"
  input: "^block_1_project_BN/gamma/Assign"
  input: "^block_1_project_BN/moving_mean/Assign"
  input: "^block_1_project_BN/moving_variance/Assign"
  input: "^block_2_depthwise/depthwise_kernel/Assign"
  input: "^block_2_depthwise_BN/beta/Assign"
  input: "^block_2_depthwise_BN/gamma/Assign"
  input: "^block_2_depthwise_BN/moving_mean/Assign"
  input: "^block_2_depthwise_BN/moving_variance/Assign"
  input: "^block_2_expand/kernel/Assign"
  input: "^block_2_expand_BN/beta/Assign"
  input: "^block_2_expand_BN/gamma/Assign"
  input: "^block_2_expand_BN/moving_mean/Assign"
  input: "^block_2_expand_BN/moving_variance/Assign"
  input: "^block_2_project/kernel/Assign"
  input: "^block_2_project_BN/beta/Assign"
  input: "^block_2_project_BN/gamma/Assign"
  input: "^block_2_project_BN/moving_mean/Assign"
  input: "^block_2_project_BN/moving_variance/Assign"
  input: "^block_3_depthwise/depthwise_kernel/Assign"
  input: "^block_3_depthwise_BN/beta/Assign"
  input: "^block_3_depthwise_BN/gamma/Assign"
  input: "^block_3_depthwise_BN/moving_mean/Assign"
  input: "^block_3_depthwise_BN/moving_variance/Assign"
  input: "^block_3_expand/kernel/Assign"
  input: "^block_3_expand_BN/beta/Assign"
  input: "^block_3_expand_BN/gamma/Assign"
  input: "^block_3_expand_BN/moving_mean/Assign"
  input: "^block_3_expand_BN/moving_variance/Assign"
  input: "^block_3_project/kernel/Assign"
  input: "^block_3_project_BN/beta/Assign"
  input: "^block_3_project_BN/gamma/Assign"
  input: "^block_3_project_BN/moving_mean/Assign"
  input: "^block_3_project_BN/moving_variance/Assign"
  input: "^block_4_depthwise/depthwise_kernel/Assign"
  input: "^block_4_depthwise_BN/beta/Assign"
  input: "^block_4_depthwise_BN/gamma/Assign"
  input: "^block_4_depthwise_BN/moving_mean/Assign"
  input: "^block_4_depthwise_BN/moving_variance/Assign"
  input: "^block_4_expand/kernel/Assign"
  input: "^block_4_expand_BN/beta/Assign"
  input: "^block_4_expand_BN/gamma/Assign"
  input: "^block_4_expand_BN/moving_mean/Assign"
  input: "^block_4_expand_BN/moving_variance/Assign"
  input: "^block_4_project/kernel/Assign"
  input: "^block_4_project_BN/beta/Assign"
  input: "^block_4_project_BN/gamma/Assign"
  input: "^block_4_project_BN/moving_mean/Assign"
  input: "^block_4_project_BN/moving_variance/Assign"
  input: "^block_5_depthwise/depthwise_kernel/Assign"
  input: "^block_5_depthwise_BN/beta/Assign"
  input: "^block_5_depthwise_BN/gamma/Assign"
  input: "^block_5_depthwise_BN/moving_mean/Assign"
  input: "^block_5_depthwise_BN/moving_variance/Assign"
  input: "^block_5_expand/kernel/Assign"
  input: "^block_5_expand_BN/beta/Assign"
  input: "^block_5_expand_BN/gamma/Assign"
  input: "^block_5_expand_BN/moving_mean/Assign"
  input: "^block_5_expand_BN/moving_variance/Assign"
  input: "^block_5_project/kernel/Assign"
  input: "^block_5_project_BN/beta/Assign"
  input: "^block_5_project_BN/gamma/Assign"
  input: "^block_5_project_BN/moving_mean/Assign"
  input: "^block_5_project_BN/moving_variance/Assign"
  input: "^block_6_depthwise/depthwise_kernel/Assign"
  input: "^block_6_depthwise_BN/beta/Assign"
  input: "^block_6_depthwise_BN/gamma/Assign"
  input: "^block_6_depthwise_BN/moving_mean/Assign"
  input: "^block_6_depthwise_BN/moving_variance/Assign"
  input: "^block_6_expand/kernel/Assign"
  input: "^block_6_expand_BN/beta/Assign"
  input: "^block_6_expand_BN/gamma/Assign"
  input: "^block_6_expand_BN/moving_mean/Assign"
  input: "^block_6_expand_BN/moving_variance/Assign"
  input: "^block_6_project/kernel/Assign"
  input: "^block_6_project_BN/beta/Assign"
  input: "^block_6_project_BN/gamma/Assign"
  input: "^block_6_project_BN/moving_mean/Assign"
  input: "^block_6_project_BN/moving_variance/Assign"
  input: "^block_7_depthwise/depthwise_kernel/Assign"
  input: "^block_7_depthwise_BN/beta/Assign"
  input: "^block_7_depthwise_BN/gamma/Assign"
  input: "^block_7_depthwise_BN/moving_mean/Assign"
  input: "^block_7_depthwise_BN/moving_variance/Assign"
  input: "^block_7_expand/kernel/Assign"
  input: "^block_7_expand_BN/beta/Assign"
  input: "^block_7_expand_BN/gamma/Assign"
  input: "^block_7_expand_BN/moving_mean/Assign"
  input: "^block_7_expand_BN/moving_variance/Assign"
  input: "^block_7_project/kernel/Assign"
  input: "^block_7_project_BN/beta/Assign"
  input: "^block_7_project_BN/gamma/Assign"
  input: "^block_7_project_BN/moving_mean/Assign"
  input: "^block_7_project_BN/moving_variance/Assign"
  input: "^block_8_depthwise/depthwise_kernel/Assign"
  input: "^block_8_depthwise_BN/beta/Assign"
  input: "^block_8_depthwise_BN/gamma/Assign"
  input: "^block_8_depthwise_BN/moving_mean/Assign"
  input: "^block_8_depthwise_BN/moving_variance/Assign"
  input: "^block_8_expand/kernel/Assign"
  input: "^block_8_expand_BN/beta/Assign"
  input: "^block_8_expand_BN/gamma/Assign"
  input: "^block_8_expand_BN/moving_mean/Assign"
  input: "^block_8_expand_BN/moving_variance/Assign"
  input: "^block_8_project/kernel/Assign"
  input: "^block_8_project_BN/beta/Assign"
  input: "^block_8_project_BN/gamma/Assign"
  input: "^block_8_project_BN/moving_mean/Assign"
  input: "^block_8_project_BN/moving_variance/Assign"
  input: "^block_9_depthwise/depthwise_kernel/Assign"
  input: "^block_9_depthwise_BN/beta/Assign"
  input: "^block_9_depthwise_BN/gamma/Assign"
  input: "^block_9_depthwise_BN/moving_mean/Assign"
  input: "^block_9_depthwise_BN/moving_variance/Assign"
  input: "^block_9_expand/kernel/Assign"
  input: "^block_9_expand_BN/beta/Assign"
  input: "^block_9_expand_BN/gamma/Assign"
  input: "^block_9_expand_BN/moving_mean/Assign"
  input: "^block_9_expand_BN/moving_variance/Assign"
  input: "^block_9_project/kernel/Assign"
  input: "^block_9_project_BN/beta/Assign"
  input: "^block_9_project_BN/gamma/Assign"
  input: "^block_9_project_BN/moving_mean/Assign"
  input: "^block_9_project_BN/moving_variance/Assign"
  input: "^bn_Conv1/beta/Assign"
  input: "^bn_Conv1/gamma/Assign"
  input: "^bn_Conv1/moving_mean/Assign"
  input: "^bn_Conv1/moving_variance/Assign"
  input: "^expanded_conv_depthwise/depthwise_kernel/Assign"
  input: "^expanded_conv_depthwise_BN/beta/Assign"
  input: "^expanded_conv_depthwise_BN/gamma/Assign"
  input: "^expanded_conv_depthwise_BN/moving_mean/Assign"
  input: "^expanded_conv_depthwise_BN/moving_variance/Assign"
  input: "^expanded_conv_project/kernel/Assign"
  input: "^expanded_conv_project_BN/beta/Assign"
  input: "^expanded_conv_project_BN/gamma/Assign"
  input: "^expanded_conv_project_BN/moving_mean/Assign"
  input: "^expanded_conv_project_BN/moving_variance/Assign"
}
node {
  name: "fc7/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "fc7/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc7/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16408976912498474
      }
    }
  }
}
node {
  name: "fc7/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fc7/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fc7/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "fc7/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
}
node {
  name: "fc7/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "fc7/kernel/Initializer/truncated_normal/mul"
  input: "fc7/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
}
node {
  name: "fc7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc7/kernel"
    }
  }
}
node {
  name: "fc7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc7/kernel"
}
node {
  name: "fc7/kernel/Assign"
  op: "AssignVariableOp"
  input: "fc7/kernel"
  input: "fc7/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "fc7/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc7/bias/Initializer/zeros"
  op: "Fill"
  input: "fc7/bias/Initializer/zeros/shape_as_tensor"
  input: "fc7/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc7/bias"
    }
  }
}
node {
  name: "fc7/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc7/bias"
}
node {
  name: "fc7/bias/Assign"
  op: "AssignVariableOp"
  input: "fc7/bias"
  input: "fc7/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc7/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/Conv2D"
  op: "Conv2D"
  input: "block_12_add/add"
  input: "fc7/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/BiasAdd"
  op: "BiasAdd"
  input: "fc7/Conv2D"
  input: "fc7/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fc7/Relu"
  op: "Relu"
  input: "fc7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv8_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv8_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv8_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
}
node {
  name: "conv8_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv8_1/kernel/Initializer/truncated_normal/mul"
  input: "conv8_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
}
node {
  name: "conv8_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv8_1/kernel"
    }
  }
}
node {
  name: "conv8_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv8_1/kernel"
}
node {
  name: "conv8_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv8_1/kernel"
  input: "conv8_1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv8_1/bias"
    }
  }
}
node {
  name: "conv8_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv8_1/bias"
}
node {
  name: "conv8_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv8_1/bias"
  input: "conv8_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/Conv2D"
  op: "Conv2D"
  input: "fc7/Relu"
  input: "conv8_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv8_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/BiasAdd"
  op: "BiasAdd"
  input: "conv8_1/Conv2D"
  input: "conv8_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv8_1/Relu"
  op: "Relu"
  input: "conv8_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_padding/Pad"
  op: "Pad"
  input: "conv8_1/Relu"
  input: "conv8_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv8_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv8_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv8_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
}
node {
  name: "conv8_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv8_2/kernel/Initializer/truncated_normal/mul"
  input: "conv8_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
}
node {
  name: "conv8_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv8_2/kernel"
    }
  }
}
node {
  name: "conv8_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv8_2/kernel"
}
node {
  name: "conv8_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv8_2/kernel"
  input: "conv8_2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv8_2/bias"
    }
  }
}
node {
  name: "conv8_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv8_2/bias"
}
node {
  name: "conv8_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv8_2/bias"
  input: "conv8_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/Conv2D"
  op: "Conv2D"
  input: "conv8_padding/Pad"
  input: "conv8_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv8_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv8_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_2/BiasAdd"
  op: "BiasAdd"
  input: "conv8_2/Conv2D"
  input: "conv8_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv8_2/Relu"
  op: "Relu"
  input: "conv8_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv9_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv9_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv9_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
}
node {
  name: "conv9_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv9_1/kernel/Initializer/truncated_normal/mul"
  input: "conv9_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
}
node {
  name: "conv9_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv9_1/kernel"
    }
  }
}
node {
  name: "conv9_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv9_1/kernel"
}
node {
  name: "conv9_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv9_1/kernel"
  input: "conv9_1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv9_1/bias"
    }
  }
}
node {
  name: "conv9_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv9_1/bias"
}
node {
  name: "conv9_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv9_1/bias"
  input: "conv9_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/Conv2D"
  op: "Conv2D"
  input: "conv8_2/Relu"
  input: "conv9_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv9_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/BiasAdd"
  op: "BiasAdd"
  input: "conv9_1/Conv2D"
  input: "conv9_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv9_1/Relu"
  op: "Relu"
  input: "conv9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_padding/Pad"
  op: "Pad"
  input: "conv9_1/Relu"
  input: "conv9_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv9_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv9_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv9_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
}
node {
  name: "conv9_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv9_2/kernel/Initializer/truncated_normal/mul"
  input: "conv9_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
}
node {
  name: "conv9_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv9_2/kernel"
    }
  }
}
node {
  name: "conv9_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv9_2/kernel"
}
node {
  name: "conv9_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv9_2/kernel"
  input: "conv9_2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv9_2/bias"
    }
  }
}
node {
  name: "conv9_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv9_2/bias"
}
node {
  name: "conv9_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv9_2/bias"
  input: "conv9_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/Conv2D"
  op: "Conv2D"
  input: "conv9_padding/Pad"
  input: "conv9_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv9_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv9_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_2/BiasAdd"
  op: "BiasAdd"
  input: "conv9_2/Conv2D"
  input: "conv9_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv9_2/Relu"
  op: "Relu"
  input: "conv9_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv10_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv10_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv10_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
}
node {
  name: "conv10_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv10_1/kernel/Initializer/truncated_normal/mul"
  input: "conv10_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
}
node {
  name: "conv10_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv10_1/kernel"
    }
  }
}
node {
  name: "conv10_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv10_1/kernel"
}
node {
  name: "conv10_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv10_1/kernel"
  input: "conv10_1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv10_1/bias"
    }
  }
}
node {
  name: "conv10_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv10_1/bias"
}
node {
  name: "conv10_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv10_1/bias"
  input: "conv10_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/Conv2D"
  op: "Conv2D"
  input: "conv9_2/Relu"
  input: "conv10_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv10_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/BiasAdd"
  op: "BiasAdd"
  input: "conv10_1/Conv2D"
  input: "conv10_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv10_1/Relu"
  op: "Relu"
  input: "conv10_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv10_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv10_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv10_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
}
node {
  name: "conv10_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv10_2/kernel/Initializer/truncated_normal/mul"
  input: "conv10_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
}
node {
  name: "conv10_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv10_2/kernel"
    }
  }
}
node {
  name: "conv10_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv10_2/kernel"
}
node {
  name: "conv10_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv10_2/kernel"
  input: "conv10_2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv10_2/bias"
    }
  }
}
node {
  name: "conv10_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv10_2/bias"
}
node {
  name: "conv10_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv10_2/bias"
  input: "conv10_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/Conv2D"
  op: "Conv2D"
  input: "conv10_1/Relu"
  input: "conv10_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv10_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv10_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_2/BiasAdd"
  op: "BiasAdd"
  input: "conv10_2/Conv2D"
  input: "conv10_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv10_2/Relu"
  op: "Relu"
  input: "conv10_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv11_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv11_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
}
node {
  name: "conv11_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv11_1/kernel/Initializer/truncated_normal/mul"
  input: "conv11_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
}
node {
  name: "conv11_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv11_1/kernel"
    }
  }
}
node {
  name: "conv11_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv11_1/kernel"
}
node {
  name: "conv11_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv11_1/kernel"
  input: "conv11_1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv11_1/bias"
    }
  }
}
node {
  name: "conv11_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv11_1/bias"
}
node {
  name: "conv11_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv11_1/bias"
  input: "conv11_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/Conv2D"
  op: "Conv2D"
  input: "conv10_2/Relu"
  input: "conv11_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/BiasAdd"
  op: "BiasAdd"
  input: "conv11_1/Conv2D"
  input: "conv11_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv11_1/Relu"
  op: "Relu"
  input: "conv11_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv11_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv11_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
}
node {
  name: "conv11_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv11_2/kernel/Initializer/truncated_normal/mul"
  input: "conv11_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
}
node {
  name: "conv11_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv11_2/kernel"
    }
  }
}
node {
  name: "conv11_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv11_2/kernel"
}
node {
  name: "conv11_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv11_2/kernel"
  input: "conv11_2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv11_2/bias"
    }
  }
}
node {
  name: "conv11_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv11_2/bias"
}
node {
  name: "conv11_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv11_2/bias"
  input: "conv11_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/Conv2D"
  op: "Conv2D"
  input: "conv11_1/Relu"
  input: "conv11_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv11_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_2/BiasAdd"
  op: "BiasAdd"
  input: "conv11_2/Conv2D"
  input: "conv11_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv11_2/Relu"
  op: "Relu"
  input: "conv11_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09473726898431778
      }
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
}
node {
  name: "classes1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes1/kernel/Initializer/truncated_normal/mul"
  input: "classes1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
}
node {
  name: "classes1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes1/kernel"
    }
  }
}
node {
  name: "classes1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes1/kernel"
}
node {
  name: "classes1/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes1/kernel"
  input: "classes1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes1/bias"
    }
  }
}
node {
  name: "classes1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes1/bias"
}
node {
  name: "classes1/bias/Assign"
  op: "AssignVariableOp"
  input: "classes1/bias"
  input: "classes1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/Conv2D"
  op: "Conv2D"
  input: "block_4_add/add"
  input: "classes1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes1/BiasAdd"
  op: "BiasAdd"
  input: "classes1/Conv2D"
  input: "classes1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
}
node {
  name: "classes2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes2/kernel/Initializer/truncated_normal/mul"
  input: "classes2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
}
node {
  name: "classes2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes2/kernel"
    }
  }
}
node {
  name: "classes2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes2/kernel"
}
node {
  name: "classes2/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes2/kernel"
  input: "classes2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes2/bias"
    }
  }
}
node {
  name: "classes2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes2/bias"
}
node {
  name: "classes2/bias/Assign"
  op: "AssignVariableOp"
  input: "classes2/bias"
  input: "classes2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/Conv2D"
  op: "Conv2D"
  input: "fc7/Relu"
  input: "classes2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes2/BiasAdd"
  op: "BiasAdd"
  input: "classes2/Conv2D"
  input: "classes2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023684317246079445
      }
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
}
node {
  name: "classes3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes3/kernel/Initializer/truncated_normal/mul"
  input: "classes3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
}
node {
  name: "classes3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes3/kernel"
    }
  }
}
node {
  name: "classes3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes3/kernel"
}
node {
  name: "classes3/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes3/kernel"
  input: "classes3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes3/bias"
    }
  }
}
node {
  name: "classes3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes3/bias"
}
node {
  name: "classes3/bias/Assign"
  op: "AssignVariableOp"
  input: "classes3/bias"
  input: "classes3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/Conv2D"
  op: "Conv2D"
  input: "conv8_2/Relu"
  input: "classes3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes3/BiasAdd"
  op: "BiasAdd"
  input: "classes3/Conv2D"
  input: "classes3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes4/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes4/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes4/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
}
node {
  name: "classes4/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes4/kernel/Initializer/truncated_normal/mul"
  input: "classes4/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
}
node {
  name: "classes4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes4/kernel"
    }
  }
}
node {
  name: "classes4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes4/kernel"
}
node {
  name: "classes4/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes4/kernel"
  input: "classes4/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes4/bias"
    }
  }
}
node {
  name: "classes4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes4/bias"
}
node {
  name: "classes4/bias/Assign"
  op: "AssignVariableOp"
  input: "classes4/bias"
  input: "classes4/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/Conv2D"
  op: "Conv2D"
  input: "conv9_2/Relu"
  input: "classes4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes4/BiasAdd"
  op: "BiasAdd"
  input: "classes4/Conv2D"
  input: "classes4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes5/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes5/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes5/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
}
node {
  name: "classes5/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes5/kernel/Initializer/truncated_normal/mul"
  input: "classes5/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
}
node {
  name: "classes5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes5/kernel"
    }
  }
}
node {
  name: "classes5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes5/kernel"
}
node {
  name: "classes5/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes5/kernel"
  input: "classes5/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes5/bias"
    }
  }
}
node {
  name: "classes5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes5/bias"
}
node {
  name: "classes5/bias/Assign"
  op: "AssignVariableOp"
  input: "classes5/bias"
  input: "classes5/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes5/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/Conv2D"
  op: "Conv2D"
  input: "conv10_2/Relu"
  input: "classes5/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes5/BiasAdd"
  op: "BiasAdd"
  input: "classes5/Conv2D"
  input: "classes5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "classes6/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "classes6/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "classes6/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
}
node {
  name: "classes6/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "classes6/kernel/Initializer/truncated_normal/mul"
  input: "classes6/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
}
node {
  name: "classes6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes6/kernel"
    }
  }
}
node {
  name: "classes6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes6/kernel"
}
node {
  name: "classes6/kernel/Assign"
  op: "AssignVariableOp"
  input: "classes6/kernel"
  input: "classes6/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "classes6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@classes6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "classes6/bias"
    }
  }
}
node {
  name: "classes6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "classes6/bias"
}
node {
  name: "classes6/bias/Assign"
  op: "AssignVariableOp"
  input: "classes6/bias"
  input: "classes6/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "classes6/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/Conv2D"
  op: "Conv2D"
  input: "conv11_2/Relu"
  input: "classes6/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "classes6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "classes6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes6/BiasAdd"
  op: "BiasAdd"
  input: "classes6/Conv2D"
  input: "classes6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09473726898431778
      }
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
}
node {
  name: "boxes1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes1/kernel/Initializer/truncated_normal/mul"
  input: "boxes1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
}
node {
  name: "boxes1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes1/kernel"
    }
  }
}
node {
  name: "boxes1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes1/kernel"
}
node {
  name: "boxes1/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes1/kernel"
  input: "boxes1/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes1/bias"
    }
  }
}
node {
  name: "boxes1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes1/bias"
}
node {
  name: "boxes1/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes1/bias"
  input: "boxes1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/Conv2D"
  op: "Conv2D"
  input: "block_4_add/add"
  input: "boxes1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes1/BiasAdd"
  op: "BiasAdd"
  input: "boxes1/Conv2D"
  input: "boxes1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01674734055995941
      }
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
}
node {
  name: "boxes2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes2/kernel/Initializer/truncated_normal/mul"
  input: "boxes2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
}
node {
  name: "boxes2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes2/kernel"
    }
  }
}
node {
  name: "boxes2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes2/kernel"
}
node {
  name: "boxes2/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes2/kernel"
  input: "boxes2/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes2/bias"
    }
  }
}
node {
  name: "boxes2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes2/bias"
}
node {
  name: "boxes2/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes2/bias"
  input: "boxes2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/Conv2D"
  op: "Conv2D"
  input: "fc7/Relu"
  input: "boxes2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes2/BiasAdd"
  op: "BiasAdd"
  input: "boxes2/Conv2D"
  input: "boxes2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023684317246079445
      }
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
}
node {
  name: "boxes3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes3/kernel/Initializer/truncated_normal/mul"
  input: "boxes3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
}
node {
  name: "boxes3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes3/kernel"
    }
  }
}
node {
  name: "boxes3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes3/kernel"
}
node {
  name: "boxes3/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes3/kernel"
  input: "boxes3/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes3/bias"
    }
  }
}
node {
  name: "boxes3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes3/bias"
}
node {
  name: "boxes3/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes3/bias"
  input: "boxes3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/Conv2D"
  op: "Conv2D"
  input: "conv8_2/Relu"
  input: "boxes3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes3/BiasAdd"
  op: "BiasAdd"
  input: "boxes3/Conv2D"
  input: "boxes3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes4/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes4/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes4/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
}
node {
  name: "boxes4/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes4/kernel/Initializer/truncated_normal/mul"
  input: "boxes4/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
}
node {
  name: "boxes4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes4/kernel"
    }
  }
}
node {
  name: "boxes4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes4/kernel"
}
node {
  name: "boxes4/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes4/kernel"
  input: "boxes4/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes4/bias"
    }
  }
}
node {
  name: "boxes4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes4/bias"
}
node {
  name: "boxes4/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes4/bias"
  input: "boxes4/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/Conv2D"
  op: "Conv2D"
  input: "conv9_2/Relu"
  input: "boxes4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes4/BiasAdd"
  op: "BiasAdd"
  input: "boxes4/Conv2D"
  input: "boxes4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes5/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes5/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes5/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
}
node {
  name: "boxes5/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes5/kernel/Initializer/truncated_normal/mul"
  input: "boxes5/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
}
node {
  name: "boxes5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes5/kernel"
    }
  }
}
node {
  name: "boxes5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes5/kernel"
}
node {
  name: "boxes5/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes5/kernel"
  input: "boxes5/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes5/bias"
    }
  }
}
node {
  name: "boxes5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes5/bias"
}
node {
  name: "boxes5/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes5/bias"
  input: "boxes5/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes5/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/Conv2D"
  op: "Conv2D"
  input: "conv10_2/Relu"
  input: "boxes5/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes5/BiasAdd"
  op: "BiasAdd"
  input: "boxes5/Conv2D"
  input: "boxes5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "boxes6/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "boxes6/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "boxes6/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
}
node {
  name: "boxes6/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "boxes6/kernel/Initializer/truncated_normal/mul"
  input: "boxes6/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
}
node {
  name: "boxes6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes6/kernel"
    }
  }
}
node {
  name: "boxes6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes6/kernel"
}
node {
  name: "boxes6/kernel/Assign"
  op: "AssignVariableOp"
  input: "boxes6/kernel"
  input: "boxes6/kernel/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "boxes6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@boxes6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "boxes6/bias"
    }
  }
}
node {
  name: "boxes6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "boxes6/bias"
}
node {
  name: "boxes6/bias/Assign"
  op: "AssignVariableOp"
  input: "boxes6/bias"
  input: "boxes6/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "boxes6/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/Conv2D"
  op: "Conv2D"
  input: "conv11_2/Relu"
  input: "boxes6/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "boxes6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "boxes6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "boxes6/BiasAdd"
  op: "BiasAdd"
  input: "boxes6/Conv2D"
  input: "boxes6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "anchors1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "33\363@33\363@33sA33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\303\335(A\303\335\250A\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\252\266\276@\252\266\236A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\017v\247@\0271\273A\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\252\266\036A\252\266>A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@=\371;AL\361&A=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\303\335(A\303\335\350A\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\252\266\276@\252\266\336A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\017v\247@\0271\373A\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\303\335(A\303\335\010B\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\252\266\276@Tm\375A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\017v\247@\0271\033B\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC33\363@33\263A33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\303\335(A\303\335\340A\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\252\266\276@\252\266\326A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\017v\247@\0271\363A\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\252\266\036ATm}A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC=\371;A\230\342MA=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC33\363@33cA33sA\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\303\335(A\303\335\240A\303\335\250A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\252\266\276@\252\266\226A\252\266>A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\017v\247@\0271\263A\017v\'A\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\252\266\036A\252\266.A\252\266\236A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC=\371;AL\361\026A=\371\273A\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000@A33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\303\335hA\303\335\250A\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000@A\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000@A\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\252\266^A\252\266>A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@=\371{AL\361&A=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\303\335hA\303\335\350A\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000@A\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000@A\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\303\335hA\303\335\010B\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000@ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000@A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000@A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\303\335hA\303\335\340A\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000@A\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000@A\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\252\266^ATm}A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC=\371{A\230\342MA=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000@A33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\303\335hA\303\335\240A\303\335\350A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000@A\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000@A\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\252\266^A\252\266.A\252\266\336A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC=\371{AL\361\026A=\371\373A\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\240A33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\240A\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\240A\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\240A\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\240A\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\240AL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\240A\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\240A\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\240A\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\240A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\240A\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\240A\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\240A\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\240ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\240A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\240A33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\240A\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\240A\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\240A\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\240A\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\240AL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\340A33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\340A\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\340A\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\340A\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\340A\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\340AL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\340A\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\340A\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\340A\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340A\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340ATm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340A\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\340A33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\340A\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\340A\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\340A\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\340ATm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\340A\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\340A33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\340A\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\340A\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\340A\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\340A\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\340AL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\020B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\020B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\020B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\020B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\020B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\020BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\020B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\020B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\020B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\020B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\020B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\020B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\020B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\020BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\020B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\020B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\020B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\020B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\020B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\020B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\020BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\0000B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\0000B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\0000B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\0000B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\0000B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\0000BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\0000B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\0000B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\0000B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0000B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\0000B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\0000B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\0000B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0000BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0000B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\0000B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\0000B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\0000B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\0000B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\0000B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\0000BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000PB33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000PB\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000PB\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000PB\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000PB\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000PBL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000PB\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000PB\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000PB\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000PB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000PB\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000PB\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000PB\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000PBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000PB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000PB33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000PB\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000PB\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000PB\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000PB\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000PBL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000pB33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000pB\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000pB\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000pB\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000pB\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000pBL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000pB\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000pB\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000pB\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pB\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pBTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pB\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000pB33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000pB\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000pB\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000pB\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000pBTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000pB\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000pB33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000pB\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000pB\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000pB\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000pB\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000pBL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\210B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\210B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\210B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\210B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\210B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\210BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\210B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\210B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\210B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\210B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\210B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\210B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\210B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\210BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\210B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\210B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\210B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\210B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\210B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\210B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\210BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\230B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\230B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\230B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\230B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\230B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\230BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\230B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\230B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\230B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\230B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\230B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\230B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\230B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\230BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\230B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\230B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\230B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\230B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\230B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\230B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\230BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\250B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\250B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\250B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\250B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\250B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\250BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\250B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\250B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\250B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\250B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\250B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\250B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\250B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\250BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\250B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\250B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\250B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\250B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\250B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\250B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\250BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\270B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\270B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\270B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\270B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\270B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\270BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\270B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\270B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\270B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\270B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\270B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\270B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\270B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\270BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\270B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\270B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\270B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\270B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\270B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\270B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\270BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\310B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\310B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\310B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\310B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\310B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\310BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\310B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\310B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\310B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\310B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\310B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\310B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\310B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\310BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\310B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\310B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\310B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\310B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\310B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\310B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\310BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\330B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\330B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\330B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\330B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\330B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\330BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\330B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\330B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\330B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\330B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\330B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\330B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\330B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\330BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\330B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\330B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\330B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\330B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\330B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\330B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\330BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\350B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\350B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\350B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\350B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\350B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\350BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\350B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\350B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\350B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\350B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\350B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\350B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\350B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\350BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\350B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\350B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\350B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\350B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\350B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\350B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\350BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\370B33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\370B\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\370B\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\370B\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\370B\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\370BL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\370B\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\370B\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\370B\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370B\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370BTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370B\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\370B33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\370B\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\370B\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\370B\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\370BTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\370B\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\370B33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\370B\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\370B\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\370B\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\370B\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\370BL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\004C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\004C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\004C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\004C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\004C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\004CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\004C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\004C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\004C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\004C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\004C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\004C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\004C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\004C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\004C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\004C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\004C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\004CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\014C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\014C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\014C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\014C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\014C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\014CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\014C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\014C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\014C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\014C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\014C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\014C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\014C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\014CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\014C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\014C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\014C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\014C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\014C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\014C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\014CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\024C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\024C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\024C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\024C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\024C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\024CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\024C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\024C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\024C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\024C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\024C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\024C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\024C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\024CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\024C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\024C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\024C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\024C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\024C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\024C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\024CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000\034C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000\034C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000\034C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000\034C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000\034C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000\034CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000\034C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000\034C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000\034C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\034C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000\034C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000\034C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000\034C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\034CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000\034C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000\034C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000\034C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000\034C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000\034C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000\034C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000\034CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000$C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000$C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000$C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000$C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000$C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000$CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000$C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000$C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000$C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000$C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000$C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000$C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000$C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000$CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000$C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000$C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000$C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000$C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000$C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000$C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000$CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000,C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000,C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000,C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000,C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000,C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000,CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000,C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000,C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000,C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000,C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000,C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000,C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000,C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000,CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000,C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000,C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000,C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000,C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000,C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000,C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000,CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\0004C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\0004C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\0004C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\0004C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\0004C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\0004CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\0004C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\0004C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\0004C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0004C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\0004C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\0004C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\0004C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0004CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\0004C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\0004C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\0004C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\0004C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\0004C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\0004C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\0004CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000<C33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000<C\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000<C\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000<C\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000<C\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000<CL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000<C\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000<C\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000<C\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<C\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<CTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<C\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000<C33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000<C\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000<C\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000<C\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000<CTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000<C\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000<C33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000<C\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000<C\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000<C\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000<C\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000<CL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000DC33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000DC\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000DC\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000DC\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000DC\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000DCL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000DC\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000DC\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000DC\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000DC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000DC\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000DC\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000DC\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000DCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000DC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000DC33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000DC\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000DC\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000DC\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000DC\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000DCL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000LC33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A\000\000LC\303\335\250A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000LC\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000LC\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\000\000LC\252\266>ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@\000\000LCL\361&A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA\000\000LC\303\335\350A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000LC\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000LC\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LC\303\335\010B\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000LC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC\000\000LC\303\335\340A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000LC\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000LC\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000LCTm}ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000LC\230\342MA=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000LC33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC\000\000LC\303\335\240A\303\335\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000LC\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000LC\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\000\000LC\252\266.ATm\375A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZC\000\000LCL\361\026A=\371\033B\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@\000\000TC33sA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A$\362PC\303\335\250A\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036A\000\000TC\252\266\236ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;A\000\000TC\0271\273A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\225\224QC\252\266>A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@l\300OCL\361&A=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA$\362PC\303\335\350A\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^A\000\000TC\252\266\336ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{A\000\000TC\0271\373A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Al\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Al\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Al\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PBl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pBl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370Bl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<Cl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DCl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC$\362PC\303\335\010B\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000TCTm\375ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\000\000TC\0271\033B\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LCl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\000\000TC33\263A33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC$\362PC\303\335\340A\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QC\000\000TC\252\266\326ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OC\000\000TC\0271\363A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\225\224QCTm}A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TCl\300OC\230\342MA=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WC\000\000TC33cA33\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC$\362PC\303\335\240A\303\335\340A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UC\000\000TC\252\266\226ATm}A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SC\000\000TC\0271\263A\036\354NA\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\225\224QC\252\266.A\252\266\326A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZCl\300OCL\361\026A=\371\363A\000\000\200?\000\000\200?\000\000\200?\000\000\200?33\363@f\346WC33sA33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335(A$\362TC\303\335\250A\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\036AK\212YC\252\266\236A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271;APDZC\0271\273A\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266\276@\225\224UC\252\266>A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?L\361\246@l\300SCL\361&A=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Af\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\303\335hA$\362TC\303\335\350A\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\252\266^AK\212YC\252\266\336A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\0271{APDZC\0271\373A\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@A\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Al\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Af\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240AK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240APDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240A\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Al\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Af\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340AK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340APDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340A\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Al\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PBf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PBK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PBPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PB\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000PBl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pBf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pBK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pBPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pB\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000pBl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\210Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\230Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\270Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\310Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\330Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\350Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370Bf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370BK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370BPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370B\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\370Bl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\004Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\024Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\034Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000$Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000,Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0004Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<Cf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<CK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<CPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<C\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000<Cl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DCf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DCK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DCPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DC\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000DCl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LCf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC$\362TC\303\335\010B\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LCK\212YCTm\375A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LCPDZC\0271\033B\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LC\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000LCl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TCf\346WC33\263A33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362PC$\362TC\303\335\340A\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224QCK\212YC\252\266\326A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314OCPDZC\0271\363A\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TC\225\224UCTm}A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000TCl\300SC\230\342MA=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?f\346WCf\346WC33cA33cA\000\000\200?\000\000\200?\000\000\200?\000\000\200?$\362TC$\362TC\303\335\240A\303\335\240A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\225\224UCK\212YC\252\266\226A\252\266.A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357\314SCPDZC\0271\263A\017v\027A\000\000\200?\000\000\200?\000\000\200?\000\000\200?K\212YC\225\224UC\252\266.A\252\266\226A\000\000\200?\000\000\200?\000\000\200?\000\000\200?vHZCl\300SCL\361\026A=\371\263A\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors1/Shape"
  op: "Shape"
  input: "boxes1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/strided_slice"
  op: "StridedSlice"
  input: "anchors1/Shape"
  input: "anchors1/strided_slice/stack"
  input: "anchors1/strided_slice/stack_1"
  input: "anchors1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1/Tile/multiples"
  op: "Pack"
  input: "anchors1/strided_slice"
  input: "anchors1/Tile/multiples/1"
  input: "anchors1/Tile/multiples/2"
  input: "anchors1/Tile/multiples/3"
  input: "anchors1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors1/Tile"
  op: "Tile"
  input: "anchors1/Const"
  input: "anchors1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 14
          }
          dim {
            size: 14
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\211\210\210A\211\210\210A\211\210\010B\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\033\n\243A\033\n#B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\034\325SA\034\3253B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325Ag\2648A\232\016UBg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\034\325\263A\034\325\323A\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\034\370\325A\203\031\270A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\211\210\210A\211\210HB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\033\n\243A\033\ncB\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\034\325SA\034\325sB\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nBg\2648AM\207\212Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*Bg\2648AM\207\252Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`Bg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220Bg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260Bg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320Bg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360Bg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010Cg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030Cg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(Cg\2648A\232\016\265Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\211\210\210A\021\021QB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\033\n\243A\033\n\203B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\034\325SA\034\325\223B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364Cg\2648AM\207\250Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\211\210\210A\211\210DB\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\033\n\243A\033\n_B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\034\325SA\034\325oB\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<Cg\2648AM\207\210Bg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\034\325\263A\034\325\023B\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\034\370\325A\0063\360A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\211\210\210A\211\210\004B\211\210\010B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\033\n\243A\033\n\037B\033\n#B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\034\325SA\034\325/B\034\325\323A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DCg\2648A\232\016QBg\264\270A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\034\325\263A\034\325\313A\034\3253B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\034\370\325A\203\031\260A\034\370UB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\211\210\310A\211\210\010B\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\033\n\343A\033\n#B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\300A\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\300A\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\034\325\363A\034\325\323A\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\016\374\nB\203\031\270A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\211\210\310A\211\210HB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\033\n\343A\033\ncB\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\300A\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\300AM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\300AM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\300A\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\211\210\310A\021\021QB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\033\n\343A\033\n\203B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\300A\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\300AM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\211\210\310A\211\210DB\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\033\n\343A\033\n_B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\300A\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\300AM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\034\325\363A\034\325\023B\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\016\374\nB\0063\360A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\211\210\310A\211\210\004B\211\210HB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\033\n\343A\033\n\037B\033\ncB\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\300A\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\300A\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\034\325\363A\034\325\313A\034\325sB\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\016\374\nB\203\031\260A\016\374\212B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000 B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000 B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000 B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000 B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000 B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\016\374*B\203\031\270A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000 B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000 B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000 B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000 BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000 BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000 B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000 B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000 B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000 B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000 BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000 B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000 B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000 B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000 BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000 B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\016\374*B\0063\360A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000 B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000 B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000 B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000 B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000 B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\016\374*B\203\031\260A\016\374\252B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000`B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000`B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000`B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000`B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000`B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000`B\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000`B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000`B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000`B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000`BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000`BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000`B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000`B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000`B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000`BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000`B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000`B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000`B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000`BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000`B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000`B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000`B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000`B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000`B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000`B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000`B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000`B\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\220B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\220B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\220B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\220B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\220B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\220B\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\220B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\220B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\220B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\220BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\220BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\220B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\220B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\220B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\220BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\220B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\220B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\220B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\220BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\220B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\220B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\220B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\220B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\220B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\220B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\220B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\220B\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\260B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\260B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\260B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\260B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\260B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\260B\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\260B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\260B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\260B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\260BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\260BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\260B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\260B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\260B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\260BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\260B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\260B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\260B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\260BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\260B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\260B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\260B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\260B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\260B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\260B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\260B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\260B\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\320B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\320B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\320B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\320B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\320B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\320B\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\320B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\320B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\320B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\320BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\320BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\320B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\320B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\320B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\320BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\320B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\320B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\320B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\320BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\320B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\320B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\320B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\320B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\320B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\320B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\320B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\320B\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\360B\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\360B\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\360B\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\360B\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\360B\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\360B\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\360B\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\360B\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\360B\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\360BM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\360BM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\360B\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\360B\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\360B\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\360BM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\360B\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\360B\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\360B\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\360BM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\360B\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\360B\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\360B\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\360B\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\360B\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\360B\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\360B\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\360B\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\010C\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\010C\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\010C\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\010C\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\010C\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\010C\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\010C\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\010C\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\010C\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\010CM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\010CM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\010C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\010C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\010C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\010CM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\010C\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\010C\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\010C\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\010CM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\010C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\010C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\010C\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\010C\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\010C\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\010C\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\010C\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\010C\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000\030C\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000\030C\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000\030C\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000\030C\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000\030C\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000\030C\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000\030C\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000\030C\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000\030C\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000\030CM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000\030CM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\030C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\030C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\030C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000\030CM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000\030C\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000\030C\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000\030C\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000\030CM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\030C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000\030C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000\030C\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000\030C\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000\030C\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000\030C\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000\030C\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000\030C\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\000(C\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\000(C\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000(C\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000(C\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\000(C\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\000\000(C\203\031\270A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\000(C\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\000(C\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000(C\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000(CM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000(CM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000(C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000(C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000(C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000(CM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\000(C\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\000(C\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000(C\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000(CM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000(C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\000(C\0063\360A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\000(C\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\000(C\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000(C\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000(C\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\000(C\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\000\000(C\203\031\260A\034\370\265B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\000\0008C\211\210\010B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\000\0008C\033\n#B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\0008C\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\0008C\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA\000\0008C\034\325\323A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\375\3004C\203\031\270A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\000\0008C\211\210HB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\000\0008C\033\ncB\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\0008C\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\0008CM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\0008CM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\0008C\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\0008C\021\021QB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\0008C\033\n\203B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\0008C\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\0008CM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\000\0008C\211\210DB\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\000\0008C\033\n_B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\0008C\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\0008CM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\000\0008C\034\325\023B\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\375\3004C\0063\360A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\000\0008C\211\210\004B\021\021QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\000\0008C\033\n\037B\033\n\203B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\0008C\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\0008C\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC\000\0008C\034\325\313A\034\325\223B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\375\3004C\203\031\260A\016\374\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\357nFC\211\210\010B\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\275\036CC\033\n#B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\000\000HC\034\3253B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\000\000HC\232\016UB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA]\005AC\034\325\323A\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\375\300<C\203\031\270A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\357nFC\211\210HB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\275\036CC\033\ncB\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\000\000HC\034\325sB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\000\000HCM\207\212B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\000\000HCM\207\252B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\000\000HC\232\016\265B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\357nFC\021\021QB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\275\036CC\033\n\203B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\000\000HC\034\325\223B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\000\000HCM\207\250B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\357nFC\211\210DB\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\275\036CC\033\n_B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\000\000HC\034\325oB\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\000\000HCM\207\210B\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC]\005AC\034\325\023B\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\375\300<C\0063\360A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\357nFC\211\210\004B\211\210DB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\275\036CC\033\n\037B\033\n_B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\000\000HC\034\325/B\034\325\023B\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\000\000HC\232\016QB\316h\361A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC]\005AC\034\325\313A\034\325oB\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\375\300<C\203\031\260A\016\374\210B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\210A\357nNC\211\210\010B\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\243A\275\036KC\033\n#B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\263A\256BRC\034\3253B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\232\016\325A\272\364SC\232\016UBg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325SA]\005IC\034\325\323A\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\203\0318A\375\300DC\203\031\270A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\210\310A\357nNC\211\210HB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\033\n\343A\275\036KC\033\ncB\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\034\325\363A\256BRC\034\325sB\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207\nB\272\364SCM\207\212Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300A\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?M\207*B\272\364SCM\207\252Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\220B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\260B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\320B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\360B\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\010C\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\030C\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\272\364SC\232\016\265Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\357nNC\021\021QB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\275\036KC\033\n\203B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\256BRC\034\325\223B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\3364C\272\364SCM\207\250Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0008C\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nFC\357nNC\211\210DB\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036CC\275\036KC\033\n_B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005AC\256BRC\034\325oB\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336<C\272\364SCM\207\210Bg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC]\005IC\034\325\023B\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000HC\375\300DC\0063\360A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\357nNC\357nNC\211\210\004B\211\210\004B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\275\036KC\275\036KC\033\n\037B\033\n\037B\000\000\200?\000\000\200?\000\000\200?\000\000\200?]\005IC\256BRC\034\325/B\034\325\313A\000\000\200?\000\000\200?\000\000\200?\000\000\200?-\336DC\272\364SC\232\016QBg\264\260A\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256BRC]\005IC\034\325\313A\034\325/B\000\000\200?\000\000\200?\000\000\200?\000\000\200?h\376SC\375\300DC\203\031\260A\034\370QB\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors2/Shape"
  op: "Shape"
  input: "boxes2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/strided_slice"
  op: "StridedSlice"
  input: "anchors2/Shape"
  input: "anchors2/strided_slice/stack"
  input: "anchors2/strided_slice/stack_1"
  input: "anchors2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors2/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2/Tile/multiples"
  op: "Pack"
  input: "anchors2/strided_slice"
  input: "anchors2/Tile/multiples/1"
  input: "anchors2/Tile/multiples/2"
  input: "anchors2/Tile/multiples/3"
  input: "anchors2/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors2/Tile"
  op: "Tile"
  input: "anchors2/Const"
  input: "anchors2/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "DD\344ADD\344ADDdBDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377Ax\322\377Ax\322\177Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024Bq\'\264Aq\'\224Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\343\326\236AUB\256B\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264Aq\'\024Bq\'4Bq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\315\371.B0]\036B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@BDD\344ADD\244BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Bx\322\377Ax\322\277Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TBq\'\264Aq\'\324Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\343\326\236AUB\356B\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Bq\'\024B\343NhBq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\315\371.B`\272<B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240BDD\344ADD\244BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Bx\322\377Ax\322\277Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Bq\'\264A\343N\350Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\343\326\236AUB\016C\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Bq\'\024B\343NhBq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\315\371.B`\272<B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340BDD\344ADD\244BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Bx\322\377Ax\322\277Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Bq\'\264A\343N\350Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\343\326\236AUB\016C\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Bq\'\024B\343NhBq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\315\371.B`\272<B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020CDD\344ADD\244BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Cx\322\377Ax\322\277Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Cq\'\264A\343N\350Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\343\326\236AUB\016C\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Cq\'\024B\343NhBq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\315\371.B`\272<B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000CDD\344ADD\244BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Cx\322\377Ax\322\277Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*Cq\'\264Aq\'\322Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\343\326\236AUB\354B\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Cq\'\024B\343NhBq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\315\371.B`\272<B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BCDD\344ADD`BDDdB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?Cx\322\377Ax\322{Bx\322\177B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:Cq\'\264Aq\'\222Bq\'4B\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\343\326\236AUB\254B\343\326\036B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HCq\'\024Bq\'0Bq\'\224B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\315\371.B0]\032B\315\371\256B\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344A\000\000@BDDdBDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\000\000@Bx\322\177Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\000\000@Bq\'\224B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\000\000@BUB\256B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264Aq\'TBq\'4Bq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\315\371nB0]\036B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000@BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000@Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\000\000@Bq\'\324B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\000\000@BUB\356B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Bq\'TB\343NhBq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\315\371nB`\272<B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000@BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000@Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000@B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000@BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Bq\'TB\343NhBq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\315\371nB`\272<B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000@BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000@Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000@B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000@BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Bq\'TB\343NhBq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\315\371nB`\272<B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000@BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000@Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000@B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000@BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Cq\'TB\343NhBq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\315\371nB`\272<B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000@BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000@Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\000\000@Bq\'\322B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\000\000@BUB\354B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Cq\'TB\343NhBq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\315\371nB`\272<B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BC\000\000@BDD`BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\000\000@Bx\322{Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\000\000@Bq\'\222B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\000\000@BUB\254B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HCq\'TBq\'0Bq\'\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\315\371nB0]\032B\315\371\356B\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344A\000\000\240BDDdBDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\000\000\240Bx\322\177Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\000\000\240Bq\'\224B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\000\000\240BUB\256B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264A\000\000\240Bq\'4B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\000\000\240B0]\036B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\240BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\240Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\000\000\240Bq\'\324B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\000\000\240BUB\356B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\240B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\240B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\240B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\240B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\240B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\240BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\240Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\000\000\240Bq\'\322B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\000\000\240BUB\354B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\240B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\240B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BC\000\000\240BDD`BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\000\000\240Bx\322{Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\000\000\240Bq\'\222B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\000\000\240BUB\254B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HC\000\000\240Bq\'0B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\000\000\240B0]\032B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344A\000\000\340BDDdBDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\000\000\340Bx\322\177Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\000\000\340Bq\'\224B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\000\000\340BUB\256B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264A\000\000\340Bq\'4B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\000\000\340B0]\036B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\340BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\340Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\000\000\340Bq\'\324B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\000\000\340BUB\356B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\340B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\340B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\340B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\340B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340B\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340BUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\340B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\340BDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\340Bx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\000\000\340Bq\'\322B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\000\000\340BUB\354B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\340B\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\340B`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BC\000\000\340BDD`BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\000\000\340Bx\322{Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\000\000\340Bq\'\222B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\000\000\340BUB\254B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HC\000\000\340Bq\'0B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\000\000\340B0]\032B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344A\000\000\020CDDdBDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\000\000\020Cx\322\177Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\000\000\020Cq\'\224B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\000\000\020CUB\256B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264A\000\000\020Cq\'4B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\000\000\020C0]\036B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\020CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\020Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\000\000\020Cq\'\324B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\000\000\020CUB\356B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\020C\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\000\020C`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020C\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\000\020C`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020C\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\000\020C`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020C\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\000\020C`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\020CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\020Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\000\000\020Cq\'\322B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\000\000\020CUB\354B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\020C\343NhB\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\000\020C`\272<B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BC\000\000\020CDD`BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\000\000\020Cx\322{Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\000\000\020Cq\'\222B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\000\000\020CUB\254B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HC\000\000\020Cq\'0B\343N\350B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\000\000\020C0]\032B\315\371\016C\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344A\000\0000CDDdBDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\000\0000Cx\322\177Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\000\0000Cq\'\224B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B\000\0000CUB\256B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264A$v*Cq\'4Bq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\215\301#C0]\036B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\0000CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\000\0000Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\000\0000Cq\'\324B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB\000\0000CUB\356B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B$v*C\343NhBq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\215\301#C`\272<B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\0000CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\0000Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\0000C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\000\0000CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B$v*C\343NhBq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\215\301#C`\272<B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\0000CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\0000Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\0000C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\000\0000CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B$v*C\343NhBq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\215\301#C`\272<B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\0000CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\0000Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\0000C\343N\350B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\000\0000CUB\016C\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C$v*C\343NhBq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\215\301#C`\272<B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\0000CDD\244BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\000\0000Cx\322\277Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\000\0000Cq\'\322B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C\000\0000CUB\354B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C$v*C\343NhBq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\215\301#C`\272<B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BC\000\0000CDD`BDD\244B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\000\0000Cx\322{Bx\322\277B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\000\0000Cq\'\222B\343NhB\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C\000\0000CUB\254B\306\255=B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HC$v*Cq\'0Bq\'\322B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\215\301#C0]\032B\315\371\354B\000\000\200?\000\000\200?\000\000\200?\000\000\200?DD\344Aw\367BCDDdBDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?x\322\377A\261\205?Cx\322\177Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\024B\022\373HCq\'\224Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UB.B$\245KCUB\256B\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'\264A$v:Cq\'4Bq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?0]\236A\215\3013C0]\036B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@Bw\367BCDD\244BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\261\205?Cx\322\277Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?q\'TB\022\373HCq\'\324Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UBnB$\245KCUB\356B\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B$v:C\343NhBq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@B\215\3013C`\272<B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240Bw\367BCDD\244BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\261\205?Cx\322\277Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\022\373HC\343N\350Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B$\245KCUB\016C\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B$v:C\343NhBq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240B\215\3013C`\272<B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340Bw\367BCDD\244BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\261\205?Cx\322\277Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\022\373HC\343N\350Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B$\245KCUB\016C\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B$v:C\343NhBq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\340B\215\3013C`\272<B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020Cw\367BCDD\244BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\261\205?Cx\322\277Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\022\373HC\343N\350Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C$\245KCUB\016C\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C$v:C\343NhBq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\020C\215\3013C`\272<B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000Cw\367BCDD\244BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\261\205?Cx\322\277Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v*C\022\373HCq\'\322Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\357#C$\245KCUB\354B\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C$v:C\343NhBq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\0000C\215\3013C`\272<B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?w\367BCw\367BCDD`BDD`B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\261\205?C\261\205?Cx\322{Bx\322{B\000\000\200?\000\000\200?\000\000\200?\000\000\200?$v:C\022\373HCq\'\222Bq\'0B\000\000\200?\000\000\200?\000\000\200?\000\000\200?k\3573C$\245KCUB\254B\343\326\032B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\022\373HC$v:Cq\'0Bq\'\222B\000\000\200?\000\000\200?\000\000\200?\000\000\200?Z\264KC\215\3013C0]\032B\315\371\254B\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors3/Shape"
  op: "Shape"
  input: "boxes3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/strided_slice"
  op: "StridedSlice"
  input: "anchors3/Shape"
  input: "anchors3/strided_slice/stack"
  input: "anchors3/strided_slice/stack_1"
  input: "anchors3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors3/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3/Tile/multiples"
  op: "Pack"
  input: "anchors3/strided_slice"
  input: "anchors3/Tile/multiples/1"
  input: "anchors3/Tile/multiples/2"
  input: "anchors3/Tile/multiples/3"
  input: "anchors3/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors3/Tile"
  op: "Tile"
  input: "anchors3/Const"
  input: "anchors3/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000(B\000\000(B\000\000\250B\000\000\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?E\r6BE\r6BE\r\266BE\r\266B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UdVB*2\007BUd\326B*2\207B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\\\375yB\223S\361A\\\375\371B\223SqB\000\000\200?\000\000\200?\000\000\200?\000\000\200?*2\007BUdVB*2\207BUd\326B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\237\255\360A\214\367zB\237\255pB\214\367\372B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000(B\000\000\340B\000\000\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250BE\r6B\213\032\374BE\r\266B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B*2\007BUd\036C*2\207B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256\376\264B\223S\361A\256\3764C\223SqB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250BUdVBUd\236BUd\326B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\214\367zB\237\255\200B\214\367\372B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000(B\000\000\340B\000\000\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014CE\r6B\213\032\374BE\r\266B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C*2\007BUd\036C*2\207B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000\005C\223S\361A\256\3763C\223SqB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014CUdVBUd\236BUd\326B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\214\367zB\237\255\200B\214\367\372B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\2005C\000\000(B\000\000\246B\000\000\250B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\257\3741CE\r6BE\r\264BE\r\266B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\353\346)C*2\007BUd\324B*2\207B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000!C\223S\361A\\\375\367B\223SqB\000\000\200?\000\000\200?\000\000\200?\000\000\200?u\263=CUdVB*2\205BUd\326B\000\000\200?\000\000\200?\000\000\200?\000\000\200?LjAC\214\367zB\237\255lB\214\367\372B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(B\000\000\250B\000\000\250B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?E\r6B\000\000\250BE\r\266B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UdVB\000\000\250BUd\326BUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\\\375yB\000\000\250B\\\375\371B\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?*2\007B\000\000\250B*2\207BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\237\255\360A\306{\265B\237\255pB\306{5C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B\000\000\340B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250B\213\032\374B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250BUd\036CUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256\376\264B\000\000\250B\256\3764C\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\250BUd\236BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\306{\265B\237\255\200B\306{5C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B\000\000\340B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250B\213\032\374B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250BUd\036CUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000\005C\000\000\250B\256\3763C\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\250BUd\236BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\306{\265B\237\255\200B\306{5C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\2005C\000\000\250B\000\000\246B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\257\3741C\000\000\250BE\r\264B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\353\346)C\000\000\250BUd\324BUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000!C\000\000\250B\\\375\367B\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?u\263=C\000\000\250B*2\205BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?LjAC\306{\265B\237\255lB\306{5C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(B\000\000\014C\000\000\250B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?E\r6B\000\000\014CE\r\266B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UdVB\000\000\014CUd\326BUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\\\375yB\000\000\014C\\\375\371B\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?*2\007B\000\000\014C*2\207BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\237\255\360A\035\302\004C\237\255pB\306{4C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C\000\000\340B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014C\213\032\374B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014CUd\036CUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256\376\264B\000\000\014C\256\3764C\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\000\014CUd\236BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\035\302\004C\237\255\200B\306{4C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C\000\000\340B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014C\213\032\374B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014CUd\036CUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000\005C\000\000\014C\256\3763C\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\000\014CUd\236BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\035\302\004C\237\255\200B\306{4C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\2005C\000\000\014C\000\000\246B\000\000\340B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\257\3741C\000\000\014CE\r\264B\213\032\374B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\353\346)C\000\000\014CUd\324BUd\236B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000!C\000\000\014C\\\375\367B\223S\201B\000\000\200?\000\000\200?\000\000\200?\000\000\200?u\263=C\000\000\014C*2\205BUd\036C\000\000\200?\000\000\200?\000\000\200?\000\000\200?LjAC\035\302\004C\237\255lB\306{4C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(B\000\2005C\000\000\250B\000\000\246B\000\000\200?\000\000\200?\000\000\200?\000\000\200?E\r6B\257\3741CE\r\266BE\r\264B\000\000\200?\000\000\200?\000\000\200?\000\000\200?UdVBu\263=CUd\326B*2\205B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\\\375yB\216UAC\\\375\371B\223SmB\000\000\200?\000\000\200?\000\000\200?\000\000\200?*2\007B\353\346)C*2\207BUd\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\237\255\360A\035\302 C\237\255pB\214\367\370B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\000\2005C\000\000\340B\000\000\246B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\257\3741C\213\032\374BE\r\264B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250Bu\263=CUd\036C*2\205B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\256\376\264B\216UAC\256\3764C\223SmB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\353\346)CUd\236BUd\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\250B\035\302 C\237\255\200B\214\367\370B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\000\2005C\000\000\340B\000\000\246B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\257\3741C\213\032\374BE\r\264B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014Cu\263=CUd\036C*2\205B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000\005C\216UAC\256\3763C\223SmB\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\353\346)CUd\236BUd\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\014C\035\302 C\237\255\200B\214\367\370B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\2005C\000\2005C\000\000\246B\000\000\246B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\257\3741C\257\3741CE\r\264BE\r\264B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\353\346)Cu\263=CUd\324B*2\205B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\251\000!C\216UAC\\\375\367B\223SmB\000\000\200?\000\000\200?\000\000\200?\000\000\200?u\263=C\353\346)C*2\205BUd\324B\000\000\200?\000\000\200?\000\000\200?\000\000\200?LjAC\035\302 C\237\255lB\214\367\370B\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors4/Shape"
  op: "Shape"
  input: "boxes4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/strided_slice"
  op: "StridedSlice"
  input: "anchors4/Shape"
  input: "anchors4/strided_slice/stack"
  input: "anchors4/strided_slice/stack_1"
  input: "anchors4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors4/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4/Tile/multiples"
  op: "Pack"
  input: "anchors4/strided_slice"
  input: "anchors4/Tile/multiples/1"
  input: "anchors4/Tile/multiples/2"
  input: "anchors4/Tile/multiples/3"
  input: "anchors4/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors4/Tile"
  op: "Tile"
  input: "anchors4/Const"
  input: "anchors4/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\336\335}B\336\335}B\336\335\375B\336\335\375B\000\000\200?\000\000\200?\000\000\200?\000\000\200?,\013\206B,\013\206B,\013\006C,\013\006C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\234P\234B\000\000`B\234P\034C8\241\310B\000\000\200?\000\000\200?\000\000\200?\000\000\200?2\334\262B\000\000`B2\3342CC\320\243B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\234P\234B8\241\310B\234P\034C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\245z\263B\r\376\242B\245z3C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\010 C\336\335}B\336\335\373B\336\335\375B\000\000\200?\000\000\200?\000\000\200?\000\000\200?jz\034C,\013\206B,\013\005C,\013\006C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\262W\021C\000\000`B\234P\033C8\241\310B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\347\021\006C\000\000`B2\3341CC\320\243B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\234P\234B8\241\310B\234P\034C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\245z\263B\r\376\242B\245z3C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\336\335}B\211\010 C\336\335\375B\336\335\373B\000\000\200?\000\000\200?\000\000\200?\000\000\200?,\013\206Bjz\034C,\013\006C,\013\005C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\234P\234B\000\000(C\234P\034C8\241\310B\000\000\200?\000\000\200?\000\000\200?\000\000\200?2\334\262B\000\000(C2\3342CC\320\243B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\262W\021C8\241\310B\234P\033C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000`B\255\302\005C\r\376\242B\245z2C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\211\010 C\211\010 C\336\335\373B\336\335\373B\000\000\200?\000\000\200?\000\000\200?\000\000\200?jz\034Cjz\034C,\013\005C,\013\005C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\262W\021C\000\000(C\234P\033C8\241\310B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\347\021\006C\000\000(C2\3341CC\320\243B\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\262W\021C8\241\310B\234P\033C\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000(C\255\302\005C\r\376\242B\245z2C\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors5/Shape"
  op: "Shape"
  input: "boxes5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/strided_slice"
  op: "StridedSlice"
  input: "anchors5/Shape"
  input: "anchors5/strided_slice/stack"
  input: "anchors5/strided_slice/stack_1"
  input: "anchors5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors5/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5/Tile/multiples"
  op: "Pack"
  input: "anchors5/strided_slice"
  input: "anchors5/Tile/multiples/1"
  input: "anchors5/Tile/multiples/2"
  input: "anchors5/Tile/multiples/3"
  input: "anchors5/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors5/Tile"
  op: "Tile"
  input: "anchors5/Const"
  input: "anchors5/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content|N\305B\000\000_C\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "anchors6/Shape"
  op: "Shape"
  input: "boxes6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/strided_slice"
  op: "StridedSlice"
  input: "anchors6/Shape"
  input: "anchors6/strided_slice/stack"
  input: "anchors6/strided_slice/stack_1"
  input: "anchors6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors6/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6/Tile/multiples"
  op: "Pack"
  input: "anchors6/strided_slice"
  input: "anchors6/Tile/multiples/1"
  input: "anchors6/Tile/multiples/2"
  input: "anchors6/Tile/multiples/3"
  input: "anchors6/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors6/Tile"
  op: "Tile"
  input: "anchors6/Const"
  input: "anchors6/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes1_reshape/Shape"
  op: "Shape"
  input: "classes1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes1_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes1_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes1_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes1_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes1_reshape/Shape"
  input: "classes1_reshape/strided_slice/stack"
  input: "classes1_reshape/strided_slice/stack_1"
  input: "classes1_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes1_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes1_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes1_reshape/Reshape/shape"
  op: "Pack"
  input: "classes1_reshape/strided_slice"
  input: "classes1_reshape/Reshape/shape/1"
  input: "classes1_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes1_reshape/Reshape"
  op: "Reshape"
  input: "classes1/BiasAdd"
  input: "classes1_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes2_reshape/Shape"
  op: "Shape"
  input: "classes2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes2_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes2_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes2_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes2_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes2_reshape/Shape"
  input: "classes2_reshape/strided_slice/stack"
  input: "classes2_reshape/strided_slice/stack_1"
  input: "classes2_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes2_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes2_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes2_reshape/Reshape/shape"
  op: "Pack"
  input: "classes2_reshape/strided_slice"
  input: "classes2_reshape/Reshape/shape/1"
  input: "classes2_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes2_reshape/Reshape"
  op: "Reshape"
  input: "classes2/BiasAdd"
  input: "classes2_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes3_reshape/Shape"
  op: "Shape"
  input: "classes3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes3_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes3_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes3_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes3_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes3_reshape/Shape"
  input: "classes3_reshape/strided_slice/stack"
  input: "classes3_reshape/strided_slice/stack_1"
  input: "classes3_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes3_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes3_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes3_reshape/Reshape/shape"
  op: "Pack"
  input: "classes3_reshape/strided_slice"
  input: "classes3_reshape/Reshape/shape/1"
  input: "classes3_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes3_reshape/Reshape"
  op: "Reshape"
  input: "classes3/BiasAdd"
  input: "classes3_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes4_reshape/Shape"
  op: "Shape"
  input: "classes4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes4_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes4_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes4_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes4_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes4_reshape/Shape"
  input: "classes4_reshape/strided_slice/stack"
  input: "classes4_reshape/strided_slice/stack_1"
  input: "classes4_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes4_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes4_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes4_reshape/Reshape/shape"
  op: "Pack"
  input: "classes4_reshape/strided_slice"
  input: "classes4_reshape/Reshape/shape/1"
  input: "classes4_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes4_reshape/Reshape"
  op: "Reshape"
  input: "classes4/BiasAdd"
  input: "classes4_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes5_reshape/Shape"
  op: "Shape"
  input: "classes5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes5_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes5_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes5_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes5_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes5_reshape/Shape"
  input: "classes5_reshape/strided_slice/stack"
  input: "classes5_reshape/strided_slice/stack_1"
  input: "classes5_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes5_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes5_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes5_reshape/Reshape/shape"
  op: "Pack"
  input: "classes5_reshape/strided_slice"
  input: "classes5_reshape/Reshape/shape/1"
  input: "classes5_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes5_reshape/Reshape"
  op: "Reshape"
  input: "classes5/BiasAdd"
  input: "classes5_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes6_reshape/Shape"
  op: "Shape"
  input: "classes6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes6_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "classes6_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes6_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes6_reshape/strided_slice"
  op: "StridedSlice"
  input: "classes6_reshape/Shape"
  input: "classes6_reshape/strided_slice/stack"
  input: "classes6_reshape/strided_slice/stack_1"
  input: "classes6_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "classes6_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes6_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "classes6_reshape/Reshape/shape"
  op: "Pack"
  input: "classes6_reshape/strided_slice"
  input: "classes6_reshape/Reshape/shape/1"
  input: "classes6_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "classes6_reshape/Reshape"
  op: "Reshape"
  input: "classes6/BiasAdd"
  input: "classes6_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes1_reshape/Shape"
  op: "Shape"
  input: "boxes1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes1_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes1_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes1_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes1_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes1_reshape/Shape"
  input: "boxes1_reshape/strided_slice/stack"
  input: "boxes1_reshape/strided_slice/stack_1"
  input: "boxes1_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes1_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes1_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes1_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes1_reshape/strided_slice"
  input: "boxes1_reshape/Reshape/shape/1"
  input: "boxes1_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes1_reshape/Reshape"
  op: "Reshape"
  input: "boxes1/BiasAdd"
  input: "boxes1_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes2_reshape/Shape"
  op: "Shape"
  input: "boxes2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes2_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes2_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes2_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes2_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes2_reshape/Shape"
  input: "boxes2_reshape/strided_slice/stack"
  input: "boxes2_reshape/strided_slice/stack_1"
  input: "boxes2_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes2_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes2_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes2_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes2_reshape/strided_slice"
  input: "boxes2_reshape/Reshape/shape/1"
  input: "boxes2_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes2_reshape/Reshape"
  op: "Reshape"
  input: "boxes2/BiasAdd"
  input: "boxes2_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes3_reshape/Shape"
  op: "Shape"
  input: "boxes3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes3_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes3_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes3_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes3_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes3_reshape/Shape"
  input: "boxes3_reshape/strided_slice/stack"
  input: "boxes3_reshape/strided_slice/stack_1"
  input: "boxes3_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes3_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes3_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes3_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes3_reshape/strided_slice"
  input: "boxes3_reshape/Reshape/shape/1"
  input: "boxes3_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes3_reshape/Reshape"
  op: "Reshape"
  input: "boxes3/BiasAdd"
  input: "boxes3_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes4_reshape/Shape"
  op: "Shape"
  input: "boxes4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes4_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes4_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes4_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes4_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes4_reshape/Shape"
  input: "boxes4_reshape/strided_slice/stack"
  input: "boxes4_reshape/strided_slice/stack_1"
  input: "boxes4_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes4_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes4_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes4_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes4_reshape/strided_slice"
  input: "boxes4_reshape/Reshape/shape/1"
  input: "boxes4_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes4_reshape/Reshape"
  op: "Reshape"
  input: "boxes4/BiasAdd"
  input: "boxes4_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes5_reshape/Shape"
  op: "Shape"
  input: "boxes5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes5_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes5_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes5_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes5_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes5_reshape/Shape"
  input: "boxes5_reshape/strided_slice/stack"
  input: "boxes5_reshape/strided_slice/stack_1"
  input: "boxes5_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes5_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes5_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes5_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes5_reshape/strided_slice"
  input: "boxes5_reshape/Reshape/shape/1"
  input: "boxes5_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes5_reshape/Reshape"
  op: "Reshape"
  input: "boxes5/BiasAdd"
  input: "boxes5_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes6_reshape/Shape"
  op: "Shape"
  input: "boxes6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes6_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "boxes6_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes6_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes6_reshape/strided_slice"
  op: "StridedSlice"
  input: "boxes6_reshape/Shape"
  input: "boxes6_reshape/strided_slice/stack"
  input: "boxes6_reshape/strided_slice/stack_1"
  input: "boxes6_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "boxes6_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "boxes6_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "boxes6_reshape/Reshape/shape"
  op: "Pack"
  input: "boxes6_reshape/strided_slice"
  input: "boxes6_reshape/Reshape/shape/1"
  input: "boxes6_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "boxes6_reshape/Reshape"
  op: "Reshape"
  input: "boxes6/BiasAdd"
  input: "boxes6_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors1_reshape/Shape"
  op: "Shape"
  input: "anchors1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors1_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors1_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors1_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors1_reshape/Shape"
  input: "anchors1_reshape/strided_slice/stack"
  input: "anchors1_reshape/strided_slice/stack_1"
  input: "anchors1_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors1_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors1_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors1_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors1_reshape/strided_slice"
  input: "anchors1_reshape/Reshape/shape/1"
  input: "anchors1_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors1_reshape/Reshape"
  op: "Reshape"
  input: "anchors1/Tile"
  input: "anchors1_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors2_reshape/Shape"
  op: "Shape"
  input: "anchors2/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors2_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors2_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors2_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors2_reshape/Shape"
  input: "anchors2_reshape/strided_slice/stack"
  input: "anchors2_reshape/strided_slice/stack_1"
  input: "anchors2_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors2_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors2_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors2_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors2_reshape/strided_slice"
  input: "anchors2_reshape/Reshape/shape/1"
  input: "anchors2_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors2_reshape/Reshape"
  op: "Reshape"
  input: "anchors2/Tile"
  input: "anchors2_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors3_reshape/Shape"
  op: "Shape"
  input: "anchors3/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors3_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors3_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors3_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors3_reshape/Shape"
  input: "anchors3_reshape/strided_slice/stack"
  input: "anchors3_reshape/strided_slice/stack_1"
  input: "anchors3_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors3_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors3_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors3_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors3_reshape/strided_slice"
  input: "anchors3_reshape/Reshape/shape/1"
  input: "anchors3_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors3_reshape/Reshape"
  op: "Reshape"
  input: "anchors3/Tile"
  input: "anchors3_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors4_reshape/Shape"
  op: "Shape"
  input: "anchors4/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors4_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors4_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors4_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors4_reshape/Shape"
  input: "anchors4_reshape/strided_slice/stack"
  input: "anchors4_reshape/strided_slice/stack_1"
  input: "anchors4_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors4_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors4_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors4_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors4_reshape/strided_slice"
  input: "anchors4_reshape/Reshape/shape/1"
  input: "anchors4_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors4_reshape/Reshape"
  op: "Reshape"
  input: "anchors4/Tile"
  input: "anchors4_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors5_reshape/Shape"
  op: "Shape"
  input: "anchors5/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors5_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors5_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors5_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors5_reshape/Shape"
  input: "anchors5_reshape/strided_slice/stack"
  input: "anchors5_reshape/strided_slice/stack_1"
  input: "anchors5_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors5_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors5_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors5_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors5_reshape/strided_slice"
  input: "anchors5_reshape/Reshape/shape/1"
  input: "anchors5_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors5_reshape/Reshape"
  op: "Reshape"
  input: "anchors5/Tile"
  input: "anchors5_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors6_reshape/Shape"
  op: "Shape"
  input: "anchors6/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors6_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "anchors6_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors6_reshape/strided_slice"
  op: "StridedSlice"
  input: "anchors6_reshape/Shape"
  input: "anchors6_reshape/strided_slice/stack"
  input: "anchors6_reshape/strided_slice/stack_1"
  input: "anchors6_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "anchors6_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "anchors6_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "anchors6_reshape/Reshape/shape"
  op: "Pack"
  input: "anchors6_reshape/strided_slice"
  input: "anchors6_reshape/Reshape/shape/1"
  input: "anchors6_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "anchors6_reshape/Reshape"
  op: "Reshape"
  input: "anchors6/Tile"
  input: "anchors6_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes_concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "classes_concat/concat"
  op: "ConcatV2"
  input: "classes1_reshape/Reshape"
  input: "classes2_reshape/Reshape"
  input: "classes3_reshape/Reshape"
  input: "classes4_reshape/Reshape"
  input: "classes5_reshape/Reshape"
  input: "classes6_reshape/Reshape"
  input: "classes_concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "boxes_concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "boxes_concat/concat"
  op: "ConcatV2"
  input: "boxes1_reshape/Reshape"
  input: "boxes2_reshape/Reshape"
  input: "boxes3_reshape/Reshape"
  input: "boxes4_reshape/Reshape"
  input: "boxes5_reshape/Reshape"
  input: "boxes6_reshape/Reshape"
  input: "boxes_concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "anchors_concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "anchors_concat/concat"
  op: "ConcatV2"
  input: "anchors1_reshape/Reshape"
  input: "anchors2_reshape/Reshape"
  input: "anchors3_reshape/Reshape"
  input: "anchors4_reshape/Reshape"
  input: "anchors5_reshape/Reshape"
  input: "anchors6_reshape/Reshape"
  input: "anchors_concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "classes_softmax/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes_softmax/Max"
  op: "Max"
  input: "classes_concat/concat"
  input: "classes_softmax/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "classes_softmax/sub"
  op: "Sub"
  input: "classes_concat/concat"
  input: "classes_softmax/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes_softmax/Exp"
  op: "Exp"
  input: "classes_softmax/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "classes_softmax/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "classes_softmax/Sum"
  op: "Sum"
  input: "classes_softmax/Exp"
  input: "classes_softmax/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "classes_softmax/truediv"
  op: "RealDiv"
  input: "classes_softmax/Exp"
  input: "classes_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "predictions/concat"
  op: "ConcatV2"
  input: "classes_softmax/truediv"
  input: "boxes_concat/concat"
  input: "anchors_concat/concat"
  input: "predictions/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "predictions_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Shape"
  op: "Shape"
  input: "predictions/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice"
  op: "StridedSlice"
  input: "loss/predictions_loss/Shape"
  input: "loss/predictions_loss/strided_slice/stack"
  input: "loss/predictions_loss/strided_slice/stack_1"
  input: "loss/predictions_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/predictions_loss/Shape_1"
  op: "Shape"
  input: "predictions/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_1"
  op: "StridedSlice"
  input: "loss/predictions_loss/Shape_1"
  input: "loss/predictions_loss/strided_slice_1/stack"
  input: "loss/predictions_loss/strided_slice_1/stack_1"
  input: "loss/predictions_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\364\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_2"
  op: "StridedSlice"
  input: "predictions_target"
  input: "loss/predictions_loss/strided_slice_2/stack"
  input: "loss/predictions_loss/strided_slice_2/stack_1"
  input: "loss/predictions_loss/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\364\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_3"
  op: "StridedSlice"
  input: "predictions/concat"
  input: "loss/predictions_loss/strided_slice_3/stack"
  input: "loss/predictions_loss/strided_slice_3/stack_1"
  input: "loss/predictions_loss/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000036274937e-15
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Maximum"
  op: "Maximum"
  input: "loss/predictions_loss/strided_slice_3"
  input: "loss/predictions_loss/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Log"
  op: "Log"
  input: "loss/predictions_loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/mul"
  op: "Mul"
  input: "loss/predictions_loss/strided_slice_2"
  input: "loss/predictions_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum"
  op: "Sum"
  input: "loss/predictions_loss/mul"
  input: "loss/predictions_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/Neg"
  op: "Neg"
  input: "loss/predictions_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\364\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\370\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_4"
  op: "StridedSlice"
  input: "predictions_target"
  input: "loss/predictions_loss/strided_slice_4/stack"
  input: "loss/predictions_loss/strided_slice_4/stack_1"
  input: "loss/predictions_loss/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\364\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\370\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_5"
  op: "StridedSlice"
  input: "predictions/concat"
  input: "loss/predictions_loss/strided_slice_5/stack"
  input: "loss/predictions_loss/strided_slice_5/stack_1"
  input: "loss/predictions_loss/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/sub"
  op: "Sub"
  input: "loss/predictions_loss/strided_slice_4"
  input: "loss/predictions_loss/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Abs"
  op: "Abs"
  input: "loss/predictions_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/sub_1"
  op: "Sub"
  input: "loss/predictions_loss/strided_slice_4"
  input: "loss/predictions_loss/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/pow"
  op: "Pow"
  input: "loss/predictions_loss/sub_1"
  input: "loss/predictions_loss/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/predictions_loss/mul_1"
  op: "Mul"
  input: "loss/predictions_loss/mul_1/x"
  input: "loss/predictions_loss/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Less"
  op: "Less"
  input: "loss/predictions_loss/Abs"
  input: "loss/predictions_loss/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/predictions_loss/sub_2"
  op: "Sub"
  input: "loss/predictions_loss/Abs"
  input: "loss/predictions_loss/sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Select"
  op: "Select"
  input: "loss/predictions_loss/Less"
  input: "loss/predictions_loss/mul_1"
  input: "loss/predictions_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_1"
  op: "Sum"
  input: "loss/predictions_loss/Select"
  input: "loss/predictions_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_6"
  op: "StridedSlice"
  input: "predictions_target"
  input: "loss/predictions_loss/strided_slice_6/stack"
  input: "loss/predictions_loss/strided_slice_6/stack_1"
  input: "loss/predictions_loss/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\364\377\377\377"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/strided_slice_7"
  op: "StridedSlice"
  input: "predictions_target"
  input: "loss/predictions_loss/strided_slice_7/stack"
  input: "loss/predictions_loss/strided_slice_7/stack_1"
  input: "loss/predictions_loss/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Max"
  op: "Max"
  input: "loss/predictions_loss/strided_slice_7"
  input: "loss/predictions_loss/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_2"
  op: "Sum"
  input: "loss/predictions_loss/Max"
  input: "loss/predictions_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/mul_2"
  op: "Mul"
  input: "loss/predictions_loss/Neg"
  input: "loss/predictions_loss/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_3"
  op: "Sum"
  input: "loss/predictions_loss/mul_2"
  input: "loss/predictions_loss/Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/mul_3"
  op: "Mul"
  input: "loss/predictions_loss/Neg"
  input: "loss/predictions_loss/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "loss/predictions_loss/mul_3"
  input: "loss/predictions_loss/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/Cast"
  op: "Cast"
  input: "loss/predictions_loss/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/Sum"
  op: "Sum"
  input: "loss/predictions_loss/count_nonzero/Cast"
  input: "loss/predictions_loss/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/count_nonzero/Cast_1"
  op: "Cast"
  input: "loss/predictions_loss/count_nonzero/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/ToInt32"
  op: "Cast"
  input: "loss/predictions_loss/Sum_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/mul_4"
  op: "Mul"
  input: "loss/predictions_loss/Const"
  input: "loss/predictions_loss/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/Maximum_1"
  op: "Maximum"
  input: "loss/predictions_loss/mul_4"
  input: "loss/predictions_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/Minimum"
  op: "Minimum"
  input: "loss/predictions_loss/Maximum_1"
  input: "loss/predictions_loss/count_nonzero/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Equal"
  op: "Equal"
  input: "loss/predictions_loss/count_nonzero/Cast_1"
  input: "loss/predictions_loss/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Switch"
  op: "Switch"
  input: "loss/predictions_loss/Equal"
  input: "loss/predictions_loss/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/predictions_loss/cond/switch_t"
  op: "Identity"
  input: "loss/predictions_loss/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/predictions_loss/cond/switch_f"
  op: "Identity"
  input: "loss/predictions_loss/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/predictions_loss/cond/pred_id"
  op: "Identity"
  input: "loss/predictions_loss/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros/Less/y"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros/Less"
  op: "Less"
  input: "loss/predictions_loss/cond/zeros/Less/Switch:1"
  input: "loss/predictions_loss/cond/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros/Less/Switch"
  op: "Switch"
  input: "loss/predictions_loss/strided_slice"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/strided_slice"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros/packed"
  op: "Pack"
  input: "loss/predictions_loss/cond/zeros/Less/Switch:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros/Const"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/zeros"
  op: "Fill"
  input: "loss/predictions_loss/cond/zeros/packed"
  input: "loss/predictions_loss/cond/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape/shape"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape"
  op: "Reshape"
  input: "loss/predictions_loss/cond/Reshape/Switch"
  input: "loss/predictions_loss/cond/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape/Switch"
  op: "Switch"
  input: "loss/predictions_loss/mul_3"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/mul_3"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/TopKV2"
  op: "TopKV2"
  input: "loss/predictions_loss/cond/Reshape"
  input: "loss/predictions_loss/cond/TopKV2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "sorted"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/cond/TopKV2/Switch"
  op: "Switch"
  input: "loss/predictions_loss/Minimum"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/Minimum"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ExpandDims/dim"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ExpandDims"
  op: "ExpandDims"
  input: "loss/predictions_loss/cond/TopKV2:1"
  input: "loss/predictions_loss/cond/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ones_like/Shape"
  op: "Shape"
  input: "loss/predictions_loss/cond/TopKV2:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ones_like/Const"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ones_like"
  op: "Fill"
  input: "loss/predictions_loss/cond/ones_like/Shape"
  input: "loss/predictions_loss/cond/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Shape"
  op: "Shape"
  input: "loss/predictions_loss/cond/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ScatterNd"
  op: "ScatterNd"
  input: "loss/predictions_loss/cond/ExpandDims"
  input: "loss/predictions_loss/cond/ones_like"
  input: "loss/predictions_loss/cond/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape_1/shape"
  op: "Pack"
  input: "loss/predictions_loss/cond/Reshape_1/shape/Switch"
  input: "loss/predictions_loss/cond/Reshape_1/shape/Switch_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape_1/shape/Switch"
  op: "Switch"
  input: "loss/predictions_loss/strided_slice"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/strided_slice"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape_1/shape/Switch_1"
  op: "Switch"
  input: "loss/predictions_loss/strided_slice_1"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/strided_slice_1"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Reshape_1"
  op: "Reshape"
  input: "loss/predictions_loss/cond/ScatterNd"
  input: "loss/predictions_loss/cond/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/cond/ToFloat"
  op: "Cast"
  input: "loss/predictions_loss/cond/Reshape_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/cond/mul"
  op: "Mul"
  input: "loss/predictions_loss/cond/mul/Switch"
  input: "loss/predictions_loss/cond/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/cond/mul/Switch"
  op: "Switch"
  input: "loss/predictions_loss/Neg"
  input: "loss/predictions_loss/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/predictions_loss/Neg"
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Sum/reduction_indices"
  op: "Const"
  input: "^loss/predictions_loss/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Sum"
  op: "Sum"
  input: "loss/predictions_loss/cond/mul"
  input: "loss/predictions_loss/cond/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/cond/Merge"
  op: "Merge"
  input: "loss/predictions_loss/cond/Sum"
  input: "loss/predictions_loss/cond/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/add"
  op: "AddV2"
  input: "loss/predictions_loss/Sum_3"
  input: "loss/predictions_loss/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/mul_5"
  op: "Mul"
  input: "loss/predictions_loss/Sum_1"
  input: "loss/predictions_loss/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_4"
  op: "Sum"
  input: "loss/predictions_loss/mul_5"
  input: "loss/predictions_loss/Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/mul_6"
  op: "Mul"
  input: "loss/predictions_loss/Const_2"
  input: "loss/predictions_loss/Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/add_1"
  op: "AddV2"
  input: "loss/predictions_loss/add"
  input: "loss/predictions_loss/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Maximum_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Maximum_2"
  op: "Maximum"
  input: "loss/predictions_loss/Maximum_2/x"
  input: "loss/predictions_loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/truediv"
  op: "RealDiv"
  input: "loss/predictions_loss/add_1"
  input: "loss/predictions_loss/Maximum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/ToFloat"
  op: "Cast"
  input: "loss/predictions_loss/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/mul_7"
  op: "Mul"
  input: "loss/predictions_loss/truediv"
  input: "loss/predictions_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/predictions_loss/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/predictions_loss/mul_7"
  input: "^loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss/predictions_loss/weighted_loss/Cast/x"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/predictions_loss/mul_7"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_5"
  op: "Sum"
  input: "loss/predictions_loss/weighted_loss/Mul"
  input: "loss/predictions_loss/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/num_elements"
  op: "Size"
  input: "loss/predictions_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/predictions_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_6"
  op: "Sum"
  input: "loss/predictions_loss/Sum_5"
  input: "loss/predictions_loss/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/value"
  op: "DivNoNan"
  input: "loss/predictions_loss/Sum_6"
  input: "loss/predictions_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/predictions_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/fc7/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv8_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv8_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv9_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv9_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv10_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv10_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv11_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv11_2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes3/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes4/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes5/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes6/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes2/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes3/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes4/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes5/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes6/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/fc7/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv8_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv8_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv9_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv9_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv10_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv10_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv11_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/conv11_2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes3/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes4/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes5/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/classes6/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes2/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes3/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes4/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes5/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/boxes6/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/AddN"
  op: "AddN"
  input: "loss/fc7/kernel/Regularizer/Const"
  input: "loss/conv8_1/kernel/Regularizer/Const"
  input: "loss/conv8_2/kernel/Regularizer/Const"
  input: "loss/conv9_1/kernel/Regularizer/Const"
  input: "loss/conv9_2/kernel/Regularizer/Const"
  input: "loss/conv10_1/kernel/Regularizer/Const"
  input: "loss/conv10_2/kernel/Regularizer/Const"
  input: "loss/conv11_1/kernel/Regularizer/Const"
  input: "loss/conv11_2/kernel/Regularizer/Const"
  input: "loss/classes1/kernel/Regularizer/Const"
  input: "loss/classes2/kernel/Regularizer/Const"
  input: "loss/classes3/kernel/Regularizer/Const"
  input: "loss/classes4/kernel/Regularizer/Const"
  input: "loss/classes5/kernel/Regularizer/Const"
  input: "loss/classes6/kernel/Regularizer/Const"
  input: "loss/boxes1/kernel/Regularizer/Const"
  input: "loss/boxes2/kernel/Regularizer/Const"
  input: "loss/boxes3/kernel/Regularizer/Const"
  input: "loss/boxes4/kernel/Regularizer/Const"
  input: "loss/boxes5/kernel/Regularizer/Const"
  input: "loss/boxes6/kernel/Regularizer/Const"
  attr {
    key: "N"
    value {
      i: 21
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "AddV2"
  input: "loss/mul"
  input: "loss/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_260"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "fc7/kernel"
  input: "Placeholder_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "fc7/kernel"
  input: "^AssignVariableOp_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_261"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "fc7/bias"
  input: "Placeholder_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "fc7/bias"
  input: "^AssignVariableOp_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_262"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "conv8_1/kernel"
  input: "Placeholder_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_262"
  op: "ReadVariableOp"
  input: "conv8_1/kernel"
  input: "^AssignVariableOp_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_263"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "conv8_1/bias"
  input: "Placeholder_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_263"
  op: "ReadVariableOp"
  input: "conv8_1/bias"
  input: "^AssignVariableOp_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_264"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_264"
  op: "AssignVariableOp"
  input: "conv8_2/kernel"
  input: "Placeholder_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_264"
  op: "ReadVariableOp"
  input: "conv8_2/kernel"
  input: "^AssignVariableOp_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_265"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_265"
  op: "AssignVariableOp"
  input: "conv8_2/bias"
  input: "Placeholder_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_265"
  op: "ReadVariableOp"
  input: "conv8_2/bias"
  input: "^AssignVariableOp_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_266"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_266"
  op: "AssignVariableOp"
  input: "conv9_1/kernel"
  input: "Placeholder_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_266"
  op: "ReadVariableOp"
  input: "conv9_1/kernel"
  input: "^AssignVariableOp_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_267"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_267"
  op: "AssignVariableOp"
  input: "conv9_1/bias"
  input: "Placeholder_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_267"
  op: "ReadVariableOp"
  input: "conv9_1/bias"
  input: "^AssignVariableOp_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_268"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_268"
  op: "AssignVariableOp"
  input: "conv9_2/kernel"
  input: "Placeholder_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_268"
  op: "ReadVariableOp"
  input: "conv9_2/kernel"
  input: "^AssignVariableOp_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_269"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_269"
  op: "AssignVariableOp"
  input: "conv9_2/bias"
  input: "Placeholder_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_269"
  op: "ReadVariableOp"
  input: "conv9_2/bias"
  input: "^AssignVariableOp_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_270"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_270"
  op: "AssignVariableOp"
  input: "conv10_1/kernel"
  input: "Placeholder_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_270"
  op: "ReadVariableOp"
  input: "conv10_1/kernel"
  input: "^AssignVariableOp_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_271"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_271"
  op: "AssignVariableOp"
  input: "conv10_1/bias"
  input: "Placeholder_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_271"
  op: "ReadVariableOp"
  input: "conv10_1/bias"
  input: "^AssignVariableOp_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_272"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_272"
  op: "AssignVariableOp"
  input: "conv10_2/kernel"
  input: "Placeholder_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_272"
  op: "ReadVariableOp"
  input: "conv10_2/kernel"
  input: "^AssignVariableOp_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_273"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_273"
  op: "AssignVariableOp"
  input: "conv10_2/bias"
  input: "Placeholder_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_273"
  op: "ReadVariableOp"
  input: "conv10_2/bias"
  input: "^AssignVariableOp_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_274"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_274"
  op: "AssignVariableOp"
  input: "conv11_1/kernel"
  input: "Placeholder_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_274"
  op: "ReadVariableOp"
  input: "conv11_1/kernel"
  input: "^AssignVariableOp_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_275"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_275"
  op: "AssignVariableOp"
  input: "conv11_1/bias"
  input: "Placeholder_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_275"
  op: "ReadVariableOp"
  input: "conv11_1/bias"
  input: "^AssignVariableOp_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_276"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_276"
  op: "AssignVariableOp"
  input: "conv11_2/kernel"
  input: "Placeholder_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_276"
  op: "ReadVariableOp"
  input: "conv11_2/kernel"
  input: "^AssignVariableOp_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_277"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_277"
  op: "AssignVariableOp"
  input: "conv11_2/bias"
  input: "Placeholder_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_277"
  op: "ReadVariableOp"
  input: "conv11_2/bias"
  input: "^AssignVariableOp_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_278"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_278"
  op: "AssignVariableOp"
  input: "classes1/kernel"
  input: "Placeholder_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_278"
  op: "ReadVariableOp"
  input: "classes1/kernel"
  input: "^AssignVariableOp_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_279"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_279"
  op: "AssignVariableOp"
  input: "classes1/bias"
  input: "Placeholder_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_279"
  op: "ReadVariableOp"
  input: "classes1/bias"
  input: "^AssignVariableOp_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_280"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_280"
  op: "AssignVariableOp"
  input: "classes2/kernel"
  input: "Placeholder_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_280"
  op: "ReadVariableOp"
  input: "classes2/kernel"
  input: "^AssignVariableOp_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_281"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_281"
  op: "AssignVariableOp"
  input: "classes2/bias"
  input: "Placeholder_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_281"
  op: "ReadVariableOp"
  input: "classes2/bias"
  input: "^AssignVariableOp_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_282"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_282"
  op: "AssignVariableOp"
  input: "classes3/kernel"
  input: "Placeholder_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_282"
  op: "ReadVariableOp"
  input: "classes3/kernel"
  input: "^AssignVariableOp_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_283"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_283"
  op: "AssignVariableOp"
  input: "classes3/bias"
  input: "Placeholder_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_283"
  op: "ReadVariableOp"
  input: "classes3/bias"
  input: "^AssignVariableOp_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_284"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_284"
  op: "AssignVariableOp"
  input: "classes4/kernel"
  input: "Placeholder_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_284"
  op: "ReadVariableOp"
  input: "classes4/kernel"
  input: "^AssignVariableOp_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_285"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_285"
  op: "AssignVariableOp"
  input: "classes4/bias"
  input: "Placeholder_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_285"
  op: "ReadVariableOp"
  input: "classes4/bias"
  input: "^AssignVariableOp_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_286"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_286"
  op: "AssignVariableOp"
  input: "classes5/kernel"
  input: "Placeholder_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_286"
  op: "ReadVariableOp"
  input: "classes5/kernel"
  input: "^AssignVariableOp_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_287"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_287"
  op: "AssignVariableOp"
  input: "classes5/bias"
  input: "Placeholder_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_287"
  op: "ReadVariableOp"
  input: "classes5/bias"
  input: "^AssignVariableOp_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_288"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_288"
  op: "AssignVariableOp"
  input: "classes6/kernel"
  input: "Placeholder_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_288"
  op: "ReadVariableOp"
  input: "classes6/kernel"
  input: "^AssignVariableOp_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_289"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_289"
  op: "AssignVariableOp"
  input: "classes6/bias"
  input: "Placeholder_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_289"
  op: "ReadVariableOp"
  input: "classes6/bias"
  input: "^AssignVariableOp_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_290"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_290"
  op: "AssignVariableOp"
  input: "boxes1/kernel"
  input: "Placeholder_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_290"
  op: "ReadVariableOp"
  input: "boxes1/kernel"
  input: "^AssignVariableOp_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_291"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_291"
  op: "AssignVariableOp"
  input: "boxes1/bias"
  input: "Placeholder_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_291"
  op: "ReadVariableOp"
  input: "boxes1/bias"
  input: "^AssignVariableOp_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_292"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_292"
  op: "AssignVariableOp"
  input: "boxes2/kernel"
  input: "Placeholder_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_292"
  op: "ReadVariableOp"
  input: "boxes2/kernel"
  input: "^AssignVariableOp_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_293"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_293"
  op: "AssignVariableOp"
  input: "boxes2/bias"
  input: "Placeholder_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_293"
  op: "ReadVariableOp"
  input: "boxes2/bias"
  input: "^AssignVariableOp_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_294"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_294"
  op: "AssignVariableOp"
  input: "boxes3/kernel"
  input: "Placeholder_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_294"
  op: "ReadVariableOp"
  input: "boxes3/kernel"
  input: "^AssignVariableOp_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_295"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_295"
  op: "AssignVariableOp"
  input: "boxes3/bias"
  input: "Placeholder_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_295"
  op: "ReadVariableOp"
  input: "boxes3/bias"
  input: "^AssignVariableOp_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_296"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_296"
  op: "AssignVariableOp"
  input: "boxes4/kernel"
  input: "Placeholder_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_296"
  op: "ReadVariableOp"
  input: "boxes4/kernel"
  input: "^AssignVariableOp_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_297"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_297"
  op: "AssignVariableOp"
  input: "boxes4/bias"
  input: "Placeholder_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_297"
  op: "ReadVariableOp"
  input: "boxes4/bias"
  input: "^AssignVariableOp_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_298"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_298"
  op: "AssignVariableOp"
  input: "boxes5/kernel"
  input: "Placeholder_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_298"
  op: "ReadVariableOp"
  input: "boxes5/kernel"
  input: "^AssignVariableOp_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_299"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_299"
  op: "AssignVariableOp"
  input: "boxes5/bias"
  input: "Placeholder_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_299"
  op: "ReadVariableOp"
  input: "boxes5/bias"
  input: "^AssignVariableOp_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_300"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_300"
  op: "AssignVariableOp"
  input: "boxes6/kernel"
  input: "Placeholder_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_300"
  op: "ReadVariableOp"
  input: "boxes6/kernel"
  input: "^AssignVariableOp_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_301"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_301"
  op: "AssignVariableOp"
  input: "boxes6/bias"
  input: "Placeholder_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_301"
  op: "ReadVariableOp"
  input: "boxes6/bias"
  input: "^AssignVariableOp_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_260"
  op: "VarIsInitializedOp"
  input: "boxes2/kernel"
}
node {
  name: "VarIsInitializedOp_261"
  op: "VarIsInitializedOp"
  input: "conv8_1/kernel"
}
node {
  name: "VarIsInitializedOp_262"
  op: "VarIsInitializedOp"
  input: "conv9_2/kernel"
}
node {
  name: "VarIsInitializedOp_263"
  op: "VarIsInitializedOp"
  input: "boxes5/kernel"
}
node {
  name: "VarIsInitializedOp_264"
  op: "VarIsInitializedOp"
  input: "classes6/kernel"
}
node {
  name: "VarIsInitializedOp_265"
  op: "VarIsInitializedOp"
  input: "conv8_2/bias"
}
node {
  name: "VarIsInitializedOp_266"
  op: "VarIsInitializedOp"
  input: "conv9_2/bias"
}
node {
  name: "VarIsInitializedOp_267"
  op: "VarIsInitializedOp"
  input: "classes1/kernel"
}
node {
  name: "VarIsInitializedOp_268"
  op: "VarIsInitializedOp"
  input: "classes6/bias"
}
node {
  name: "VarIsInitializedOp_269"
  op: "VarIsInitializedOp"
  input: "classes4/kernel"
}
node {
  name: "VarIsInitializedOp_270"
  op: "VarIsInitializedOp"
  input: "conv8_1/bias"
}
node {
  name: "VarIsInitializedOp_271"
  op: "VarIsInitializedOp"
  input: "classes3/kernel"
}
node {
  name: "VarIsInitializedOp_272"
  op: "VarIsInitializedOp"
  input: "boxes3/kernel"
}
node {
  name: "VarIsInitializedOp_273"
  op: "VarIsInitializedOp"
  input: "conv10_1/kernel"
}
node {
  name: "VarIsInitializedOp_274"
  op: "VarIsInitializedOp"
  input: "fc7/bias"
}
node {
  name: "VarIsInitializedOp_275"
  op: "VarIsInitializedOp"
  input: "conv10_1/bias"
}
node {
  name: "VarIsInitializedOp_276"
  op: "VarIsInitializedOp"
  input: "classes3/bias"
}
node {
  name: "VarIsInitializedOp_277"
  op: "VarIsInitializedOp"
  input: "classes5/bias"
}
node {
  name: "VarIsInitializedOp_278"
  op: "VarIsInitializedOp"
  input: "boxes1/kernel"
}
node {
  name: "VarIsInitializedOp_279"
  op: "VarIsInitializedOp"
  input: "boxes3/bias"
}
node {
  name: "VarIsInitializedOp_280"
  op: "VarIsInitializedOp"
  input: "classes2/kernel"
}
node {
  name: "VarIsInitializedOp_281"
  op: "VarIsInitializedOp"
  input: "conv8_2/kernel"
}
node {
  name: "VarIsInitializedOp_282"
  op: "VarIsInitializedOp"
  input: "fc7/kernel"
}
node {
  name: "VarIsInitializedOp_283"
  op: "VarIsInitializedOp"
  input: "boxes1/bias"
}
node {
  name: "VarIsInitializedOp_284"
  op: "VarIsInitializedOp"
  input: "classes5/kernel"
}
node {
  name: "VarIsInitializedOp_285"
  op: "VarIsInitializedOp"
  input: "conv11_1/bias"
}
node {
  name: "VarIsInitializedOp_286"
  op: "VarIsInitializedOp"
  input: "conv9_1/kernel"
}
node {
  name: "VarIsInitializedOp_287"
  op: "VarIsInitializedOp"
  input: "boxes5/bias"
}
node {
  name: "VarIsInitializedOp_288"
  op: "VarIsInitializedOp"
  input: "classes1/bias"
}
node {
  name: "VarIsInitializedOp_289"
  op: "VarIsInitializedOp"
  input: "boxes6/kernel"
}
node {
  name: "VarIsInitializedOp_290"
  op: "VarIsInitializedOp"
  input: "conv9_1/bias"
}
node {
  name: "VarIsInitializedOp_291"
  op: "VarIsInitializedOp"
  input: "conv11_1/kernel"
}
node {
  name: "VarIsInitializedOp_292"
  op: "VarIsInitializedOp"
  input: "boxes6/bias"
}
node {
  name: "VarIsInitializedOp_293"
  op: "VarIsInitializedOp"
  input: "conv10_2/kernel"
}
node {
  name: "VarIsInitializedOp_294"
  op: "VarIsInitializedOp"
  input: "boxes4/kernel"
}
node {
  name: "VarIsInitializedOp_295"
  op: "VarIsInitializedOp"
  input: "classes4/bias"
}
node {
  name: "VarIsInitializedOp_296"
  op: "VarIsInitializedOp"
  input: "conv11_2/kernel"
}
node {
  name: "VarIsInitializedOp_297"
  op: "VarIsInitializedOp"
  input: "boxes4/bias"
}
node {
  name: "VarIsInitializedOp_298"
  op: "VarIsInitializedOp"
  input: "boxes2/bias"
}
node {
  name: "VarIsInitializedOp_299"
  op: "VarIsInitializedOp"
  input: "classes2/bias"
}
node {
  name: "VarIsInitializedOp_300"
  op: "VarIsInitializedOp"
  input: "conv10_2/bias"
}
node {
  name: "VarIsInitializedOp_301"
  op: "VarIsInitializedOp"
  input: "conv11_2/bias"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^boxes1/bias/Assign"
  input: "^boxes1/kernel/Assign"
  input: "^boxes2/bias/Assign"
  input: "^boxes2/kernel/Assign"
  input: "^boxes3/bias/Assign"
  input: "^boxes3/kernel/Assign"
  input: "^boxes4/bias/Assign"
  input: "^boxes4/kernel/Assign"
  input: "^boxes5/bias/Assign"
  input: "^boxes5/kernel/Assign"
  input: "^boxes6/bias/Assign"
  input: "^boxes6/kernel/Assign"
  input: "^classes1/bias/Assign"
  input: "^classes1/kernel/Assign"
  input: "^classes2/bias/Assign"
  input: "^classes2/kernel/Assign"
  input: "^classes3/bias/Assign"
  input: "^classes3/kernel/Assign"
  input: "^classes4/bias/Assign"
  input: "^classes4/kernel/Assign"
  input: "^classes5/bias/Assign"
  input: "^classes5/kernel/Assign"
  input: "^classes6/bias/Assign"
  input: "^classes6/kernel/Assign"
  input: "^conv10_1/bias/Assign"
  input: "^conv10_1/kernel/Assign"
  input: "^conv10_2/bias/Assign"
  input: "^conv10_2/kernel/Assign"
  input: "^conv11_1/bias/Assign"
  input: "^conv11_1/kernel/Assign"
  input: "^conv11_2/bias/Assign"
  input: "^conv11_2/kernel/Assign"
  input: "^conv8_1/bias/Assign"
  input: "^conv8_1/kernel/Assign"
  input: "^conv8_2/bias/Assign"
  input: "^conv8_2/kernel/Assign"
  input: "^conv9_1/bias/Assign"
  input: "^conv9_1/kernel/Assign"
  input: "^conv9_2/bias/Assign"
  input: "^conv9_2/kernel/Assign"
  input: "^fc7/bias/Assign"
  input: "^fc7/kernel/Assign"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^Conv1/kernel/Assign"
  input: "^Conv_1/kernel/Assign"
  input: "^Conv_1_bn/beta/Assign"
  input: "^Conv_1_bn/gamma/Assign"
  input: "^Conv_1_bn/moving_mean/Assign"
  input: "^Conv_1_bn/moving_variance/Assign"
  input: "^block_10_depthwise/depthwise_kernel/Assign"
  input: "^block_10_depthwise_BN/beta/Assign"
  input: "^block_10_depthwise_BN/gamma/Assign"
  input: "^block_10_depthwise_BN/moving_mean/Assign"
  input: "^block_10_depthwise_BN/moving_variance/Assign"
  input: "^block_10_expand/kernel/Assign"
  input: "^block_10_expand_BN/beta/Assign"
  input: "^block_10_expand_BN/gamma/Assign"
  input: "^block_10_expand_BN/moving_mean/Assign"
  input: "^block_10_expand_BN/moving_variance/Assign"
  input: "^block_10_project/kernel/Assign"
  input: "^block_10_project_BN/beta/Assign"
  input: "^block_10_project_BN/gamma/Assign"
  input: "^block_10_project_BN/moving_mean/Assign"
  input: "^block_10_project_BN/moving_variance/Assign"
  input: "^block_11_depthwise/depthwise_kernel/Assign"
  input: "^block_11_depthwise_BN/beta/Assign"
  input: "^block_11_depthwise_BN/gamma/Assign"
  input: "^block_11_depthwise_BN/moving_mean/Assign"
  input: "^block_11_depthwise_BN/moving_variance/Assign"
  input: "^block_11_expand/kernel/Assign"
  input: "^block_11_expand_BN/beta/Assign"
  input: "^block_11_expand_BN/gamma/Assign"
  input: "^block_11_expand_BN/moving_mean/Assign"
  input: "^block_11_expand_BN/moving_variance/Assign"
  input: "^block_11_project/kernel/Assign"
  input: "^block_11_project_BN/beta/Assign"
  input: "^block_11_project_BN/gamma/Assign"
  input: "^block_11_project_BN/moving_mean/Assign"
  input: "^block_11_project_BN/moving_variance/Assign"
  input: "^block_12_depthwise/depthwise_kernel/Assign"
  input: "^block_12_depthwise_BN/beta/Assign"
  input: "^block_12_depthwise_BN/gamma/Assign"
  input: "^block_12_depthwise_BN/moving_mean/Assign"
  input: "^block_12_depthwise_BN/moving_variance/Assign"
  input: "^block_12_expand/kernel/Assign"
  input: "^block_12_expand_BN/beta/Assign"
  input: "^block_12_expand_BN/gamma/Assign"
  input: "^block_12_expand_BN/moving_mean/Assign"
  input: "^block_12_expand_BN/moving_variance/Assign"
  input: "^block_12_project/kernel/Assign"
  input: "^block_12_project_BN/beta/Assign"
  input: "^block_12_project_BN/gamma/Assign"
  input: "^block_12_project_BN/moving_mean/Assign"
  input: "^block_12_project_BN/moving_variance/Assign"
  input: "^block_13_depthwise/depthwise_kernel/Assign"
  input: "^block_13_depthwise_BN/beta/Assign"
  input: "^block_13_depthwise_BN/gamma/Assign"
  input: "^block_13_depthwise_BN/moving_mean/Assign"
  input: "^block_13_depthwise_BN/moving_variance/Assign"
  input: "^block_13_expand/kernel/Assign"
  input: "^block_13_expand_BN/beta/Assign"
  input: "^block_13_expand_BN/gamma/Assign"
  input: "^block_13_expand_BN/moving_mean/Assign"
  input: "^block_13_expand_BN/moving_variance/Assign"
  input: "^block_13_project/kernel/Assign"
  input: "^block_13_project_BN/beta/Assign"
  input: "^block_13_project_BN/gamma/Assign"
  input: "^block_13_project_BN/moving_mean/Assign"
  input: "^block_13_project_BN/moving_variance/Assign"
  input: "^block_14_depthwise/depthwise_kernel/Assign"
  input: "^block_14_depthwise_BN/beta/Assign"
  input: "^block_14_depthwise_BN/gamma/Assign"
  input: "^block_14_depthwise_BN/moving_mean/Assign"
  input: "^block_14_depthwise_BN/moving_variance/Assign"
  input: "^block_14_expand/kernel/Assign"
  input: "^block_14_expand_BN/beta/Assign"
  input: "^block_14_expand_BN/gamma/Assign"
  input: "^block_14_expand_BN/moving_mean/Assign"
  input: "^block_14_expand_BN/moving_variance/Assign"
  input: "^block_14_project/kernel/Assign"
  input: "^block_14_project_BN/beta/Assign"
  input: "^block_14_project_BN/gamma/Assign"
  input: "^block_14_project_BN/moving_mean/Assign"
  input: "^block_14_project_BN/moving_variance/Assign"
  input: "^block_15_depthwise/depthwise_kernel/Assign"
  input: "^block_15_depthwise_BN/beta/Assign"
  input: "^block_15_depthwise_BN/gamma/Assign"
  input: "^block_15_depthwise_BN/moving_mean/Assign"
  input: "^block_15_depthwise_BN/moving_variance/Assign"
  input: "^block_15_expand/kernel/Assign"
  input: "^block_15_expand_BN/beta/Assign"
  input: "^block_15_expand_BN/gamma/Assign"
  input: "^block_15_expand_BN/moving_mean/Assign"
  input: "^block_15_expand_BN/moving_variance/Assign"
  input: "^block_15_project/kernel/Assign"
  input: "^block_15_project_BN/beta/Assign"
  input: "^block_15_project_BN/gamma/Assign"
  input: "^block_15_project_BN/moving_mean/Assign"
  input: "^block_15_project_BN/moving_variance/Assign"
  input: "^block_16_depthwise/depthwise_kernel/Assign"
  input: "^block_16_depthwise_BN/beta/Assign"
  input: "^block_16_depthwise_BN/gamma/Assign"
  input: "^block_16_depthwise_BN/moving_mean/Assign"
  input: "^block_16_depthwise_BN/moving_variance/Assign"
  input: "^block_16_expand/kernel/Assign"
  input: "^block_16_expand_BN/beta/Assign"
  input: "^block_16_expand_BN/gamma/Assign"
  input: "^block_16_expand_BN/moving_mean/Assign"
  input: "^block_16_expand_BN/moving_variance/Assign"
  input: "^block_16_project/kernel/Assign"
  input: "^block_16_project_BN/beta/Assign"
  input: "^block_16_project_BN/gamma/Assign"
  input: "^block_16_project_BN/moving_mean/Assign"
  input: "^block_16_project_BN/moving_variance/Assign"
  input: "^block_1_depthwise/depthwise_kernel/Assign"
  input: "^block_1_depthwise_BN/beta/Assign"
  input: "^block_1_depthwise_BN/gamma/Assign"
  input: "^block_1_depthwise_BN/moving_mean/Assign"
  input: "^block_1_depthwise_BN/moving_variance/Assign"
  input: "^block_1_expand/kernel/Assign"
  input: "^block_1_expand_BN/beta/Assign"
  input: "^block_1_expand_BN/gamma/Assign"
  input: "^block_1_expand_BN/moving_mean/Assign"
  input: "^block_1_expand_BN/moving_variance/Assign"
  input: "^block_1_project/kernel/Assign"
  input: "^block_1_project_BN/beta/Assign"
  input: "^block_1_project_BN/gamma/Assign"
  input: "^block_1_project_BN/moving_mean/Assign"
  input: "^block_1_project_BN/moving_variance/Assign"
  input: "^block_2_depthwise/depthwise_kernel/Assign"
  input: "^block_2_depthwise_BN/beta/Assign"
  input: "^block_2_depthwise_BN/gamma/Assign"
  input: "^block_2_depthwise_BN/moving_mean/Assign"
  input: "^block_2_depthwise_BN/moving_variance/Assign"
  input: "^block_2_expand/kernel/Assign"
  input: "^block_2_expand_BN/beta/Assign"
  input: "^block_2_expand_BN/gamma/Assign"
  input: "^block_2_expand_BN/moving_mean/Assign"
  input: "^block_2_expand_BN/moving_variance/Assign"
  input: "^block_2_project/kernel/Assign"
  input: "^block_2_project_BN/beta/Assign"
  input: "^block_2_project_BN/gamma/Assign"
  input: "^block_2_project_BN/moving_mean/Assign"
  input: "^block_2_project_BN/moving_variance/Assign"
  input: "^block_3_depthwise/depthwise_kernel/Assign"
  input: "^block_3_depthwise_BN/beta/Assign"
  input: "^block_3_depthwise_BN/gamma/Assign"
  input: "^block_3_depthwise_BN/moving_mean/Assign"
  input: "^block_3_depthwise_BN/moving_variance/Assign"
  input: "^block_3_expand/kernel/Assign"
  input: "^block_3_expand_BN/beta/Assign"
  input: "^block_3_expand_BN/gamma/Assign"
  input: "^block_3_expand_BN/moving_mean/Assign"
  input: "^block_3_expand_BN/moving_variance/Assign"
  input: "^block_3_project/kernel/Assign"
  input: "^block_3_project_BN/beta/Assign"
  input: "^block_3_project_BN/gamma/Assign"
  input: "^block_3_project_BN/moving_mean/Assign"
  input: "^block_3_project_BN/moving_variance/Assign"
  input: "^block_4_depthwise/depthwise_kernel/Assign"
  input: "^block_4_depthwise_BN/beta/Assign"
  input: "^block_4_depthwise_BN/gamma/Assign"
  input: "^block_4_depthwise_BN/moving_mean/Assign"
  input: "^block_4_depthwise_BN/moving_variance/Assign"
  input: "^block_4_expand/kernel/Assign"
  input: "^block_4_expand_BN/beta/Assign"
  input: "^block_4_expand_BN/gamma/Assign"
  input: "^block_4_expand_BN/moving_mean/Assign"
  input: "^block_4_expand_BN/moving_variance/Assign"
  input: "^block_4_project/kernel/Assign"
  input: "^block_4_project_BN/beta/Assign"
  input: "^block_4_project_BN/gamma/Assign"
  input: "^block_4_project_BN/moving_mean/Assign"
  input: "^block_4_project_BN/moving_variance/Assign"
  input: "^block_5_depthwise/depthwise_kernel/Assign"
  input: "^block_5_depthwise_BN/beta/Assign"
  input: "^block_5_depthwise_BN/gamma/Assign"
  input: "^block_5_depthwise_BN/moving_mean/Assign"
  input: "^block_5_depthwise_BN/moving_variance/Assign"
  input: "^block_5_expand/kernel/Assign"
  input: "^block_5_expand_BN/beta/Assign"
  input: "^block_5_expand_BN/gamma/Assign"
  input: "^block_5_expand_BN/moving_mean/Assign"
  input: "^block_5_expand_BN/moving_variance/Assign"
  input: "^block_5_project/kernel/Assign"
  input: "^block_5_project_BN/beta/Assign"
  input: "^block_5_project_BN/gamma/Assign"
  input: "^block_5_project_BN/moving_mean/Assign"
  input: "^block_5_project_BN/moving_variance/Assign"
  input: "^block_6_depthwise/depthwise_kernel/Assign"
  input: "^block_6_depthwise_BN/beta/Assign"
  input: "^block_6_depthwise_BN/gamma/Assign"
  input: "^block_6_depthwise_BN/moving_mean/Assign"
  input: "^block_6_depthwise_BN/moving_variance/Assign"
  input: "^block_6_expand/kernel/Assign"
  input: "^block_6_expand_BN/beta/Assign"
  input: "^block_6_expand_BN/gamma/Assign"
  input: "^block_6_expand_BN/moving_mean/Assign"
  input: "^block_6_expand_BN/moving_variance/Assign"
  input: "^block_6_project/kernel/Assign"
  input: "^block_6_project_BN/beta/Assign"
  input: "^block_6_project_BN/gamma/Assign"
  input: "^block_6_project_BN/moving_mean/Assign"
  input: "^block_6_project_BN/moving_variance/Assign"
  input: "^block_7_depthwise/depthwise_kernel/Assign"
  input: "^block_7_depthwise_BN/beta/Assign"
  input: "^block_7_depthwise_BN/gamma/Assign"
  input: "^block_7_depthwise_BN/moving_mean/Assign"
  input: "^block_7_depthwise_BN/moving_variance/Assign"
  input: "^block_7_expand/kernel/Assign"
  input: "^block_7_expand_BN/beta/Assign"
  input: "^block_7_expand_BN/gamma/Assign"
  input: "^block_7_expand_BN/moving_mean/Assign"
  input: "^block_7_expand_BN/moving_variance/Assign"
  input: "^block_7_project/kernel/Assign"
  input: "^block_7_project_BN/beta/Assign"
  input: "^block_7_project_BN/gamma/Assign"
  input: "^block_7_project_BN/moving_mean/Assign"
  input: "^block_7_project_BN/moving_variance/Assign"
  input: "^block_8_depthwise/depthwise_kernel/Assign"
  input: "^block_8_depthwise_BN/beta/Assign"
  input: "^block_8_depthwise_BN/gamma/Assign"
  input: "^block_8_depthwise_BN/moving_mean/Assign"
  input: "^block_8_depthwise_BN/moving_variance/Assign"
  input: "^block_8_expand/kernel/Assign"
  input: "^block_8_expand_BN/beta/Assign"
  input: "^block_8_expand_BN/gamma/Assign"
  input: "^block_8_expand_BN/moving_mean/Assign"
  input: "^block_8_expand_BN/moving_variance/Assign"
  input: "^block_8_project/kernel/Assign"
  input: "^block_8_project_BN/beta/Assign"
  input: "^block_8_project_BN/gamma/Assign"
  input: "^block_8_project_BN/moving_mean/Assign"
  input: "^block_8_project_BN/moving_variance/Assign"
  input: "^block_9_depthwise/depthwise_kernel/Assign"
  input: "^block_9_depthwise_BN/beta/Assign"
  input: "^block_9_depthwise_BN/gamma/Assign"
  input: "^block_9_depthwise_BN/moving_mean/Assign"
  input: "^block_9_depthwise_BN/moving_variance/Assign"
  input: "^block_9_expand/kernel/Assign"
  input: "^block_9_expand_BN/beta/Assign"
  input: "^block_9_expand_BN/gamma/Assign"
  input: "^block_9_expand_BN/moving_mean/Assign"
  input: "^block_9_expand_BN/moving_variance/Assign"
  input: "^block_9_project/kernel/Assign"
  input: "^block_9_project_BN/beta/Assign"
  input: "^block_9_project_BN/gamma/Assign"
  input: "^block_9_project_BN/moving_mean/Assign"
  input: "^block_9_project_BN/moving_variance/Assign"
  input: "^bn_Conv1/beta/Assign"
  input: "^bn_Conv1/gamma/Assign"
  input: "^bn_Conv1/moving_mean/Assign"
  input: "^bn_Conv1/moving_variance/Assign"
  input: "^boxes1/bias/Assign"
  input: "^boxes1/kernel/Assign"
  input: "^boxes2/bias/Assign"
  input: "^boxes2/kernel/Assign"
  input: "^boxes3/bias/Assign"
  input: "^boxes3/kernel/Assign"
  input: "^boxes4/bias/Assign"
  input: "^boxes4/kernel/Assign"
  input: "^boxes5/bias/Assign"
  input: "^boxes5/kernel/Assign"
  input: "^boxes6/bias/Assign"
  input: "^boxes6/kernel/Assign"
  input: "^classes1/bias/Assign"
  input: "^classes1/kernel/Assign"
  input: "^classes2/bias/Assign"
  input: "^classes2/kernel/Assign"
  input: "^classes3/bias/Assign"
  input: "^classes3/kernel/Assign"
  input: "^classes4/bias/Assign"
  input: "^classes4/kernel/Assign"
  input: "^classes5/bias/Assign"
  input: "^classes5/kernel/Assign"
  input: "^classes6/bias/Assign"
  input: "^classes6/kernel/Assign"
  input: "^conv10_1/bias/Assign"
  input: "^conv10_1/kernel/Assign"
  input: "^conv10_2/bias/Assign"
  input: "^conv10_2/kernel/Assign"
  input: "^conv11_1/bias/Assign"
  input: "^conv11_1/kernel/Assign"
  input: "^conv11_2/bias/Assign"
  input: "^conv11_2/kernel/Assign"
  input: "^conv8_1/bias/Assign"
  input: "^conv8_1/kernel/Assign"
  input: "^conv8_2/bias/Assign"
  input: "^conv8_2/kernel/Assign"
  input: "^conv9_1/bias/Assign"
  input: "^conv9_1/kernel/Assign"
  input: "^conv9_2/bias/Assign"
  input: "^conv9_2/kernel/Assign"
  input: "^expanded_conv_depthwise/depthwise_kernel/Assign"
  input: "^expanded_conv_depthwise_BN/beta/Assign"
  input: "^expanded_conv_depthwise_BN/gamma/Assign"
  input: "^expanded_conv_depthwise_BN/moving_mean/Assign"
  input: "^expanded_conv_depthwise_BN/moving_variance/Assign"
  input: "^expanded_conv_project/kernel/Assign"
  input: "^expanded_conv_project_BN/beta/Assign"
  input: "^expanded_conv_project_BN/gamma/Assign"
  input: "^expanded_conv_project_BN/moving_mean/Assign"
  input: "^expanded_conv_project_BN/moving_variance/Assign"
  input: "^fc7/bias/Assign"
  input: "^fc7/kernel/Assign"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 302
          }
        }
        string_val: "Conv1/kernel"
        string_val: "Conv_1/kernel"
        string_val: "Conv_1_bn/beta"
        string_val: "Conv_1_bn/gamma"
        string_val: "Conv_1_bn/moving_mean"
        string_val: "Conv_1_bn/moving_variance"
        string_val: "block_10_depthwise/depthwise_kernel"
        string_val: "block_10_depthwise_BN/beta"
        string_val: "block_10_depthwise_BN/gamma"
        string_val: "block_10_depthwise_BN/moving_mean"
        string_val: "block_10_depthwise_BN/moving_variance"
        string_val: "block_10_expand/kernel"
        string_val: "block_10_expand_BN/beta"
        string_val: "block_10_expand_BN/gamma"
        string_val: "block_10_expand_BN/moving_mean"
        string_val: "block_10_expand_BN/moving_variance"
        string_val: "block_10_project/kernel"
        string_val: "block_10_project_BN/beta"
        string_val: "block_10_project_BN/gamma"
        string_val: "block_10_project_BN/moving_mean"
        string_val: "block_10_project_BN/moving_variance"
        string_val: "block_11_depthwise/depthwise_kernel"
        string_val: "block_11_depthwise_BN/beta"
        string_val: "block_11_depthwise_BN/gamma"
        string_val: "block_11_depthwise_BN/moving_mean"
        string_val: "block_11_depthwise_BN/moving_variance"
        string_val: "block_11_expand/kernel"
        string_val: "block_11_expand_BN/beta"
        string_val: "block_11_expand_BN/gamma"
        string_val: "block_11_expand_BN/moving_mean"
        string_val: "block_11_expand_BN/moving_variance"
        string_val: "block_11_project/kernel"
        string_val: "block_11_project_BN/beta"
        string_val: "block_11_project_BN/gamma"
        string_val: "block_11_project_BN/moving_mean"
        string_val: "block_11_project_BN/moving_variance"
        string_val: "block_12_depthwise/depthwise_kernel"
        string_val: "block_12_depthwise_BN/beta"
        string_val: "block_12_depthwise_BN/gamma"
        string_val: "block_12_depthwise_BN/moving_mean"
        string_val: "block_12_depthwise_BN/moving_variance"
        string_val: "block_12_expand/kernel"
        string_val: "block_12_expand_BN/beta"
        string_val: "block_12_expand_BN/gamma"
        string_val: "block_12_expand_BN/moving_mean"
        string_val: "block_12_expand_BN/moving_variance"
        string_val: "block_12_project/kernel"
        string_val: "block_12_project_BN/beta"
        string_val: "block_12_project_BN/gamma"
        string_val: "block_12_project_BN/moving_mean"
        string_val: "block_12_project_BN/moving_variance"
        string_val: "block_13_depthwise/depthwise_kernel"
        string_val: "block_13_depthwise_BN/beta"
        string_val: "block_13_depthwise_BN/gamma"
        string_val: "block_13_depthwise_BN/moving_mean"
        string_val: "block_13_depthwise_BN/moving_variance"
        string_val: "block_13_expand/kernel"
        string_val: "block_13_expand_BN/beta"
        string_val: "block_13_expand_BN/gamma"
        string_val: "block_13_expand_BN/moving_mean"
        string_val: "block_13_expand_BN/moving_variance"
        string_val: "block_13_project/kernel"
        string_val: "block_13_project_BN/beta"
        string_val: "block_13_project_BN/gamma"
        string_val: "block_13_project_BN/moving_mean"
        string_val: "block_13_project_BN/moving_variance"
        string_val: "block_14_depthwise/depthwise_kernel"
        string_val: "block_14_depthwise_BN/beta"
        string_val: "block_14_depthwise_BN/gamma"
        string_val: "block_14_depthwise_BN/moving_mean"
        string_val: "block_14_depthwise_BN/moving_variance"
        string_val: "block_14_expand/kernel"
        string_val: "block_14_expand_BN/beta"
        string_val: "block_14_expand_BN/gamma"
        string_val: "block_14_expand_BN/moving_mean"
        string_val: "block_14_expand_BN/moving_variance"
        string_val: "block_14_project/kernel"
        string_val: "block_14_project_BN/beta"
        string_val: "block_14_project_BN/gamma"
        string_val: "block_14_project_BN/moving_mean"
        string_val: "block_14_project_BN/moving_variance"
        string_val: "block_15_depthwise/depthwise_kernel"
        string_val: "block_15_depthwise_BN/beta"
        string_val: "block_15_depthwise_BN/gamma"
        string_val: "block_15_depthwise_BN/moving_mean"
        string_val: "block_15_depthwise_BN/moving_variance"
        string_val: "block_15_expand/kernel"
        string_val: "block_15_expand_BN/beta"
        string_val: "block_15_expand_BN/gamma"
        string_val: "block_15_expand_BN/moving_mean"
        string_val: "block_15_expand_BN/moving_variance"
        string_val: "block_15_project/kernel"
        string_val: "block_15_project_BN/beta"
        string_val: "block_15_project_BN/gamma"
        string_val: "block_15_project_BN/moving_mean"
        string_val: "block_15_project_BN/moving_variance"
        string_val: "block_16_depthwise/depthwise_kernel"
        string_val: "block_16_depthwise_BN/beta"
        string_val: "block_16_depthwise_BN/gamma"
        string_val: "block_16_depthwise_BN/moving_mean"
        string_val: "block_16_depthwise_BN/moving_variance"
        string_val: "block_16_expand/kernel"
        string_val: "block_16_expand_BN/beta"
        string_val: "block_16_expand_BN/gamma"
        string_val: "block_16_expand_BN/moving_mean"
        string_val: "block_16_expand_BN/moving_variance"
        string_val: "block_16_project/kernel"
        string_val: "block_16_project_BN/beta"
        string_val: "block_16_project_BN/gamma"
        string_val: "block_16_project_BN/moving_mean"
        string_val: "block_16_project_BN/moving_variance"
        string_val: "block_1_depthwise/depthwise_kernel"
        string_val: "block_1_depthwise_BN/beta"
        string_val: "block_1_depthwise_BN/gamma"
        string_val: "block_1_depthwise_BN/moving_mean"
        string_val: "block_1_depthwise_BN/moving_variance"
        string_val: "block_1_expand/kernel"
        string_val: "block_1_expand_BN/beta"
        string_val: "block_1_expand_BN/gamma"
        string_val: "block_1_expand_BN/moving_mean"
        string_val: "block_1_expand_BN/moving_variance"
        string_val: "block_1_project/kernel"
        string_val: "block_1_project_BN/beta"
        string_val: "block_1_project_BN/gamma"
        string_val: "block_1_project_BN/moving_mean"
        string_val: "block_1_project_BN/moving_variance"
        string_val: "block_2_depthwise/depthwise_kernel"
        string_val: "block_2_depthwise_BN/beta"
        string_val: "block_2_depthwise_BN/gamma"
        string_val: "block_2_depthwise_BN/moving_mean"
        string_val: "block_2_depthwise_BN/moving_variance"
        string_val: "block_2_expand/kernel"
        string_val: "block_2_expand_BN/beta"
        string_val: "block_2_expand_BN/gamma"
        string_val: "block_2_expand_BN/moving_mean"
        string_val: "block_2_expand_BN/moving_variance"
        string_val: "block_2_project/kernel"
        string_val: "block_2_project_BN/beta"
        string_val: "block_2_project_BN/gamma"
        string_val: "block_2_project_BN/moving_mean"
        string_val: "block_2_project_BN/moving_variance"
        string_val: "block_3_depthwise/depthwise_kernel"
        string_val: "block_3_depthwise_BN/beta"
        string_val: "block_3_depthwise_BN/gamma"
        string_val: "block_3_depthwise_BN/moving_mean"
        string_val: "block_3_depthwise_BN/moving_variance"
        string_val: "block_3_expand/kernel"
        string_val: "block_3_expand_BN/beta"
        string_val: "block_3_expand_BN/gamma"
        string_val: "block_3_expand_BN/moving_mean"
        string_val: "block_3_expand_BN/moving_variance"
        string_val: "block_3_project/kernel"
        string_val: "block_3_project_BN/beta"
        string_val: "block_3_project_BN/gamma"
        string_val: "block_3_project_BN/moving_mean"
        string_val: "block_3_project_BN/moving_variance"
        string_val: "block_4_depthwise/depthwise_kernel"
        string_val: "block_4_depthwise_BN/beta"
        string_val: "block_4_depthwise_BN/gamma"
        string_val: "block_4_depthwise_BN/moving_mean"
        string_val: "block_4_depthwise_BN/moving_variance"
        string_val: "block_4_expand/kernel"
        string_val: "block_4_expand_BN/beta"
        string_val: "block_4_expand_BN/gamma"
        string_val: "block_4_expand_BN/moving_mean"
        string_val: "block_4_expand_BN/moving_variance"
        string_val: "block_4_project/kernel"
        string_val: "block_4_project_BN/beta"
        string_val: "block_4_project_BN/gamma"
        string_val: "block_4_project_BN/moving_mean"
        string_val: "block_4_project_BN/moving_variance"
        string_val: "block_5_depthwise/depthwise_kernel"
        string_val: "block_5_depthwise_BN/beta"
        string_val: "block_5_depthwise_BN/gamma"
        string_val: "block_5_depthwise_BN/moving_mean"
        string_val: "block_5_depthwise_BN/moving_variance"
        string_val: "block_5_expand/kernel"
        string_val: "block_5_expand_BN/beta"
        string_val: "block_5_expand_BN/gamma"
        string_val: "block_5_expand_BN/moving_mean"
        string_val: "block_5_expand_BN/moving_variance"
        string_val: "block_5_project/kernel"
        string_val: "block_5_project_BN/beta"
        string_val: "block_5_project_BN/gamma"
        string_val: "block_5_project_BN/moving_mean"
        string_val: "block_5_project_BN/moving_variance"
        string_val: "block_6_depthwise/depthwise_kernel"
        string_val: "block_6_depthwise_BN/beta"
        string_val: "block_6_depthwise_BN/gamma"
        string_val: "block_6_depthwise_BN/moving_mean"
        string_val: "block_6_depthwise_BN/moving_variance"
        string_val: "block_6_expand/kernel"
        string_val: "block_6_expand_BN/beta"
        string_val: "block_6_expand_BN/gamma"
        string_val: "block_6_expand_BN/moving_mean"
        string_val: "block_6_expand_BN/moving_variance"
        string_val: "block_6_project/kernel"
        string_val: "block_6_project_BN/beta"
        string_val: "block_6_project_BN/gamma"
        string_val: "block_6_project_BN/moving_mean"
        string_val: "block_6_project_BN/moving_variance"
        string_val: "block_7_depthwise/depthwise_kernel"
        string_val: "block_7_depthwise_BN/beta"
        string_val: "block_7_depthwise_BN/gamma"
        string_val: "block_7_depthwise_BN/moving_mean"
        string_val: "block_7_depthwise_BN/moving_variance"
        string_val: "block_7_expand/kernel"
        string_val: "block_7_expand_BN/beta"
        string_val: "block_7_expand_BN/gamma"
        string_val: "block_7_expand_BN/moving_mean"
        string_val: "block_7_expand_BN/moving_variance"
        string_val: "block_7_project/kernel"
        string_val: "block_7_project_BN/beta"
        string_val: "block_7_project_BN/gamma"
        string_val: "block_7_project_BN/moving_mean"
        string_val: "block_7_project_BN/moving_variance"
        string_val: "block_8_depthwise/depthwise_kernel"
        string_val: "block_8_depthwise_BN/beta"
        string_val: "block_8_depthwise_BN/gamma"
        string_val: "block_8_depthwise_BN/moving_mean"
        string_val: "block_8_depthwise_BN/moving_variance"
        string_val: "block_8_expand/kernel"
        string_val: "block_8_expand_BN/beta"
        string_val: "block_8_expand_BN/gamma"
        string_val: "block_8_expand_BN/moving_mean"
        string_val: "block_8_expand_BN/moving_variance"
        string_val: "block_8_project/kernel"
        string_val: "block_8_project_BN/beta"
        string_val: "block_8_project_BN/gamma"
        string_val: "block_8_project_BN/moving_mean"
        string_val: "block_8_project_BN/moving_variance"
        string_val: "block_9_depthwise/depthwise_kernel"
        string_val: "block_9_depthwise_BN/beta"
        string_val: "block_9_depthwise_BN/gamma"
        string_val: "block_9_depthwise_BN/moving_mean"
        string_val: "block_9_depthwise_BN/moving_variance"
        string_val: "block_9_expand/kernel"
        string_val: "block_9_expand_BN/beta"
        string_val: "block_9_expand_BN/gamma"
        string_val: "block_9_expand_BN/moving_mean"
        string_val: "block_9_expand_BN/moving_variance"
        string_val: "block_9_project/kernel"
        string_val: "block_9_project_BN/beta"
        string_val: "block_9_project_BN/gamma"
        string_val: "block_9_project_BN/moving_mean"
        string_val: "block_9_project_BN/moving_variance"
        string_val: "bn_Conv1/beta"
        string_val: "bn_Conv1/gamma"
        string_val: "bn_Conv1/moving_mean"
        string_val: "bn_Conv1/moving_variance"
        string_val: "boxes1/bias"
        string_val: "boxes1/kernel"
        string_val: "boxes2/bias"
        string_val: "boxes2/kernel"
        string_val: "boxes3/bias"
        string_val: "boxes3/kernel"
        string_val: "boxes4/bias"
        string_val: "boxes4/kernel"
        string_val: "boxes5/bias"
        string_val: "boxes5/kernel"
        string_val: "boxes6/bias"
        string_val: "boxes6/kernel"
        string_val: "classes1/bias"
        string_val: "classes1/kernel"
        string_val: "classes2/bias"
        string_val: "classes2/kernel"
        string_val: "classes3/bias"
        string_val: "classes3/kernel"
        string_val: "classes4/bias"
        string_val: "classes4/kernel"
        string_val: "classes5/bias"
        string_val: "classes5/kernel"
        string_val: "classes6/bias"
        string_val: "classes6/kernel"
        string_val: "conv10_1/bias"
        string_val: "conv10_1/kernel"
        string_val: "conv10_2/bias"
        string_val: "conv10_2/kernel"
        string_val: "conv11_1/bias"
        string_val: "conv11_1/kernel"
        string_val: "conv11_2/bias"
        string_val: "conv11_2/kernel"
        string_val: "conv8_1/bias"
        string_val: "conv8_1/kernel"
        string_val: "conv8_2/bias"
        string_val: "conv8_2/kernel"
        string_val: "conv9_1/bias"
        string_val: "conv9_1/kernel"
        string_val: "conv9_2/bias"
        string_val: "conv9_2/kernel"
        string_val: "expanded_conv_depthwise/depthwise_kernel"
        string_val: "expanded_conv_depthwise_BN/beta"
        string_val: "expanded_conv_depthwise_BN/gamma"
        string_val: "expanded_conv_depthwise_BN/moving_mean"
        string_val: "expanded_conv_depthwise_BN/moving_variance"
        string_val: "expanded_conv_project/kernel"
        string_val: "expanded_conv_project_BN/beta"
        string_val: "expanded_conv_project_BN/gamma"
        string_val: "expanded_conv_project_BN/moving_mean"
        string_val: "expanded_conv_project_BN/moving_variance"
        string_val: "fc7/bias"
        string_val: "fc7/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 302
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Conv1/kernel/Read/ReadVariableOp"
  input: "Conv_1/kernel/Read/ReadVariableOp"
  input: "Conv_1_bn/beta/Read/ReadVariableOp"
  input: "Conv_1_bn/gamma/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_expand/kernel/Read/ReadVariableOp"
  input: "block_10_expand_BN/beta/Read/ReadVariableOp"
  input: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_project/kernel/Read/ReadVariableOp"
  input: "block_10_project_BN/beta/Read/ReadVariableOp"
  input: "block_10_project_BN/gamma/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_expand/kernel/Read/ReadVariableOp"
  input: "block_11_expand_BN/beta/Read/ReadVariableOp"
  input: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_project/kernel/Read/ReadVariableOp"
  input: "block_11_project_BN/beta/Read/ReadVariableOp"
  input: "block_11_project_BN/gamma/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_expand/kernel/Read/ReadVariableOp"
  input: "block_12_expand_BN/beta/Read/ReadVariableOp"
  input: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_project/kernel/Read/ReadVariableOp"
  input: "block_12_project_BN/beta/Read/ReadVariableOp"
  input: "block_12_project_BN/gamma/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_expand/kernel/Read/ReadVariableOp"
  input: "block_13_expand_BN/beta/Read/ReadVariableOp"
  input: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_project/kernel/Read/ReadVariableOp"
  input: "block_13_project_BN/beta/Read/ReadVariableOp"
  input: "block_13_project_BN/gamma/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_expand/kernel/Read/ReadVariableOp"
  input: "block_14_expand_BN/beta/Read/ReadVariableOp"
  input: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_project/kernel/Read/ReadVariableOp"
  input: "block_14_project_BN/beta/Read/ReadVariableOp"
  input: "block_14_project_BN/gamma/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_expand/kernel/Read/ReadVariableOp"
  input: "block_15_expand_BN/beta/Read/ReadVariableOp"
  input: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_project/kernel/Read/ReadVariableOp"
  input: "block_15_project_BN/beta/Read/ReadVariableOp"
  input: "block_15_project_BN/gamma/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_expand/kernel/Read/ReadVariableOp"
  input: "block_16_expand_BN/beta/Read/ReadVariableOp"
  input: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_project/kernel/Read/ReadVariableOp"
  input: "block_16_project_BN/beta/Read/ReadVariableOp"
  input: "block_16_project_BN/gamma/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_expand/kernel/Read/ReadVariableOp"
  input: "block_1_expand_BN/beta/Read/ReadVariableOp"
  input: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_project/kernel/Read/ReadVariableOp"
  input: "block_1_project_BN/beta/Read/ReadVariableOp"
  input: "block_1_project_BN/gamma/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_expand/kernel/Read/ReadVariableOp"
  input: "block_2_expand_BN/beta/Read/ReadVariableOp"
  input: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_project/kernel/Read/ReadVariableOp"
  input: "block_2_project_BN/beta/Read/ReadVariableOp"
  input: "block_2_project_BN/gamma/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_expand/kernel/Read/ReadVariableOp"
  input: "block_3_expand_BN/beta/Read/ReadVariableOp"
  input: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_project/kernel/Read/ReadVariableOp"
  input: "block_3_project_BN/beta/Read/ReadVariableOp"
  input: "block_3_project_BN/gamma/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_expand/kernel/Read/ReadVariableOp"
  input: "block_4_expand_BN/beta/Read/ReadVariableOp"
  input: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_project/kernel/Read/ReadVariableOp"
  input: "block_4_project_BN/beta/Read/ReadVariableOp"
  input: "block_4_project_BN/gamma/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_expand/kernel/Read/ReadVariableOp"
  input: "block_5_expand_BN/beta/Read/ReadVariableOp"
  input: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_project/kernel/Read/ReadVariableOp"
  input: "block_5_project_BN/beta/Read/ReadVariableOp"
  input: "block_5_project_BN/gamma/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_expand/kernel/Read/ReadVariableOp"
  input: "block_6_expand_BN/beta/Read/ReadVariableOp"
  input: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_project/kernel/Read/ReadVariableOp"
  input: "block_6_project_BN/beta/Read/ReadVariableOp"
  input: "block_6_project_BN/gamma/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_expand/kernel/Read/ReadVariableOp"
  input: "block_7_expand_BN/beta/Read/ReadVariableOp"
  input: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_project/kernel/Read/ReadVariableOp"
  input: "block_7_project_BN/beta/Read/ReadVariableOp"
  input: "block_7_project_BN/gamma/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_expand/kernel/Read/ReadVariableOp"
  input: "block_8_expand_BN/beta/Read/ReadVariableOp"
  input: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_project/kernel/Read/ReadVariableOp"
  input: "block_8_project_BN/beta/Read/ReadVariableOp"
  input: "block_8_project_BN/gamma/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_expand/kernel/Read/ReadVariableOp"
  input: "block_9_expand_BN/beta/Read/ReadVariableOp"
  input: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_project/kernel/Read/ReadVariableOp"
  input: "block_9_project_BN/beta/Read/ReadVariableOp"
  input: "block_9_project_BN/gamma/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  input: "bn_Conv1/beta/Read/ReadVariableOp"
  input: "bn_Conv1/gamma/Read/ReadVariableOp"
  input: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  input: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  input: "boxes1/bias/Read/ReadVariableOp"
  input: "boxes1/kernel/Read/ReadVariableOp"
  input: "boxes2/bias/Read/ReadVariableOp"
  input: "boxes2/kernel/Read/ReadVariableOp"
  input: "boxes3/bias/Read/ReadVariableOp"
  input: "boxes3/kernel/Read/ReadVariableOp"
  input: "boxes4/bias/Read/ReadVariableOp"
  input: "boxes4/kernel/Read/ReadVariableOp"
  input: "boxes5/bias/Read/ReadVariableOp"
  input: "boxes5/kernel/Read/ReadVariableOp"
  input: "boxes6/bias/Read/ReadVariableOp"
  input: "boxes6/kernel/Read/ReadVariableOp"
  input: "classes1/bias/Read/ReadVariableOp"
  input: "classes1/kernel/Read/ReadVariableOp"
  input: "classes2/bias/Read/ReadVariableOp"
  input: "classes2/kernel/Read/ReadVariableOp"
  input: "classes3/bias/Read/ReadVariableOp"
  input: "classes3/kernel/Read/ReadVariableOp"
  input: "classes4/bias/Read/ReadVariableOp"
  input: "classes4/kernel/Read/ReadVariableOp"
  input: "classes5/bias/Read/ReadVariableOp"
  input: "classes5/kernel/Read/ReadVariableOp"
  input: "classes6/bias/Read/ReadVariableOp"
  input: "classes6/kernel/Read/ReadVariableOp"
  input: "conv10_1/bias/Read/ReadVariableOp"
  input: "conv10_1/kernel/Read/ReadVariableOp"
  input: "conv10_2/bias/Read/ReadVariableOp"
  input: "conv10_2/kernel/Read/ReadVariableOp"
  input: "conv11_1/bias/Read/ReadVariableOp"
  input: "conv11_1/kernel/Read/ReadVariableOp"
  input: "conv11_2/bias/Read/ReadVariableOp"
  input: "conv11_2/kernel/Read/ReadVariableOp"
  input: "conv8_1/bias/Read/ReadVariableOp"
  input: "conv8_1/kernel/Read/ReadVariableOp"
  input: "conv8_2/bias/Read/ReadVariableOp"
  input: "conv8_2/kernel/Read/ReadVariableOp"
  input: "conv9_1/bias/Read/ReadVariableOp"
  input: "conv9_1/kernel/Read/ReadVariableOp"
  input: "conv9_2/bias/Read/ReadVariableOp"
  input: "conv9_2/kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_project/kernel/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  input: "fc7/bias/Read/ReadVariableOp"
  input: "fc7/kernel/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 302
          }
        }
        string_val: "Conv1/kernel"
        string_val: "Conv_1/kernel"
        string_val: "Conv_1_bn/beta"
        string_val: "Conv_1_bn/gamma"
        string_val: "Conv_1_bn/moving_mean"
        string_val: "Conv_1_bn/moving_variance"
        string_val: "block_10_depthwise/depthwise_kernel"
        string_val: "block_10_depthwise_BN/beta"
        string_val: "block_10_depthwise_BN/gamma"
        string_val: "block_10_depthwise_BN/moving_mean"
        string_val: "block_10_depthwise_BN/moving_variance"
        string_val: "block_10_expand/kernel"
        string_val: "block_10_expand_BN/beta"
        string_val: "block_10_expand_BN/gamma"
        string_val: "block_10_expand_BN/moving_mean"
        string_val: "block_10_expand_BN/moving_variance"
        string_val: "block_10_project/kernel"
        string_val: "block_10_project_BN/beta"
        string_val: "block_10_project_BN/gamma"
        string_val: "block_10_project_BN/moving_mean"
        string_val: "block_10_project_BN/moving_variance"
        string_val: "block_11_depthwise/depthwise_kernel"
        string_val: "block_11_depthwise_BN/beta"
        string_val: "block_11_depthwise_BN/gamma"
        string_val: "block_11_depthwise_BN/moving_mean"
        string_val: "block_11_depthwise_BN/moving_variance"
        string_val: "block_11_expand/kernel"
        string_val: "block_11_expand_BN/beta"
        string_val: "block_11_expand_BN/gamma"
        string_val: "block_11_expand_BN/moving_mean"
        string_val: "block_11_expand_BN/moving_variance"
        string_val: "block_11_project/kernel"
        string_val: "block_11_project_BN/beta"
        string_val: "block_11_project_BN/gamma"
        string_val: "block_11_project_BN/moving_mean"
        string_val: "block_11_project_BN/moving_variance"
        string_val: "block_12_depthwise/depthwise_kernel"
        string_val: "block_12_depthwise_BN/beta"
        string_val: "block_12_depthwise_BN/gamma"
        string_val: "block_12_depthwise_BN/moving_mean"
        string_val: "block_12_depthwise_BN/moving_variance"
        string_val: "block_12_expand/kernel"
        string_val: "block_12_expand_BN/beta"
        string_val: "block_12_expand_BN/gamma"
        string_val: "block_12_expand_BN/moving_mean"
        string_val: "block_12_expand_BN/moving_variance"
        string_val: "block_12_project/kernel"
        string_val: "block_12_project_BN/beta"
        string_val: "block_12_project_BN/gamma"
        string_val: "block_12_project_BN/moving_mean"
        string_val: "block_12_project_BN/moving_variance"
        string_val: "block_13_depthwise/depthwise_kernel"
        string_val: "block_13_depthwise_BN/beta"
        string_val: "block_13_depthwise_BN/gamma"
        string_val: "block_13_depthwise_BN/moving_mean"
        string_val: "block_13_depthwise_BN/moving_variance"
        string_val: "block_13_expand/kernel"
        string_val: "block_13_expand_BN/beta"
        string_val: "block_13_expand_BN/gamma"
        string_val: "block_13_expand_BN/moving_mean"
        string_val: "block_13_expand_BN/moving_variance"
        string_val: "block_13_project/kernel"
        string_val: "block_13_project_BN/beta"
        string_val: "block_13_project_BN/gamma"
        string_val: "block_13_project_BN/moving_mean"
        string_val: "block_13_project_BN/moving_variance"
        string_val: "block_14_depthwise/depthwise_kernel"
        string_val: "block_14_depthwise_BN/beta"
        string_val: "block_14_depthwise_BN/gamma"
        string_val: "block_14_depthwise_BN/moving_mean"
        string_val: "block_14_depthwise_BN/moving_variance"
        string_val: "block_14_expand/kernel"
        string_val: "block_14_expand_BN/beta"
        string_val: "block_14_expand_BN/gamma"
        string_val: "block_14_expand_BN/moving_mean"
        string_val: "block_14_expand_BN/moving_variance"
        string_val: "block_14_project/kernel"
        string_val: "block_14_project_BN/beta"
        string_val: "block_14_project_BN/gamma"
        string_val: "block_14_project_BN/moving_mean"
        string_val: "block_14_project_BN/moving_variance"
        string_val: "block_15_depthwise/depthwise_kernel"
        string_val: "block_15_depthwise_BN/beta"
        string_val: "block_15_depthwise_BN/gamma"
        string_val: "block_15_depthwise_BN/moving_mean"
        string_val: "block_15_depthwise_BN/moving_variance"
        string_val: "block_15_expand/kernel"
        string_val: "block_15_expand_BN/beta"
        string_val: "block_15_expand_BN/gamma"
        string_val: "block_15_expand_BN/moving_mean"
        string_val: "block_15_expand_BN/moving_variance"
        string_val: "block_15_project/kernel"
        string_val: "block_15_project_BN/beta"
        string_val: "block_15_project_BN/gamma"
        string_val: "block_15_project_BN/moving_mean"
        string_val: "block_15_project_BN/moving_variance"
        string_val: "block_16_depthwise/depthwise_kernel"
        string_val: "block_16_depthwise_BN/beta"
        string_val: "block_16_depthwise_BN/gamma"
        string_val: "block_16_depthwise_BN/moving_mean"
        string_val: "block_16_depthwise_BN/moving_variance"
        string_val: "block_16_expand/kernel"
        string_val: "block_16_expand_BN/beta"
        string_val: "block_16_expand_BN/gamma"
        string_val: "block_16_expand_BN/moving_mean"
        string_val: "block_16_expand_BN/moving_variance"
        string_val: "block_16_project/kernel"
        string_val: "block_16_project_BN/beta"
        string_val: "block_16_project_BN/gamma"
        string_val: "block_16_project_BN/moving_mean"
        string_val: "block_16_project_BN/moving_variance"
        string_val: "block_1_depthwise/depthwise_kernel"
        string_val: "block_1_depthwise_BN/beta"
        string_val: "block_1_depthwise_BN/gamma"
        string_val: "block_1_depthwise_BN/moving_mean"
        string_val: "block_1_depthwise_BN/moving_variance"
        string_val: "block_1_expand/kernel"
        string_val: "block_1_expand_BN/beta"
        string_val: "block_1_expand_BN/gamma"
        string_val: "block_1_expand_BN/moving_mean"
        string_val: "block_1_expand_BN/moving_variance"
        string_val: "block_1_project/kernel"
        string_val: "block_1_project_BN/beta"
        string_val: "block_1_project_BN/gamma"
        string_val: "block_1_project_BN/moving_mean"
        string_val: "block_1_project_BN/moving_variance"
        string_val: "block_2_depthwise/depthwise_kernel"
        string_val: "block_2_depthwise_BN/beta"
        string_val: "block_2_depthwise_BN/gamma"
        string_val: "block_2_depthwise_BN/moving_mean"
        string_val: "block_2_depthwise_BN/moving_variance"
        string_val: "block_2_expand/kernel"
        string_val: "block_2_expand_BN/beta"
        string_val: "block_2_expand_BN/gamma"
        string_val: "block_2_expand_BN/moving_mean"
        string_val: "block_2_expand_BN/moving_variance"
        string_val: "block_2_project/kernel"
        string_val: "block_2_project_BN/beta"
        string_val: "block_2_project_BN/gamma"
        string_val: "block_2_project_BN/moving_mean"
        string_val: "block_2_project_BN/moving_variance"
        string_val: "block_3_depthwise/depthwise_kernel"
        string_val: "block_3_depthwise_BN/beta"
        string_val: "block_3_depthwise_BN/gamma"
        string_val: "block_3_depthwise_BN/moving_mean"
        string_val: "block_3_depthwise_BN/moving_variance"
        string_val: "block_3_expand/kernel"
        string_val: "block_3_expand_BN/beta"
        string_val: "block_3_expand_BN/gamma"
        string_val: "block_3_expand_BN/moving_mean"
        string_val: "block_3_expand_BN/moving_variance"
        string_val: "block_3_project/kernel"
        string_val: "block_3_project_BN/beta"
        string_val: "block_3_project_BN/gamma"
        string_val: "block_3_project_BN/moving_mean"
        string_val: "block_3_project_BN/moving_variance"
        string_val: "block_4_depthwise/depthwise_kernel"
        string_val: "block_4_depthwise_BN/beta"
        string_val: "block_4_depthwise_BN/gamma"
        string_val: "block_4_depthwise_BN/moving_mean"
        string_val: "block_4_depthwise_BN/moving_variance"
        string_val: "block_4_expand/kernel"
        string_val: "block_4_expand_BN/beta"
        string_val: "block_4_expand_BN/gamma"
        string_val: "block_4_expand_BN/moving_mean"
        string_val: "block_4_expand_BN/moving_variance"
        string_val: "block_4_project/kernel"
        string_val: "block_4_project_BN/beta"
        string_val: "block_4_project_BN/gamma"
        string_val: "block_4_project_BN/moving_mean"
        string_val: "block_4_project_BN/moving_variance"
        string_val: "block_5_depthwise/depthwise_kernel"
        string_val: "block_5_depthwise_BN/beta"
        string_val: "block_5_depthwise_BN/gamma"
        string_val: "block_5_depthwise_BN/moving_mean"
        string_val: "block_5_depthwise_BN/moving_variance"
        string_val: "block_5_expand/kernel"
        string_val: "block_5_expand_BN/beta"
        string_val: "block_5_expand_BN/gamma"
        string_val: "block_5_expand_BN/moving_mean"
        string_val: "block_5_expand_BN/moving_variance"
        string_val: "block_5_project/kernel"
        string_val: "block_5_project_BN/beta"
        string_val: "block_5_project_BN/gamma"
        string_val: "block_5_project_BN/moving_mean"
        string_val: "block_5_project_BN/moving_variance"
        string_val: "block_6_depthwise/depthwise_kernel"
        string_val: "block_6_depthwise_BN/beta"
        string_val: "block_6_depthwise_BN/gamma"
        string_val: "block_6_depthwise_BN/moving_mean"
        string_val: "block_6_depthwise_BN/moving_variance"
        string_val: "block_6_expand/kernel"
        string_val: "block_6_expand_BN/beta"
        string_val: "block_6_expand_BN/gamma"
        string_val: "block_6_expand_BN/moving_mean"
        string_val: "block_6_expand_BN/moving_variance"
        string_val: "block_6_project/kernel"
        string_val: "block_6_project_BN/beta"
        string_val: "block_6_project_BN/gamma"
        string_val: "block_6_project_BN/moving_mean"
        string_val: "block_6_project_BN/moving_variance"
        string_val: "block_7_depthwise/depthwise_kernel"
        string_val: "block_7_depthwise_BN/beta"
        string_val: "block_7_depthwise_BN/gamma"
        string_val: "block_7_depthwise_BN/moving_mean"
        string_val: "block_7_depthwise_BN/moving_variance"
        string_val: "block_7_expand/kernel"
        string_val: "block_7_expand_BN/beta"
        string_val: "block_7_expand_BN/gamma"
        string_val: "block_7_expand_BN/moving_mean"
        string_val: "block_7_expand_BN/moving_variance"
        string_val: "block_7_project/kernel"
        string_val: "block_7_project_BN/beta"
        string_val: "block_7_project_BN/gamma"
        string_val: "block_7_project_BN/moving_mean"
        string_val: "block_7_project_BN/moving_variance"
        string_val: "block_8_depthwise/depthwise_kernel"
        string_val: "block_8_depthwise_BN/beta"
        string_val: "block_8_depthwise_BN/gamma"
        string_val: "block_8_depthwise_BN/moving_mean"
        string_val: "block_8_depthwise_BN/moving_variance"
        string_val: "block_8_expand/kernel"
        string_val: "block_8_expand_BN/beta"
        string_val: "block_8_expand_BN/gamma"
        string_val: "block_8_expand_BN/moving_mean"
        string_val: "block_8_expand_BN/moving_variance"
        string_val: "block_8_project/kernel"
        string_val: "block_8_project_BN/beta"
        string_val: "block_8_project_BN/gamma"
        string_val: "block_8_project_BN/moving_mean"
        string_val: "block_8_project_BN/moving_variance"
        string_val: "block_9_depthwise/depthwise_kernel"
        string_val: "block_9_depthwise_BN/beta"
        string_val: "block_9_depthwise_BN/gamma"
        string_val: "block_9_depthwise_BN/moving_mean"
        string_val: "block_9_depthwise_BN/moving_variance"
        string_val: "block_9_expand/kernel"
        string_val: "block_9_expand_BN/beta"
        string_val: "block_9_expand_BN/gamma"
        string_val: "block_9_expand_BN/moving_mean"
        string_val: "block_9_expand_BN/moving_variance"
        string_val: "block_9_project/kernel"
        string_val: "block_9_project_BN/beta"
        string_val: "block_9_project_BN/gamma"
        string_val: "block_9_project_BN/moving_mean"
        string_val: "block_9_project_BN/moving_variance"
        string_val: "bn_Conv1/beta"
        string_val: "bn_Conv1/gamma"
        string_val: "bn_Conv1/moving_mean"
        string_val: "bn_Conv1/moving_variance"
        string_val: "boxes1/bias"
        string_val: "boxes1/kernel"
        string_val: "boxes2/bias"
        string_val: "boxes2/kernel"
        string_val: "boxes3/bias"
        string_val: "boxes3/kernel"
        string_val: "boxes4/bias"
        string_val: "boxes4/kernel"
        string_val: "boxes5/bias"
        string_val: "boxes5/kernel"
        string_val: "boxes6/bias"
        string_val: "boxes6/kernel"
        string_val: "classes1/bias"
        string_val: "classes1/kernel"
        string_val: "classes2/bias"
        string_val: "classes2/kernel"
        string_val: "classes3/bias"
        string_val: "classes3/kernel"
        string_val: "classes4/bias"
        string_val: "classes4/kernel"
        string_val: "classes5/bias"
        string_val: "classes5/kernel"
        string_val: "classes6/bias"
        string_val: "classes6/kernel"
        string_val: "conv10_1/bias"
        string_val: "conv10_1/kernel"
        string_val: "conv10_2/bias"
        string_val: "conv10_2/kernel"
        string_val: "conv11_1/bias"
        string_val: "conv11_1/kernel"
        string_val: "conv11_2/bias"
        string_val: "conv11_2/kernel"
        string_val: "conv8_1/bias"
        string_val: "conv8_1/kernel"
        string_val: "conv8_2/bias"
        string_val: "conv8_2/kernel"
        string_val: "conv9_1/bias"
        string_val: "conv9_1/kernel"
        string_val: "conv9_2/bias"
        string_val: "conv9_2/kernel"
        string_val: "expanded_conv_depthwise/depthwise_kernel"
        string_val: "expanded_conv_depthwise_BN/beta"
        string_val: "expanded_conv_depthwise_BN/gamma"
        string_val: "expanded_conv_depthwise_BN/moving_mean"
        string_val: "expanded_conv_depthwise_BN/moving_variance"
        string_val: "expanded_conv_project/kernel"
        string_val: "expanded_conv_project_BN/beta"
        string_val: "expanded_conv_project_BN/gamma"
        string_val: "expanded_conv_project_BN/moving_mean"
        string_val: "expanded_conv_project_BN/moving_variance"
        string_val: "fc7/bias"
        string_val: "fc7/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 302
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_198"
  op: "Identity"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "save/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_199"
  op: "Identity"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "save/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_200"
  op: "Identity"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "save/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_201"
  op: "Identity"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "save/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_202"
  op: "Identity"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "save/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_203"
  op: "Identity"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "save/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_204"
  op: "Identity"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "save/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_205"
  op: "Identity"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "save/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_206"
  op: "Identity"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "save/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_207"
  op: "Identity"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "save/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_208"
  op: "Identity"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "save/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_209"
  op: "Identity"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "save/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_210"
  op: "Identity"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "save/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_211"
  op: "Identity"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "save/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_212"
  op: "Identity"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "save/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_213"
  op: "Identity"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "save/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_214"
  op: "Identity"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "save/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_215"
  op: "Identity"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "save/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_216"
  op: "Identity"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "save/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_217"
  op: "Identity"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "save/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_218"
  op: "Identity"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "save/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_219"
  op: "Identity"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "save/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_220"
  op: "Identity"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "save/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_221"
  op: "Identity"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "save/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_222"
  op: "Identity"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "save/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_223"
  op: "Identity"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "save/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_224"
  op: "Identity"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "save/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_225"
  op: "Identity"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "save/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_226"
  op: "Identity"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "save/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_227"
  op: "Identity"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "save/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_228"
  op: "Identity"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "save/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_229"
  op: "Identity"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "save/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_230"
  op: "Identity"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "save/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_231"
  op: "Identity"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "save/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_232"
  op: "Identity"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "save/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_233"
  op: "Identity"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "save/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_234"
  op: "Identity"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "save/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_235"
  op: "Identity"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "save/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_236"
  op: "Identity"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "save/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_237"
  op: "Identity"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "save/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_238"
  op: "Identity"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "save/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_239"
  op: "Identity"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "save/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_240"
  op: "Identity"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "save/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_241"
  op: "Identity"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "save/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_242"
  op: "Identity"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "save/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_243"
  op: "Identity"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "save/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_244"
  op: "Identity"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "save/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_245"
  op: "Identity"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "save/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_246"
  op: "Identity"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "save/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_247"
  op: "Identity"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "save/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_248"
  op: "Identity"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "save/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_249"
  op: "Identity"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "save/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_250"
  op: "Identity"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "boxes1/bias"
  input: "save/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_251"
  op: "Identity"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "boxes1/kernel"
  input: "save/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_252"
  op: "Identity"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "boxes2/bias"
  input: "save/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_253"
  op: "Identity"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "boxes2/kernel"
  input: "save/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_254"
  op: "Identity"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "boxes3/bias"
  input: "save/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_255"
  op: "Identity"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "boxes3/kernel"
  input: "save/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_256"
  op: "Identity"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "boxes4/bias"
  input: "save/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_257"
  op: "Identity"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "boxes4/kernel"
  input: "save/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_258"
  op: "Identity"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "boxes5/bias"
  input: "save/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_259"
  op: "Identity"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "boxes5/kernel"
  input: "save/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_260"
  op: "Identity"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "boxes6/bias"
  input: "save/Identity_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_261"
  op: "Identity"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "boxes6/kernel"
  input: "save/Identity_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_262"
  op: "Identity"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "classes1/bias"
  input: "save/Identity_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_263"
  op: "Identity"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "classes1/kernel"
  input: "save/Identity_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_264"
  op: "Identity"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_264"
  op: "AssignVariableOp"
  input: "classes2/bias"
  input: "save/Identity_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_265"
  op: "Identity"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_265"
  op: "AssignVariableOp"
  input: "classes2/kernel"
  input: "save/Identity_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_266"
  op: "Identity"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_266"
  op: "AssignVariableOp"
  input: "classes3/bias"
  input: "save/Identity_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_267"
  op: "Identity"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_267"
  op: "AssignVariableOp"
  input: "classes3/kernel"
  input: "save/Identity_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_268"
  op: "Identity"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_268"
  op: "AssignVariableOp"
  input: "classes4/bias"
  input: "save/Identity_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_269"
  op: "Identity"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_269"
  op: "AssignVariableOp"
  input: "classes4/kernel"
  input: "save/Identity_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_270"
  op: "Identity"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_270"
  op: "AssignVariableOp"
  input: "classes5/bias"
  input: "save/Identity_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_271"
  op: "Identity"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_271"
  op: "AssignVariableOp"
  input: "classes5/kernel"
  input: "save/Identity_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_272"
  op: "Identity"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_272"
  op: "AssignVariableOp"
  input: "classes6/bias"
  input: "save/Identity_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_273"
  op: "Identity"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_273"
  op: "AssignVariableOp"
  input: "classes6/kernel"
  input: "save/Identity_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_274"
  op: "Identity"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_274"
  op: "AssignVariableOp"
  input: "conv10_1/bias"
  input: "save/Identity_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_275"
  op: "Identity"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_275"
  op: "AssignVariableOp"
  input: "conv10_1/kernel"
  input: "save/Identity_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_276"
  op: "Identity"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_276"
  op: "AssignVariableOp"
  input: "conv10_2/bias"
  input: "save/Identity_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_277"
  op: "Identity"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_277"
  op: "AssignVariableOp"
  input: "conv10_2/kernel"
  input: "save/Identity_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_278"
  op: "Identity"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_278"
  op: "AssignVariableOp"
  input: "conv11_1/bias"
  input: "save/Identity_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_279"
  op: "Identity"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_279"
  op: "AssignVariableOp"
  input: "conv11_1/kernel"
  input: "save/Identity_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_280"
  op: "Identity"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_280"
  op: "AssignVariableOp"
  input: "conv11_2/bias"
  input: "save/Identity_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_281"
  op: "Identity"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_281"
  op: "AssignVariableOp"
  input: "conv11_2/kernel"
  input: "save/Identity_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_282"
  op: "Identity"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_282"
  op: "AssignVariableOp"
  input: "conv8_1/bias"
  input: "save/Identity_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_283"
  op: "Identity"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_283"
  op: "AssignVariableOp"
  input: "conv8_1/kernel"
  input: "save/Identity_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_284"
  op: "Identity"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_284"
  op: "AssignVariableOp"
  input: "conv8_2/bias"
  input: "save/Identity_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_285"
  op: "Identity"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_285"
  op: "AssignVariableOp"
  input: "conv8_2/kernel"
  input: "save/Identity_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_286"
  op: "Identity"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_286"
  op: "AssignVariableOp"
  input: "conv9_1/bias"
  input: "save/Identity_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_287"
  op: "Identity"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_287"
  op: "AssignVariableOp"
  input: "conv9_1/kernel"
  input: "save/Identity_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_288"
  op: "Identity"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_288"
  op: "AssignVariableOp"
  input: "conv9_2/bias"
  input: "save/Identity_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_289"
  op: "Identity"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_289"
  op: "AssignVariableOp"
  input: "conv9_2/kernel"
  input: "save/Identity_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_290"
  op: "Identity"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_290"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "save/Identity_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_291"
  op: "Identity"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_291"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "save/Identity_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_292"
  op: "Identity"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_292"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "save/Identity_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_293"
  op: "Identity"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_293"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "save/Identity_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_294"
  op: "Identity"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_294"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "save/Identity_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_295"
  op: "Identity"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_295"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "save/Identity_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_296"
  op: "Identity"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_296"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "save/Identity_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_297"
  op: "Identity"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_297"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "save/Identity_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_298"
  op: "Identity"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_298"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "save/Identity_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_299"
  op: "Identity"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_299"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "save/Identity_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_300"
  op: "Identity"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_300"
  op: "AssignVariableOp"
  input: "fc7/bias"
  input: "save/Identity_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_301"
  op: "Identity"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_301"
  op: "AssignVariableOp"
  input: "fc7/kernel"
  input: "save/Identity_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_198"
  input: "^save/AssignVariableOp_199"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_200"
  input: "^save/AssignVariableOp_201"
  input: "^save/AssignVariableOp_202"
  input: "^save/AssignVariableOp_203"
  input: "^save/AssignVariableOp_204"
  input: "^save/AssignVariableOp_205"
  input: "^save/AssignVariableOp_206"
  input: "^save/AssignVariableOp_207"
  input: "^save/AssignVariableOp_208"
  input: "^save/AssignVariableOp_209"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_210"
  input: "^save/AssignVariableOp_211"
  input: "^save/AssignVariableOp_212"
  input: "^save/AssignVariableOp_213"
  input: "^save/AssignVariableOp_214"
  input: "^save/AssignVariableOp_215"
  input: "^save/AssignVariableOp_216"
  input: "^save/AssignVariableOp_217"
  input: "^save/AssignVariableOp_218"
  input: "^save/AssignVariableOp_219"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_220"
  input: "^save/AssignVariableOp_221"
  input: "^save/AssignVariableOp_222"
  input: "^save/AssignVariableOp_223"
  input: "^save/AssignVariableOp_224"
  input: "^save/AssignVariableOp_225"
  input: "^save/AssignVariableOp_226"
  input: "^save/AssignVariableOp_227"
  input: "^save/AssignVariableOp_228"
  input: "^save/AssignVariableOp_229"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_230"
  input: "^save/AssignVariableOp_231"
  input: "^save/AssignVariableOp_232"
  input: "^save/AssignVariableOp_233"
  input: "^save/AssignVariableOp_234"
  input: "^save/AssignVariableOp_235"
  input: "^save/AssignVariableOp_236"
  input: "^save/AssignVariableOp_237"
  input: "^save/AssignVariableOp_238"
  input: "^save/AssignVariableOp_239"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_240"
  input: "^save/AssignVariableOp_241"
  input: "^save/AssignVariableOp_242"
  input: "^save/AssignVariableOp_243"
  input: "^save/AssignVariableOp_244"
  input: "^save/AssignVariableOp_245"
  input: "^save/AssignVariableOp_246"
  input: "^save/AssignVariableOp_247"
  input: "^save/AssignVariableOp_248"
  input: "^save/AssignVariableOp_249"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_250"
  input: "^save/AssignVariableOp_251"
  input: "^save/AssignVariableOp_252"
  input: "^save/AssignVariableOp_253"
  input: "^save/AssignVariableOp_254"
  input: "^save/AssignVariableOp_255"
  input: "^save/AssignVariableOp_256"
  input: "^save/AssignVariableOp_257"
  input: "^save/AssignVariableOp_258"
  input: "^save/AssignVariableOp_259"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_260"
  input: "^save/AssignVariableOp_261"
  input: "^save/AssignVariableOp_262"
  input: "^save/AssignVariableOp_263"
  input: "^save/AssignVariableOp_264"
  input: "^save/AssignVariableOp_265"
  input: "^save/AssignVariableOp_266"
  input: "^save/AssignVariableOp_267"
  input: "^save/AssignVariableOp_268"
  input: "^save/AssignVariableOp_269"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_270"
  input: "^save/AssignVariableOp_271"
  input: "^save/AssignVariableOp_272"
  input: "^save/AssignVariableOp_273"
  input: "^save/AssignVariableOp_274"
  input: "^save/AssignVariableOp_275"
  input: "^save/AssignVariableOp_276"
  input: "^save/AssignVariableOp_277"
  input: "^save/AssignVariableOp_278"
  input: "^save/AssignVariableOp_279"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_280"
  input: "^save/AssignVariableOp_281"
  input: "^save/AssignVariableOp_282"
  input: "^save/AssignVariableOp_283"
  input: "^save/AssignVariableOp_284"
  input: "^save/AssignVariableOp_285"
  input: "^save/AssignVariableOp_286"
  input: "^save/AssignVariableOp_287"
  input: "^save/AssignVariableOp_288"
  input: "^save/AssignVariableOp_289"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_290"
  input: "^save/AssignVariableOp_291"
  input: "^save/AssignVariableOp_292"
  input: "^save/AssignVariableOp_293"
  input: "^save/AssignVariableOp_294"
  input: "^save/AssignVariableOp_295"
  input: "^save/AssignVariableOp_296"
  input: "^save/AssignVariableOp_297"
  input: "^save/AssignVariableOp_298"
  input: "^save/AssignVariableOp_299"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_300"
  input: "^save/AssignVariableOp_301"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
versions {
  producer: 134
}
